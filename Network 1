{"cells":[{"cell_type":"markdown","metadata":{"id":"eFXEYRqIab1C"},"source":["Name: Nishad Rajmalwar,\n","Batch: 7,\n","Email: nrajmalwar@gmail.com"]},{"cell_type":"markdown","metadata":{"id":"sZQ1u9HB-XZu"},"source":["#Model Architecture Builder Code"]},{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":19735,"status":"ok","timestamp":1639807466481,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"8edSiHPi2N5l"},"outputs":[],"source":["# https://keras.io/\n","!pip install -q keras\n","import tensorflow as tf\n","import keras\n","from keras.models import Model, Sequential\n","from keras.layers import Dense, Dropout, Flatten, Input, AveragePooling2D, merge, Activation, GlobalAveragePooling2D\n","from keras.layers import Conv2D, MaxPooling2D, BatchNormalization\n","from keras.layers import Concatenate\n","from tensorflow.keras.optimizers import Adam\n","from keras.layers import Reshape, Activation, Conv2D, Input, MaxPooling2D, BatchNormalization, Flatten, Dense, Lambda\n","from keras.layers.merge import concatenate\n","from keras.callbacks import ModelCheckpoint\n","from keras.models import load_model\n","\n","from keras.preprocessing.image import ImageDataGenerator\n","from keras.utils import np_utils\n","from keras.callbacks import ReduceLROnPlateau, CSVLogger, EarlyStopping\n","from keras.models import load_model\n","from keras.callbacks import *\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","\n","# this part will prevent tensorflow to allocate all the avaliable GPU Memory\n","# backend\n","import tensorflow as tf\n","from keras import backend as k\n","\n","# Don't pre-allocate memory; allocate as-needed\n","config = tf.compat.v1.ConfigProto()\n","config.gpu_options.allow_growth = True\n","\n","# Create a session with the above options specified.\n","tf.compat.v1.keras.backend.set_session(tf.compat.v1.Session(config=config))\n","\n","# Hyperparameters\n","\n","# number of classes\n","num_classes = 200\n","# input image dimensions\n","img_height, img_width = 32, 32\n","# The images are RGB.\n","img_channels = 3"]},{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":154,"status":"ok","timestamp":1639807486730,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"ztoDypc63gEs"},"outputs":[],"source":["def space_to_depth_x2(x):\n","    import tensorflow as tf\n","    return tf.nn.space_to_depth(x, block_size=2)"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":599,"status":"ok","timestamp":1639807488941,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"SNnGm8Tv2fR1"},"outputs":[],"source":["input = Input(shape=(None, None, img_channels))\n","\n","# Block 1\n","\n","layer1 = Conv2D(32, (3,3), strides=(1,1), padding='same', name='conv_1', use_bias=False)(input)\n","layer1 = BatchNormalization(name='norm_1')(layer1)\n","layer1 = Activation(\"relu\")(layer1)\n","\n","layer2 = Conv2D(64, (3,3), strides=(1,1), padding='same', name='conv_2', use_bias=False)(layer1)\n","layer2 = BatchNormalization(name='norm_2')(layer2)\n","layer2 = Activation(\"relu\")(layer2)\n","\n","layer3 = Conv2D(128, (3,3), strides=(1,1), padding='same', name='conv_3', use_bias=False)(layer2)\n","layer3 = BatchNormalization(name='norm_3')(layer3)\n","layer3 = Activation(\"relu\")(layer3)\n","\n","layer4 = Conv2D(256, (3,3), strides=(1,1), padding='same', name='conv_4', use_bias=False)(layer3)\n","layer4 = BatchNormalization(name='norm_4')(layer4)\n","layer4 = Activation(\"relu\")(layer4)\n","\n","layer5 = Conv2D(512, (3,3), strides=(1,1), padding='same', name='conv_5', use_bias=False)(layer4)\n","layer5 = BatchNormalization(name='norm_5')(layer5)\n","layer5 = Activation(\"relu\")(layer5)\n","\n","layer6 = MaxPooling2D(pool_size=(2, 2))(layer5)\n","\n","skip_connection_1 = layer6\n","\n","# Block 2\n","\n","layer7 = Conv2D(64, (3,3), strides=(1,1), padding='same', name='conv_7', use_bias=False)(layer6)\n","layer7 = BatchNormalization(name='norm_7')(layer7)\n","layer7 = Activation(\"relu\")(layer7)\n","\n","layer8 = Conv2D(128, (3,3), strides=(1,1), padding='same', name='conv_8', use_bias=False)(layer7)\n","layer8 = BatchNormalization(name='norm_8')(layer8)\n","layer8 = Activation(\"relu\")(layer8)\n","\n","layer9 = Conv2D(256, (3,3), strides=(1,1), padding='same', name='conv_9', use_bias=False)(layer8)\n","layer9 = BatchNormalization(name='norm_9')(layer9)\n","layer9 = Activation(\"relu\")(layer9)\n","\n","layer10 = Conv2D(512, (3,3), strides=(1,1), padding='same', name='conv_10', use_bias=False)(layer9)\n","layer10 = BatchNormalization(name='norm_10')(layer10)\n","layer10 = Activation(\"relu\")(layer10)\n","\n","layer11 = Conv2D(1024, (3,3), strides=(1,1), padding='same', name='conv_11', use_bias=False)(layer10)\n","layer11 = BatchNormalization(name='norm_11')(layer11)\n","layer11 = Activation(\"relu\")(layer11)\n","\n","layer12 = MaxPooling2D(pool_size=(2, 2))(layer11)\n","\n","skip_connection_1 = Lambda(space_to_depth_x2)(skip_connection_1)\n","\n","layer13 = concatenate([skip_connection_1, layer12])\n","\n","skip_connection_2 = layer13\n","\n","# Block 3\n","\n","layer14 = Conv2D(32, (3,3), strides=(1,1), padding='same', name='conv_14', use_bias=False)(layer13)\n","layer14 = BatchNormalization(name='norm_14')(layer14)\n","layer14 = Activation(\"relu\")(layer14)\n","\n","layer15 = Conv2D(128, (3,3), strides=(1,1), padding='same', name='conv_15', use_bias=False)(layer14)\n","layer15 = BatchNormalization(name='norm_15')(layer15)\n","layer15 = Activation(\"relu\")(layer15)\n","\n","layer16 = Conv2D(256, (3,3), strides=(1,1), padding='same', name='conv_16', use_bias=False)(layer15)\n","layer16 = BatchNormalization(name='norm_16')(layer16)\n","layer16 = Activation(\"relu\")(layer16)\n","\n","layer17 = Conv2D(512, (3,3), strides=(1,1), padding='same', name='conv_17', use_bias=False)(layer16)\n","layer17 = BatchNormalization(name='norm_17')(layer17)\n","layer17 = Activation(\"relu\")(layer17)\n","\n","layer18 = Conv2D(1024, (3,3), strides=(1,1), padding='same', name='conv_18', use_bias=False)(layer17)\n","layer18 = BatchNormalization(name='norm_18')(layer18)\n","layer18 = Activation(\"relu\")(layer18)\n","\n","layer19 = MaxPooling2D(pool_size=(2, 2))(layer18)\n","\n","skip_connection_2 = Lambda(space_to_depth_x2)(skip_connection_2)\n","\n","layer20 = concatenate([skip_connection_2, layer19])\n","\n","layer21 = Conv2D(num_classes, (1,1), name='conv_21', use_bias=False)(layer20)\n","layer21 = BatchNormalization(name='norm_21')(layer21)\n","\n","layer22 = GlobalAveragePooling2D(data_format=None)(layer21)\n","\n","layer23 = Activation('softmax')(layer22)\n","\n","output = layer23\n"]},{"cell_type":"markdown","metadata":{"id":"uPFcNRhmd3K4"},"source":["#Import Dataset"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15196,"status":"ok","timestamp":1639807515306,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"Rbga60bNW5qn","outputId":"c2c96e48-0b99-4079-c0ff-50fc22d0d0dc"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":34341,"status":"ok","timestamp":1639807553530,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"2-uxInsGaQTb","outputId":"47776943-5e72-434f-f5bd-ee0e9b77f417"},"outputs":[{"name":"stdout","output_type":"stream","text":["--2021-12-18 06:05:19--  http://cs231n.stanford.edu/tiny-imagenet-200.zip\n","Resolving cs231n.stanford.edu (cs231n.stanford.edu)... 171.64.68.10\n","Connecting to cs231n.stanford.edu (cs231n.stanford.edu)|171.64.68.10|:80... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 248100043 (237M) [application/zip]\n","Saving to: ‘tiny-imagenet-200.zip’\n","\n","tiny-imagenet-200.z 100%[===================\u003e] 236.61M  7.72MB/s    in 26s     \n","\n","2021-12-18 06:05:45 (9.09 MB/s) - ‘tiny-imagenet-200.zip’ saved [248100043/248100043]\n","\n"]}],"source":["!wget http://cs231n.stanford.edu/tiny-imagenet-200.zip\n","!unzip -qq 'tiny-imagenet-200.zip'"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":142},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1639807553531,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"r7SjAhI2Jskn","outputId":"aa9ad748-9788-420e-9b6e-de4502ed5d84"},"outputs":[{"data":{"text/html":["\n","  \u003cdiv id=\"df-e0e1f7f1-fb0d-42e0-a363-e483ab9aa921\"\u003e\n","    \u003cdiv class=\"colab-df-container\"\u003e\n","      \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eFile\u003c/th\u003e\n","      \u003cth\u003eClass\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003eval_0.JPEG\u003c/td\u003e\n","      \u003ctd\u003en03444034\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003eval_1.JPEG\u003c/td\u003e\n","      \u003ctd\u003en04067472\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003eval_2.JPEG\u003c/td\u003e\n","      \u003ctd\u003en04070727\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","      \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e0e1f7f1-fb0d-42e0-a363-e483ab9aa921')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\"\u003e\n","        \n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M0 0h24v24H0V0z\" fill=\"none\"/\u003e\n","    \u003cpath d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/\u003e\u003cpath d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/\u003e\n","  \u003c/svg\u003e\n","      \u003c/button\u003e\n","      \n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","      \u003cscript\u003e\n","        const buttonEl =\n","          document.querySelector('#df-e0e1f7f1-fb0d-42e0-a363-e483ab9aa921 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e0e1f7f1-fb0d-42e0-a363-e483ab9aa921');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      \u003c/script\u003e\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n","  "],"text/plain":["         File      Class\n","0  val_0.JPEG  n03444034\n","1  val_1.JPEG  n04067472\n","2  val_2.JPEG  n04070727"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["val_data = pd.read_csv('./tiny-imagenet-200/val/val_annotations.txt', sep='\\t', header=None, names=['File', 'Class', 'X', 'Y', 'H', 'W'])\n","val_data.drop(['X', 'Y', 'H', 'W'], axis=1, inplace=True)\n","val_data.head(3)"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":13,"status":"ok","timestamp":1639807553532,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"wRYLyZtwKKDp"},"outputs":[],"source":["train_datagen = ImageDataGenerator(\n","    rescale= 1./255)\n","\n","valid_datagen = ImageDataGenerator(rescale=1./255)"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5899,"status":"ok","timestamp":1639807559420,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"igYtU_VSKXto","outputId":"d0f9a3c8-ad25-4b00-cd27-d65720a70e37"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 100000 images belonging to 200 classes.\n"]}],"source":["train_generator = train_datagen.flow_from_directory( r'./tiny-imagenet-200/train/', target_size=(32, 32), color_mode='rgb', \n","                                                    batch_size=256, class_mode='categorical', shuffle=True, seed=42)"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":155,"status":"ok","timestamp":1639807559976,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"UBRfC4SdKbca","outputId":"05a67d6d-d71f-4ed9-985a-d882aa6b070f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 10000 validated image filenames belonging to 200 classes.\n"]}],"source":["validation_generator = valid_datagen.flow_from_dataframe(val_data, directory='./tiny-imagenet-200/val/images/', x_col='File', y_col='Class', target_size=(64, 64),\n","                                                    color_mode='rgb', class_mode='categorical', batch_size=256, shuffle=True, seed=42)"]},{"cell_type":"markdown","metadata":{"id":"dSZCfzq3LctT"},"source":["#Model"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1639807559977,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"Jeh0VAxy26NV","outputId":"e5814871-95c4-4e30-9ce0-c12f30b717b0"},"outputs":[{"name":"stdout","output_type":"stream","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_1 (InputLayer)           [(None, None, None,  0           []                               \n","                                 3)]                                                              \n","                                                                                                  \n"," conv_1 (Conv2D)                (None, None, None,   864         ['input_1[0][0]']                \n","                                32)                                                               \n","                                                                                                  \n"," norm_1 (BatchNormalization)    (None, None, None,   128         ['conv_1[0][0]']                 \n","                                32)                                                               \n","                                                                                                  \n"," activation (Activation)        (None, None, None,   0           ['norm_1[0][0]']                 \n","                                32)                                                               \n","                                                                                                  \n"," conv_2 (Conv2D)                (None, None, None,   18432       ['activation[0][0]']             \n","                                64)                                                               \n","                                                                                                  \n"," norm_2 (BatchNormalization)    (None, None, None,   256         ['conv_2[0][0]']                 \n","                                64)                                                               \n","                                                                                                  \n"," activation_1 (Activation)      (None, None, None,   0           ['norm_2[0][0]']                 \n","                                64)                                                               \n","                                                                                                  \n"," conv_3 (Conv2D)                (None, None, None,   73728       ['activation_1[0][0]']           \n","                                128)                                                              \n","                                                                                                  \n"," norm_3 (BatchNormalization)    (None, None, None,   512         ['conv_3[0][0]']                 \n","                                128)                                                              \n","                                                                                                  \n"," activation_2 (Activation)      (None, None, None,   0           ['norm_3[0][0]']                 \n","                                128)                                                              \n","                                                                                                  \n"," conv_4 (Conv2D)                (None, None, None,   294912      ['activation_2[0][0]']           \n","                                256)                                                              \n","                                                                                                  \n"," norm_4 (BatchNormalization)    (None, None, None,   1024        ['conv_4[0][0]']                 \n","                                256)                                                              \n","                                                                                                  \n"," activation_3 (Activation)      (None, None, None,   0           ['norm_4[0][0]']                 \n","                                256)                                                              \n","                                                                                                  \n"," conv_5 (Conv2D)                (None, None, None,   1179648     ['activation_3[0][0]']           \n","                                512)                                                              \n","                                                                                                  \n"," norm_5 (BatchNormalization)    (None, None, None,   2048        ['conv_5[0][0]']                 \n","                                512)                                                              \n","                                                                                                  \n"," activation_4 (Activation)      (None, None, None,   0           ['norm_5[0][0]']                 \n","                                512)                                                              \n","                                                                                                  \n"," max_pooling2d (MaxPooling2D)   (None, None, None,   0           ['activation_4[0][0]']           \n","                                512)                                                              \n","                                                                                                  \n"," conv_7 (Conv2D)                (None, None, None,   294912      ['max_pooling2d[0][0]']          \n","                                64)                                                               \n","                                                                                                  \n"," norm_7 (BatchNormalization)    (None, None, None,   256         ['conv_7[0][0]']                 \n","                                64)                                                               \n","                                                                                                  \n"," activation_5 (Activation)      (None, None, None,   0           ['norm_7[0][0]']                 \n","                                64)                                                               \n","                                                                                                  \n"," conv_8 (Conv2D)                (None, None, None,   73728       ['activation_5[0][0]']           \n","                                128)                                                              \n","                                                                                                  \n"," norm_8 (BatchNormalization)    (None, None, None,   512         ['conv_8[0][0]']                 \n","                                128)                                                              \n","                                                                                                  \n"," activation_6 (Activation)      (None, None, None,   0           ['norm_8[0][0]']                 \n","                                128)                                                              \n","                                                                                                  \n"," conv_9 (Conv2D)                (None, None, None,   294912      ['activation_6[0][0]']           \n","                                256)                                                              \n","                                                                                                  \n"," norm_9 (BatchNormalization)    (None, None, None,   1024        ['conv_9[0][0]']                 \n","                                256)                                                              \n","                                                                                                  \n"," activation_7 (Activation)      (None, None, None,   0           ['norm_9[0][0]']                 \n","                                256)                                                              \n","                                                                                                  \n"," conv_10 (Conv2D)               (None, None, None,   1179648     ['activation_7[0][0]']           \n","                                512)                                                              \n","                                                                                                  \n"," norm_10 (BatchNormalization)   (None, None, None,   2048        ['conv_10[0][0]']                \n","                                512)                                                              \n","                                                                                                  \n"," activation_8 (Activation)      (None, None, None,   0           ['norm_10[0][0]']                \n","                                512)                                                              \n","                                                                                                  \n"," conv_11 (Conv2D)               (None, None, None,   4718592     ['activation_8[0][0]']           \n","                                1024)                                                             \n","                                                                                                  \n"," norm_11 (BatchNormalization)   (None, None, None,   4096        ['conv_11[0][0]']                \n","                                1024)                                                             \n","                                                                                                  \n"," activation_9 (Activation)      (None, None, None,   0           ['norm_11[0][0]']                \n","                                1024)                                                             \n","                                                                                                  \n"," lambda (Lambda)                (None, None, None,   0           ['max_pooling2d[0][0]']          \n","                                2048)                                                             \n","                                                                                                  \n"," max_pooling2d_1 (MaxPooling2D)  (None, None, None,   0          ['activation_9[0][0]']           \n","                                1024)                                                             \n","                                                                                                  \n"," concatenate (Concatenate)      (None, None, None,   0           ['lambda[0][0]',                 \n","                                3072)                             'max_pooling2d_1[0][0]']        \n","                                                                                                  \n"," conv_14 (Conv2D)               (None, None, None,   884736      ['concatenate[0][0]']            \n","                                32)                                                               \n","                                                                                                  \n"," norm_14 (BatchNormalization)   (None, None, None,   128         ['conv_14[0][0]']                \n","                                32)                                                               \n","                                                                                                  \n"," activation_10 (Activation)     (None, None, None,   0           ['norm_14[0][0]']                \n","                                32)                                                               \n","                                                                                                  \n"," conv_15 (Conv2D)               (None, None, None,   36864       ['activation_10[0][0]']          \n","                                128)                                                              \n","                                                                                                  \n"," norm_15 (BatchNormalization)   (None, None, None,   512         ['conv_15[0][0]']                \n","                                128)                                                              \n","                                                                                                  \n"," activation_11 (Activation)     (None, None, None,   0           ['norm_15[0][0]']                \n","                                128)                                                              \n","                                                                                                  \n"," conv_16 (Conv2D)               (None, None, None,   294912      ['activation_11[0][0]']          \n","                                256)                                                              \n","                                                                                                  \n"," norm_16 (BatchNormalization)   (None, None, None,   1024        ['conv_16[0][0]']                \n","                                256)                                                              \n","                                                                                                  \n"," activation_12 (Activation)     (None, None, None,   0           ['norm_16[0][0]']                \n","                                256)                                                              \n","                                                                                                  \n"," conv_17 (Conv2D)               (None, None, None,   1179648     ['activation_12[0][0]']          \n","                                512)                                                              \n","                                                                                                  \n"," norm_17 (BatchNormalization)   (None, None, None,   2048        ['conv_17[0][0]']                \n","                                512)                                                              \n","                                                                                                  \n"," activation_13 (Activation)     (None, None, None,   0           ['norm_17[0][0]']                \n","                                512)                                                              \n","                                                                                                  \n"," conv_18 (Conv2D)               (None, None, None,   4718592     ['activation_13[0][0]']          \n","                                1024)                                                             \n","                                                                                                  \n"," norm_18 (BatchNormalization)   (None, None, None,   4096        ['conv_18[0][0]']                \n","                                1024)                                                             \n","                                                                                                  \n"," activation_14 (Activation)     (None, None, None,   0           ['norm_18[0][0]']                \n","                                1024)                                                             \n","                                                                                                  \n"," lambda_1 (Lambda)              (None, None, None,   0           ['concatenate[0][0]']            \n","                                12288)                                                            \n","                                                                                                  \n"," max_pooling2d_2 (MaxPooling2D)  (None, None, None,   0          ['activation_14[0][0]']          \n","                                1024)                                                             \n","                                                                                                  \n"," concatenate_1 (Concatenate)    (None, None, None,   0           ['lambda_1[0][0]',               \n","                                13312)                            'max_pooling2d_2[0][0]']        \n","                                                                                                  \n"," conv_21 (Conv2D)               (None, None, None,   2662400     ['concatenate_1[0][0]']          \n","                                200)                                                              \n","                                                                                                  \n"," norm_21 (BatchNormalization)   (None, None, None,   800         ['conv_21[0][0]']                \n","                                200)                                                              \n","                                                                                                  \n"," global_average_pooling2d (Glob  (None, 200)         0           ['norm_21[0][0]']                \n"," alAveragePooling2D)                                                                              \n","                                                                                                  \n"," activation_15 (Activation)     (None, 200)          0           ['global_average_pooling2d[0][0]'\n","                                                                 ]                                \n","                                                                                                  \n","==================================================================================================\n","Total params: 17,927,040\n","Trainable params: 17,916,784\n","Non-trainable params: 10,256\n","__________________________________________________________________________________________________\n"]}],"source":["model = Model(inputs=[input], outputs=[output])\n","model.summary()"]},{"cell_type":"code","execution_count":13,"metadata":{"executionInfo":{"elapsed":123,"status":"ok","timestamp":1639807730835,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"apCwOjvZ4Kts"},"outputs":[],"source":["lr_reducer = ReduceLROnPlateau(factor=np.sqrt(0.1), cooldown=0, patience=5, min_lr=0.5e-6)\n","\n","model.compile(loss='categorical_crossentropy',\n","              optimizer='adam',\n","              metrics=['accuracy'])"]},{"cell_type":"markdown","metadata":{"id":"UxCBlIY7EBcX"},"source":["#Model Training"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1190521,"status":"ok","timestamp":1639808925799,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"tLaFy2AO4TLl","outputId":"85eb51b1-1c0a-4911-8c89-2e0147c5f9d2"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  \"\"\"Entry point for launching an IPython kernel.\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 4.5020 - accuracy: 0.0963WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 123s 547ms/step - loss: 4.5020 - accuracy: 0.0963 - val_loss: 5.9084 - val_accuracy: 0.0073 - lr: 0.0010\n","Epoch 2/15\n","200/200 [==============================] - ETA: 0s - loss: 3.9648 - accuracy: 0.1721WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 3.9648 - accuracy: 0.1721 - lr: 0.0010\n","Epoch 3/15\n","200/200 [==============================] - ETA: 0s - loss: 3.6222 - accuracy: 0.2229WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 3.6222 - accuracy: 0.2229 - lr: 0.0010\n","Epoch 4/15\n","200/200 [==============================] - ETA: 0s - loss: 3.3704 - accuracy: 0.2654WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 3.3704 - accuracy: 0.2654 - lr: 0.0010\n","Epoch 5/15\n","200/200 [==============================] - ETA: 0s - loss: 3.1604 - accuracy: 0.2987WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 326ms/step - loss: 3.1604 - accuracy: 0.2987 - lr: 0.0010\n","Epoch 6/15\n","200/200 [==============================] - ETA: 0s - loss: 2.9732 - accuracy: 0.3335WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.9732 - accuracy: 0.3335 - lr: 0.0010\n","Epoch 7/15\n","200/200 [==============================] - ETA: 0s - loss: 2.8125 - accuracy: 0.3644WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.8125 - accuracy: 0.3644 - lr: 0.0010\n","Epoch 8/15\n","200/200 [==============================] - ETA: 0s - loss: 2.6671 - accuracy: 0.3884WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.6671 - accuracy: 0.3884 - lr: 0.0010\n","Epoch 9/15\n","200/200 [==============================] - ETA: 0s - loss: 2.5186 - accuracy: 0.4184WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 326ms/step - loss: 2.5186 - accuracy: 0.4184 - lr: 0.0010\n","Epoch 10/15\n","200/200 [==============================] - ETA: 0s - loss: 2.3802 - accuracy: 0.4462WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.3802 - accuracy: 0.4462 - lr: 0.0010\n","Epoch 11/15\n","200/200 [==============================] - ETA: 0s - loss: 2.2492 - accuracy: 0.4733WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.2492 - accuracy: 0.4733 - lr: 0.0010\n","Epoch 12/15\n","200/200 [==============================] - ETA: 0s - loss: 2.1130 - accuracy: 0.5007WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.1130 - accuracy: 0.5007 - lr: 0.0010\n","Epoch 13/15\n","200/200 [==============================] - ETA: 0s - loss: 1.9896 - accuracy: 0.5296WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 1.9896 - accuracy: 0.5296 - lr: 0.0010\n","Epoch 14/15\n","200/200 [==============================] - ETA: 0s - loss: 1.8590 - accuracy: 0.5584WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 326ms/step - loss: 1.8590 - accuracy: 0.5584 - lr: 0.0010\n","Epoch 15/15\n","200/200 [==============================] - ETA: 0s - loss: 1.7231 - accuracy: 0.5881WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 326ms/step - loss: 1.7231 - accuracy: 0.5881 - lr: 0.0010\n"]}],"source":["model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1, callbacks=[lr_reducer])\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_1.h5')  "]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4468,"status":"ok","timestamp":1639808930258,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"KP-SlBZKY4vF","outputId":"2e819284-7a3d-41f0-89da-87955d91a8ca"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 100000 images belonging to 200 classes.\n"]}],"source":["train_generator = train_datagen.flow_from_directory( r'./tiny-imagenet-200/train/', target_size=(64, 64), color_mode='rgb', \n","                                                    batch_size=64, class_mode='categorical', shuffle=True, seed=42)"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1639808930259,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"Y9OEIKglY4vV","outputId":"6890843d-28bf-4e6c-ef47-4ab21d3d4266"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 10000 validated image filenames belonging to 200 classes.\n"]}],"source":["validation_generator = valid_datagen.flow_from_dataframe(val_data, directory='./tiny-imagenet-200/val/images/', x_col='File', y_col='Class', target_size=(64, 64),\n","                                                    color_mode='rgb', class_mode='categorical', batch_size=64, shuffle=True, seed=42)"]},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1100153,"status":"ok","timestamp":1639810030407,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"pTfZIGrf4Uyd","outputId":"8665f8b7-bdab-4919-bc6c-711148c026ee"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 3.0274 - accuracy: 0.3366WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 86s 407ms/step - loss: 3.0274 - accuracy: 0.3366 - val_loss: 4.3732 - val_accuracy: 0.1440 - lr: 0.0010\n","Epoch 2/15\n","200/200 [==============================] - ETA: 0s - loss: 2.8005 - accuracy: 0.3795WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.8005 - accuracy: 0.3795 - lr: 0.0010\n","Epoch 3/15\n","200/200 [==============================] - ETA: 0s - loss: 2.6734 - accuracy: 0.3989WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.6734 - accuracy: 0.3989 - lr: 0.0010\n","Epoch 4/15\n","200/200 [==============================] - ETA: 0s - loss: 2.5413 - accuracy: 0.4250WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.5413 - accuracy: 0.4250 - lr: 0.0010\n","Epoch 5/15\n","200/200 [==============================] - ETA: 0s - loss: 2.4603 - accuracy: 0.4372WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.4603 - accuracy: 0.4372 - lr: 0.0010\n","Epoch 6/15\n","200/200 [==============================] - ETA: 0s - loss: 2.3983 - accuracy: 0.4519WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.3983 - accuracy: 0.4519 - lr: 0.0010\n","Epoch 7/15\n","200/200 [==============================] - ETA: 0s - loss: 2.3355 - accuracy: 0.4610WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 326ms/step - loss: 2.3355 - accuracy: 0.4610 - lr: 0.0010\n","Epoch 8/15\n","200/200 [==============================] - ETA: 0s - loss: 2.3107 - accuracy: 0.4687WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 326ms/step - loss: 2.3107 - accuracy: 0.4687 - lr: 0.0010\n","Epoch 9/15\n","200/200 [==============================] - ETA: 0s - loss: 2.2529 - accuracy: 0.4729WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.2529 - accuracy: 0.4729 - lr: 0.0010\n","Epoch 10/15\n","200/200 [==============================] - ETA: 0s - loss: 2.1984 - accuracy: 0.4855WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.1984 - accuracy: 0.4855 - lr: 0.0010\n","Epoch 11/15\n","200/200 [==============================] - ETA: 0s - loss: 2.1531 - accuracy: 0.4995WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.1531 - accuracy: 0.4995 - lr: 0.0010\n","Epoch 12/15\n","200/200 [==============================] - ETA: 0s - loss: 2.0886 - accuracy: 0.5155WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 326ms/step - loss: 2.0886 - accuracy: 0.5155 - lr: 0.0010\n","Epoch 13/15\n","200/200 [==============================] - ETA: 0s - loss: 2.0890 - accuracy: 0.5080WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.0890 - accuracy: 0.5080 - lr: 0.0010\n","Epoch 14/15\n","200/200 [==============================] - ETA: 0s - loss: 2.0398 - accuracy: 0.5179WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 2.0398 - accuracy: 0.5179 - lr: 0.0010\n","Epoch 15/15\n","200/200 [==============================] - ETA: 0s - loss: 1.9838 - accuracy: 0.5295WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 65s 325ms/step - loss: 1.9838 - accuracy: 0.5295 - lr: 0.0010\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_1.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1, callbacks=[lr_reducer])\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_2.h5') "]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1164006,"status":"ok","timestamp":1639811194408,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"Jiyb9TlVGsZs","outputId":"65fe93c5-4495-4f36-86ea-5c270d497559"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 1.9239 - accuracy: 0.5479WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 82s 407ms/step - loss: 1.9239 - accuracy: 0.5479 - val_loss: 2.5621 - val_accuracy: 0.4084\n","Epoch 2/15\n","200/200 [==============================] - 67s 335ms/step - loss: 1.9005 - accuracy: 0.5561\n","Epoch 3/15\n","200/200 [==============================] - 65s 326ms/step - loss: 1.8828 - accuracy: 0.5533\n","Epoch 4/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.8452 - accuracy: 0.5650\n","Epoch 5/15\n","200/200 [==============================] - 65s 324ms/step - loss: 1.8084 - accuracy: 0.5764\n","Epoch 6/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.7580 - accuracy: 0.5873\n","Epoch 7/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.7289 - accuracy: 0.5920\n","Epoch 8/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.6913 - accuracy: 0.5989\n","Epoch 9/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.6499 - accuracy: 0.6104\n","Epoch 10/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.6527 - accuracy: 0.6056\n","Epoch 11/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.6010 - accuracy: 0.6220\n","Epoch 12/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.5900 - accuracy: 0.6235\n","Epoch 13/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.5546 - accuracy: 0.6281\n","Epoch 14/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.4967 - accuracy: 0.6440\n","Epoch 15/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.4611 - accuracy: 0.6545\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_2.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1)\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_3.h5')  # creates a HDF5 file 'my_model.h5'"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4407,"status":"ok","timestamp":1639811198810,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"bQuOD6-q_WBs","outputId":"82cff32a-6bea-4a52-9ba5-9846461af09a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 100000 images belonging to 200 classes.\n"]}],"source":["train_generator = train_datagen.flow_from_directory( r'./tiny-imagenet-200/train/', target_size=(16, 16), color_mode='rgb', \n","                                                    batch_size=256, class_mode='categorical', shuffle=True, seed=42)"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1639811198810,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"T4nEVSde_WBx","outputId":"20e7ce24-ca50-4de9-fcf9-23e7ca4d1a82"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 10000 validated image filenames belonging to 200 classes.\n"]}],"source":["validation_generator = valid_datagen.flow_from_dataframe(val_data, directory='./tiny-imagenet-200/val/images/', x_col='File', y_col='Class', target_size=(64, 64),\n","                                                    color_mode='rgb', class_mode='categorical', batch_size=256, shuffle=True, seed=42)"]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":269398,"status":"ok","timestamp":1639811468360,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"g9A3pesKbUJ8","outputId":"ef71af02-fb9f-431e-9214-a25c4273bba0"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/10\n","200/200 [==============================] - ETA: 0s - loss: 3.5792 - accuracy: 0.2359WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 41s 198ms/step - loss: 3.5792 - accuracy: 0.2359 - val_loss: 4.0378 - val_accuracy: 0.1734\n","Epoch 2/10\n","200/200 [==============================] - 20s 102ms/step - loss: 2.7413 - accuracy: 0.3579\n","Epoch 3/10\n","200/200 [==============================] - 20s 102ms/step - loss: 2.3925 - accuracy: 0.4321\n","Epoch 4/10\n","200/200 [==============================] - 21s 102ms/step - loss: 2.0865 - accuracy: 0.5035\n","Epoch 5/10\n","200/200 [==============================] - 20s 102ms/step - loss: 1.7742 - accuracy: 0.5793\n","Epoch 6/10\n","200/200 [==============================] - 20s 102ms/step - loss: 1.4608 - accuracy: 0.6594\n","Epoch 7/10\n","200/200 [==============================] - 21s 103ms/step - loss: 1.1978 - accuracy: 0.7305\n","Epoch 8/10\n","200/200 [==============================] - 21s 102ms/step - loss: 0.9525 - accuracy: 0.7954\n","Epoch 9/10\n","200/200 [==============================] - 20s 102ms/step - loss: 0.7251 - accuracy: 0.8554\n","Epoch 10/10\n","200/200 [==============================] - 20s 102ms/step - loss: 0.5542 - accuracy: 0.8988\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_3.h5')\n","\n","model.fit_generator(train_generator, epochs=10, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1)\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_4.h5')  # creates a HDF5 file 'my_model.h5'"]},{"cell_type":"code","execution_count":22,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3920,"status":"ok","timestamp":1639811472274,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"GgB7y1Bw_Pyg","outputId":"9a291401-6001-4536-8774-bf1948f8175f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 100000 images belonging to 200 classes.\n"]}],"source":["train_generator = train_datagen.flow_from_directory( r'./tiny-imagenet-200/train/', target_size=(64, 64), color_mode='rgb', \n","                                                    batch_size=64, class_mode='categorical', shuffle=True, seed=42)"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":183,"status":"ok","timestamp":1639811472452,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"IuROfpVM_Pyo","outputId":"9f80c12e-88d7-4d5d-912e-71d98811498c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 10000 validated image filenames belonging to 200 classes.\n"]}],"source":["validation_generator = valid_datagen.flow_from_dataframe(val_data, directory='./tiny-imagenet-200/val/images/', x_col='File', y_col='Class', target_size=(64, 64),\n","                                                    color_mode='rgb', class_mode='categorical', batch_size=64, shuffle=True, seed=42)"]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1062575,"status":"ok","timestamp":1639812535025,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"Go-hD8jOiV63","outputId":"7fc062f2-78c7-491b-a55a-5aab0f09b643"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 1.9330 - accuracy: 0.5369WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 82s 407ms/step - loss: 1.9330 - accuracy: 0.5369 - val_loss: 2.9175 - val_accuracy: 0.3597\n","Epoch 2/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.6562 - accuracy: 0.6011\n","Epoch 3/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.5472 - accuracy: 0.6247\n","Epoch 4/15\n","200/200 [==============================] - 65s 324ms/step - loss: 1.4428 - accuracy: 0.6476\n","Epoch 5/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.4022 - accuracy: 0.6646\n","Epoch 6/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.3492 - accuracy: 0.6740\n","Epoch 7/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.2684 - accuracy: 0.6946\n","Epoch 8/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.2506 - accuracy: 0.7020\n","Epoch 9/15\n","200/200 [==============================] - 65s 324ms/step - loss: 1.2417 - accuracy: 0.7016\n","Epoch 10/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.2022 - accuracy: 0.7152\n","Epoch 11/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.1686 - accuracy: 0.7191\n","Epoch 12/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.0970 - accuracy: 0.7407\n","Epoch 13/15\n","200/200 [==============================] - 65s 325ms/step - loss: 1.0905 - accuracy: 0.7416\n","Epoch 14/15\n","200/200 [==============================] - 65s 326ms/step - loss: 1.0692 - accuracy: 0.7488\n","Epoch 15/15\n","200/200 [==============================] - 65s 326ms/step - loss: 1.0328 - accuracy: 0.7565\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_4.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1)\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_5.h5')  # creates a HDF5 file 'my_model.h5'"]},{"cell_type":"markdown","metadata":{"id":"YKbchzczZ5rG"},"source":["#Image Augmentation"]},{"cell_type":"code","execution_count":42,"metadata":{"executionInfo":{"elapsed":368,"status":"ok","timestamp":1639839894271,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"uY9B6BcJpxuS"},"outputs":[],"source":["from imgaug import augmenters as iaa\n","\n","seq = iaa.SomeOf((0, None), [iaa.Affine(scale=(0.5, 1.5)), iaa.Affine(rotate=20),\n","    iaa.CoarseDropout((0.0, 0.2), size_percent=(0.05, 0.07)), iaa.AdditiveGaussianNoise(scale=0.05*255), iaa.CropAndPad(percent=(-0.25, 0.25))\n","     ])\n","\n","train_datagen = ImageDataGenerator(preprocessing_function=seq.augment_image, rescale=1./255)\n","\n","valid_datagen = ImageDataGenerator(rescale=1./255)"]},{"cell_type":"code","execution_count":43,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4474,"status":"ok","timestamp":1639839899046,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"JPxmaJdfpxwj","outputId":"40c70aea-2ff6-4fbd-c445-1d95318abe20"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 100000 images belonging to 200 classes.\n"]}],"source":["train_generator = train_datagen.flow_from_directory( r'./tiny-imagenet-200/train/', target_size=(64, 64), color_mode='rgb', \n","                                                    batch_size=64, class_mode='categorical', shuffle=True, seed=42)"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":231,"status":"ok","timestamp":1639839899267,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"i-QiQmF6pxwo","outputId":"ca1d1223-4c8a-4a98-d29b-5d792bb9d9ff"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 10000 validated image filenames belonging to 200 classes.\n"]}],"source":["validation_generator = valid_datagen.flow_from_dataframe(val_data, directory='./tiny-imagenet-200/val/images/', x_col='File', y_col='Class', target_size=(64, 64),\n","                                                    color_mode='rgb', class_mode='categorical', batch_size=64, shuffle=True, seed=42)"]},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":139},"executionInfo":{"elapsed":2236,"status":"ok","timestamp":1639839901499,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"NC8riS_4QbXZ","outputId":"d77429f7-83e4-48a5-af1d-e6e801b9ee5d"},"outputs":[{"name":"stderr","output_type":"stream","text":["Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n"]},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 1008x360 with 8 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["x_batch, y_batch = next(train_generator)\n","\n","fig = plt.figure(figsize=(14, 5))\n","\n","for i in range(8):\n","    sub = fig.add_subplot(2, 4, i + 1)\n","    sub.imshow(x_batch[i,:,:], interpolation='bilinear')"]},{"cell_type":"code","execution_count":46,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1288762,"status":"ok","timestamp":1639841190254,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"yu-V8CS0iWRS","outputId":"837f6ebb-914a-4dc1-9316-009207879dff"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 2.8418 - accuracy: 0.3670WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 99s 489ms/step - loss: 2.8418 - accuracy: 0.3670 - val_loss: 2.9153 - val_accuracy: 0.3762\n","Epoch 2/15\n","200/200 [==============================] - 81s 404ms/step - loss: 2.5559 - accuracy: 0.4082\n","Epoch 3/15\n","200/200 [==============================] - 81s 404ms/step - loss: 2.5053 - accuracy: 0.4201\n","Epoch 4/15\n","200/200 [==============================] - 81s 405ms/step - loss: 2.4499 - accuracy: 0.4311\n","Epoch 5/15\n","200/200 [==============================] - 81s 403ms/step - loss: 2.3808 - accuracy: 0.4377\n","Epoch 6/15\n","200/200 [==============================] - 81s 405ms/step - loss: 2.3714 - accuracy: 0.4415\n","Epoch 7/15\n","200/200 [==============================] - 81s 403ms/step - loss: 2.3475 - accuracy: 0.4513\n","Epoch 8/15\n","200/200 [==============================] - 81s 405ms/step - loss: 2.2869 - accuracy: 0.4573\n","Epoch 9/15\n","200/200 [==============================] - 81s 404ms/step - loss: 2.2856 - accuracy: 0.4559\n","Epoch 10/15\n","200/200 [==============================] - 81s 404ms/step - loss: 2.2811 - accuracy: 0.4579\n","Epoch 11/15\n","200/200 [==============================] - 80s 401ms/step - loss: 2.2522 - accuracy: 0.4688\n","Epoch 12/15\n","200/200 [==============================] - 81s 406ms/step - loss: 2.2328 - accuracy: 0.4694\n","Epoch 13/15\n","200/200 [==============================] - 82s 407ms/step - loss: 2.2148 - accuracy: 0.4717\n","Epoch 14/15\n","200/200 [==============================] - 82s 408ms/step - loss: 2.2345 - accuracy: 0.4682\n","Epoch 15/15\n","200/200 [==============================] - 81s 406ms/step - loss: 2.1917 - accuracy: 0.4835\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_5.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1)\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_6.h5')"]},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1346671,"status":"ok","timestamp":1639842536912,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"ngWSQXS_vWed","outputId":"864969e2-50aa-41a6-858b-463c364941f4"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 2.1662 - accuracy: 0.4796WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 103s 511ms/step - loss: 2.1662 - accuracy: 0.4796 - val_loss: 2.3787 - val_accuracy: 0.4570\n","Epoch 2/15\n","200/200 [==============================] - 81s 404ms/step - loss: 2.1557 - accuracy: 0.4859\n","Epoch 3/15\n","200/200 [==============================] - 81s 402ms/step - loss: 2.1762 - accuracy: 0.4817\n","Epoch 4/15\n","200/200 [==============================] - 81s 404ms/step - loss: 2.1413 - accuracy: 0.4898\n","Epoch 5/15\n","200/200 [==============================] - 81s 401ms/step - loss: 2.1287 - accuracy: 0.4879\n","Epoch 6/15\n","200/200 [==============================] - 81s 404ms/step - loss: 2.1468 - accuracy: 0.4862\n","Epoch 7/15\n","200/200 [==============================] - 81s 403ms/step - loss: 2.0959 - accuracy: 0.4998\n","Epoch 8/15\n","200/200 [==============================] - 81s 405ms/step - loss: 2.0954 - accuracy: 0.4995\n","Epoch 9/15\n","200/200 [==============================] - 81s 402ms/step - loss: 2.0744 - accuracy: 0.5017\n","Epoch 10/15\n","200/200 [==============================] - 81s 402ms/step - loss: 2.0641 - accuracy: 0.5079\n","Epoch 11/15\n","200/200 [==============================] - 81s 404ms/step - loss: 2.0514 - accuracy: 0.5077\n","Epoch 12/15\n","200/200 [==============================] - 81s 404ms/step - loss: 2.0421 - accuracy: 0.5088\n","Epoch 13/15\n","200/200 [==============================] - 81s 404ms/step - loss: 2.0249 - accuracy: 0.5109\n","Epoch 14/15\n","200/200 [==============================] - 81s 403ms/step - loss: 2.0265 - accuracy: 0.5142\n","Epoch 15/15\n","200/200 [==============================] - 82s 409ms/step - loss: 2.0586 - accuracy: 0.5059\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_6.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1)\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_7.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"O4YBiw7UrQrT"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 2.0161 - accuracy: 0.5134WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 103s 512ms/step - loss: 2.0161 - accuracy: 0.5134 - val_loss: 2.2586 - val_accuracy: 0.4810\n","Epoch 2/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.9814 - accuracy: 0.5187\n","Epoch 3/15\n","200/200 [==============================] - 80s 400ms/step - loss: 1.9667 - accuracy: 0.5266\n","Epoch 4/15\n","200/200 [==============================] - 80s 399ms/step - loss: 1.9745 - accuracy: 0.5212\n","Epoch 5/15\n","200/200 [==============================] - 80s 399ms/step - loss: 1.9905 - accuracy: 0.5199\n","Epoch 6/15\n","200/200 [==============================] - 80s 399ms/step - loss: 1.9666 - accuracy: 0.5259\n","Epoch 7/15\n","200/200 [==============================] - 80s 399ms/step - loss: 1.9524 - accuracy: 0.5237\n","Epoch 8/15\n","200/200 [==============================] - 80s 398ms/step - loss: 1.9638 - accuracy: 0.5305\n","Epoch 9/15\n","200/200 [==============================] - 80s 399ms/step - loss: 1.9339 - accuracy: 0.5318\n","Epoch 10/15\n","200/200 [==============================] - 80s 400ms/step - loss: 1.9227 - accuracy: 0.5365\n","Epoch 11/15\n","200/200 [==============================] - 79s 396ms/step - loss: 1.9093 - accuracy: 0.5385\n","Epoch 12/15\n","200/200 [==============================] - 80s 398ms/step - loss: 1.9137 - accuracy: 0.5401\n","Epoch 13/15\n","200/200 [==============================] - 80s 398ms/step - loss: 1.9004 - accuracy: 0.5366\n","Epoch 14/15\n","200/200 [==============================] - 80s 397ms/step - loss: 1.8886 - accuracy: 0.5424\n","Epoch 15/15\n","200/200 [==============================] - 80s 399ms/step - loss: 1.8901 - accuracy: 0.5445\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_7.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1)\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_8.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"5BMzXw6A7VG6"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 1.8563 - accuracy: 0.5492WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 98s 486ms/step - loss: 1.8563 - accuracy: 0.5492 - val_loss: 2.1227 - val_accuracy: 0.5020\n","Epoch 2/15\n","200/200 [==============================] - 80s 399ms/step - loss: 1.8874 - accuracy: 0.5441\n","Epoch 3/15\n","200/200 [==============================] - 81s 406ms/step - loss: 1.8893 - accuracy: 0.5452\n","Epoch 4/15\n","200/200 [==============================] - 81s 402ms/step - loss: 1.8683 - accuracy: 0.5473\n","Epoch 5/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.8782 - accuracy: 0.5420\n","Epoch 6/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.8528 - accuracy: 0.5466\n","Epoch 7/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.8208 - accuracy: 0.5530\n","Epoch 8/15\n","200/200 [==============================] - 81s 404ms/step - loss: 1.8257 - accuracy: 0.5539\n","Epoch 9/15\n","200/200 [==============================] - 81s 404ms/step - loss: 1.8299 - accuracy: 0.5532\n","Epoch 10/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.7961 - accuracy: 0.5652\n","Epoch 11/15\n","200/200 [==============================] - 82s 407ms/step - loss: 1.7999 - accuracy: 0.5600\n","Epoch 12/15\n","200/200 [==============================] - 81s 404ms/step - loss: 1.7723 - accuracy: 0.5685\n","Epoch 13/15\n","200/200 [==============================] - 81s 406ms/step - loss: 1.7851 - accuracy: 0.5664\n","Epoch 14/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.7892 - accuracy: 0.5630\n","Epoch 15/15\n","200/200 [==============================] - 81s 405ms/step - loss: 1.7663 - accuracy: 0.5698\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_8.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1)\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_9.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"3FhGaSe4JRZV"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 1.7685 - accuracy: 0.5684WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 99s 490ms/step - loss: 1.7685 - accuracy: 0.5684 - val_loss: 2.3379 - val_accuracy: 0.4751\n","Epoch 2/15\n","200/200 [==============================] - 81s 402ms/step - loss: 1.7526 - accuracy: 0.5724\n","Epoch 3/15\n","200/200 [==============================] - 81s 405ms/step - loss: 1.7463 - accuracy: 0.5734\n","Epoch 4/15\n","200/200 [==============================] - 81s 402ms/step - loss: 1.7197 - accuracy: 0.5777\n","Epoch 5/15\n","200/200 [==============================] - 80s 401ms/step - loss: 1.7467 - accuracy: 0.5731\n","Epoch 6/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.7314 - accuracy: 0.5781\n","Epoch 7/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.7251 - accuracy: 0.5780\n","Epoch 8/15\n","200/200 [==============================] - 81s 405ms/step - loss: 1.7391 - accuracy: 0.5736\n","Epoch 9/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.7130 - accuracy: 0.5760\n","Epoch 10/15\n","200/200 [==============================] - 81s 404ms/step - loss: 1.6935 - accuracy: 0.5881\n","Epoch 11/15\n","200/200 [==============================] - 80s 400ms/step - loss: 1.6884 - accuracy: 0.5838\n","Epoch 12/15\n","200/200 [==============================] - 80s 401ms/step - loss: 1.6913 - accuracy: 0.5862\n","Epoch 13/15\n","200/200 [==============================] - 81s 405ms/step - loss: 1.6620 - accuracy: 0.5929\n","Epoch 14/15\n","200/200 [==============================] - 81s 404ms/step - loss: 1.6905 - accuracy: 0.5867\n","Epoch 15/15\n","200/200 [==============================] - 81s 402ms/step - loss: 1.6575 - accuracy: 0.5955\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_9.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1)\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_10.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"3WOp_Fh4s2fd"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 1.6472 - accuracy: 0.5936WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 98s 485ms/step - loss: 1.6472 - accuracy: 0.5936 - val_loss: 2.0638 - val_accuracy: 0.5182\n","Epoch 2/15\n","200/200 [==============================] - 81s 404ms/step - loss: 1.6766 - accuracy: 0.5893\n","Epoch 3/15\n","200/200 [==============================] - 81s 404ms/step - loss: 1.6459 - accuracy: 0.5911\n","Epoch 4/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.6539 - accuracy: 0.5962\n","Epoch 5/15\n","200/200 [==============================] - 81s 405ms/step - loss: 1.6241 - accuracy: 0.6058\n","Epoch 6/15\n","200/200 [==============================] - 81s 402ms/step - loss: 1.6111 - accuracy: 0.6050\n","Epoch 7/15\n","200/200 [==============================] - 81s 402ms/step - loss: 1.6136 - accuracy: 0.6029\n","Epoch 8/15\n","200/200 [==============================] - 80s 401ms/step - loss: 1.6144 - accuracy: 0.6025\n","Epoch 9/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.6095 - accuracy: 0.6056\n","Epoch 10/15\n","200/200 [==============================] - 81s 402ms/step - loss: 1.6071 - accuracy: 0.6039\n","Epoch 11/15\n","200/200 [==============================] - 80s 401ms/step - loss: 1.6000 - accuracy: 0.6012\n","Epoch 12/15\n","200/200 [==============================] - 81s 406ms/step - loss: 1.5948 - accuracy: 0.6073\n","Epoch 13/15\n","200/200 [==============================] - 81s 404ms/step - loss: 1.5813 - accuracy: 0.6041\n","Epoch 14/15\n","200/200 [==============================] - 82s 408ms/step - loss: 1.5675 - accuracy: 0.6101\n","Epoch 15/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.5635 - accuracy: 0.6158\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_10.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1)\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_11.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Yh0K2l76yJvB"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 1.5755 - accuracy: 0.6124WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 102s 508ms/step - loss: 1.5755 - accuracy: 0.6124 - val_loss: 2.2061 - val_accuracy: 0.5006\n","Epoch 2/15\n","200/200 [==============================] - 81s 404ms/step - loss: 1.5774 - accuracy: 0.6155\n","Epoch 3/15\n","200/200 [==============================] - 81s 405ms/step - loss: 1.5559 - accuracy: 0.6217\n","Epoch 4/15\n","200/200 [==============================] - 81s 402ms/step - loss: 1.5331 - accuracy: 0.6179\n","Epoch 5/15\n","200/200 [==============================] - 81s 405ms/step - loss: 1.5474 - accuracy: 0.6195\n","Epoch 6/15\n","200/200 [==============================] - 81s 405ms/step - loss: 1.5293 - accuracy: 0.6231\n","Epoch 7/15\n","200/200 [==============================] - 80s 402ms/step - loss: 1.5191 - accuracy: 0.6212\n","Epoch 8/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.5046 - accuracy: 0.6331\n","Epoch 9/15\n","200/200 [==============================] - 81s 404ms/step - loss: 1.5406 - accuracy: 0.6215\n","Epoch 10/15\n","200/200 [==============================] - 81s 404ms/step - loss: 1.4962 - accuracy: 0.6296\n","Epoch 11/15\n","200/200 [==============================] - 81s 406ms/step - loss: 1.5196 - accuracy: 0.6297\n","Epoch 12/15\n","200/200 [==============================] - 81s 403ms/step - loss: 1.5131 - accuracy: 0.6220\n","Epoch 13/15\n","200/200 [==============================] - 81s 406ms/step - loss: 1.4830 - accuracy: 0.6355\n","Epoch 14/15\n","200/200 [==============================] - 82s 407ms/step - loss: 1.4995 - accuracy: 0.6297\n","Epoch 15/15\n","200/200 [==============================] - 81s 405ms/step - loss: 1.4802 - accuracy: 0.6305\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_11.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1)\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_12.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"aQK9GFu6-B37"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4927 - accuracy: 0.6297WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 103s 510ms/step - loss: 1.4927 - accuracy: 0.6297 - val_loss: 2.2624 - val_accuracy: 0.4977 - lr: 0.0010\n","Epoch 2/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4770 - accuracy: 0.6334WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 403ms/step - loss: 1.4770 - accuracy: 0.6334 - lr: 0.0010\n","Epoch 3/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4931 - accuracy: 0.6314WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 405ms/step - loss: 1.4931 - accuracy: 0.6314 - lr: 0.0010\n","Epoch 4/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4289 - accuracy: 0.6471WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 402ms/step - loss: 1.4289 - accuracy: 0.6471 - lr: 0.0010\n","Epoch 5/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4776 - accuracy: 0.6338WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 402ms/step - loss: 1.4776 - accuracy: 0.6338 - lr: 0.0010\n","Epoch 6/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4350 - accuracy: 0.6427WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 397ms/step - loss: 1.4350 - accuracy: 0.6427 - lr: 0.0010\n","Epoch 7/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4578 - accuracy: 0.6404WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.4578 - accuracy: 0.6404 - lr: 0.0010\n","Epoch 8/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4431 - accuracy: 0.6443WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 401ms/step - loss: 1.4431 - accuracy: 0.6443 - lr: 0.0010\n","Epoch 9/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4321 - accuracy: 0.6434WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 401ms/step - loss: 1.4321 - accuracy: 0.6434 - lr: 0.0010\n","Epoch 10/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4535 - accuracy: 0.6436WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.4535 - accuracy: 0.6436 - lr: 0.0010\n","Epoch 11/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4023 - accuracy: 0.6560WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 79s 395ms/step - loss: 1.4023 - accuracy: 0.6560 - lr: 0.0010\n","Epoch 12/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4067 - accuracy: 0.6488WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 398ms/step - loss: 1.4067 - accuracy: 0.6488 - lr: 0.0010\n","Epoch 13/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4271 - accuracy: 0.6453WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 397ms/step - loss: 1.4271 - accuracy: 0.6453 - lr: 0.0010\n","Epoch 14/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4250 - accuracy: 0.6452WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 401ms/step - loss: 1.4250 - accuracy: 0.6452 - lr: 0.0010\n","Epoch 15/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4046 - accuracy: 0.6484WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 398ms/step - loss: 1.4046 - accuracy: 0.6484 - lr: 0.0010\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_12.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1, callbacks=[lr_reducer])\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_13.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"BK6WZCO4-ELs"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 1.4164 - accuracy: 0.6470WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 103s 510ms/step - loss: 1.4164 - accuracy: 0.6470 - val_loss: 2.2006 - val_accuracy: 0.5087 - lr: 0.0010\n","Epoch 2/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3771 - accuracy: 0.6581WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 79s 395ms/step - loss: 1.3771 - accuracy: 0.6581 - lr: 0.0010\n","Epoch 3/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3900 - accuracy: 0.6543WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.3900 - accuracy: 0.6543 - lr: 0.0010\n","Epoch 4/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3792 - accuracy: 0.6529WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.3792 - accuracy: 0.6529 - lr: 0.0010\n","Epoch 5/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3967 - accuracy: 0.6531WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 401ms/step - loss: 1.3967 - accuracy: 0.6531 - lr: 0.0010\n","Epoch 6/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3879 - accuracy: 0.6520WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 400ms/step - loss: 1.3879 - accuracy: 0.6520 - lr: 0.0010\n","Epoch 7/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3782 - accuracy: 0.6580WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.3782 - accuracy: 0.6580 - lr: 0.0010\n","Epoch 8/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3854 - accuracy: 0.6525WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.3854 - accuracy: 0.6525 - lr: 0.0010\n","Epoch 9/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3659 - accuracy: 0.6559WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 402ms/step - loss: 1.3659 - accuracy: 0.6559 - lr: 0.0010\n","Epoch 10/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3377 - accuracy: 0.6640WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 398ms/step - loss: 1.3377 - accuracy: 0.6640 - lr: 0.0010\n","Epoch 11/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3435 - accuracy: 0.6682WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 401ms/step - loss: 1.3435 - accuracy: 0.6682 - lr: 0.0010\n","Epoch 12/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3548 - accuracy: 0.6640WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.3548 - accuracy: 0.6640 - lr: 0.0010\n","Epoch 13/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3500 - accuracy: 0.6598WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.3500 - accuracy: 0.6598 - lr: 0.0010\n","Epoch 14/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3228 - accuracy: 0.6678WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 397ms/step - loss: 1.3228 - accuracy: 0.6678 - lr: 0.0010\n","Epoch 15/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3121 - accuracy: 0.6725WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 398ms/step - loss: 1.3121 - accuracy: 0.6725 - lr: 0.0010\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_13.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1, callbacks=[lr_reducer])\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_14.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"OfCDWePn-E7T"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3339 - accuracy: 0.6659WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 98s 484ms/step - loss: 1.3339 - accuracy: 0.6659 - val_loss: 2.1116 - val_accuracy: 0.5340 - lr: 0.0010\n","Epoch 2/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3241 - accuracy: 0.6629WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 400ms/step - loss: 1.3241 - accuracy: 0.6629 - lr: 0.0010\n","Epoch 3/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3107 - accuracy: 0.6739WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 400ms/step - loss: 1.3107 - accuracy: 0.6739 - lr: 0.0010\n","Epoch 4/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3337 - accuracy: 0.6600WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 403ms/step - loss: 1.3337 - accuracy: 0.6600 - lr: 0.0010\n","Epoch 5/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2920 - accuracy: 0.6795WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.2920 - accuracy: 0.6795 - lr: 0.0010\n","Epoch 6/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2747 - accuracy: 0.6773WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 397ms/step - loss: 1.2747 - accuracy: 0.6773 - lr: 0.0010\n","Epoch 7/15\n","200/200 [==============================] - ETA: 0s - loss: 1.3015 - accuracy: 0.6705WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.3015 - accuracy: 0.6705 - lr: 0.0010\n","Epoch 8/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2982 - accuracy: 0.6774WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 398ms/step - loss: 1.2982 - accuracy: 0.6774 - lr: 0.0010\n","Epoch 9/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2843 - accuracy: 0.6816WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 401ms/step - loss: 1.2843 - accuracy: 0.6816 - lr: 0.0010\n","Epoch 10/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2701 - accuracy: 0.6806WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 79s 396ms/step - loss: 1.2701 - accuracy: 0.6806 - lr: 0.0010\n","Epoch 11/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2940 - accuracy: 0.6737WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 400ms/step - loss: 1.2940 - accuracy: 0.6737 - lr: 0.0010\n","Epoch 12/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2904 - accuracy: 0.6775WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 79s 396ms/step - loss: 1.2904 - accuracy: 0.6775 - lr: 0.0010\n","Epoch 13/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2661 - accuracy: 0.6854WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 398ms/step - loss: 1.2661 - accuracy: 0.6854 - lr: 0.0010\n","Epoch 14/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2722 - accuracy: 0.6818WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 401ms/step - loss: 1.2722 - accuracy: 0.6818 - lr: 0.0010\n","Epoch 15/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2640 - accuracy: 0.6841WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.2640 - accuracy: 0.6841 - lr: 0.0010\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_14.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1, callbacks=[lr_reducer])\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_15.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"QCaL-x2d-FUH"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2343 - accuracy: 0.6905WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 102s 505ms/step - loss: 1.2343 - accuracy: 0.6905 - val_loss: 2.1453 - val_accuracy: 0.5264 - lr: 0.0010\n","Epoch 2/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2635 - accuracy: 0.6814WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 402ms/step - loss: 1.2635 - accuracy: 0.6814 - lr: 0.0010\n","Epoch 3/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2192 - accuracy: 0.6897WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 402ms/step - loss: 1.2192 - accuracy: 0.6897 - lr: 0.0010\n","Epoch 4/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2345 - accuracy: 0.6905WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 404ms/step - loss: 1.2345 - accuracy: 0.6905 - lr: 0.0010\n","Epoch 5/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2512 - accuracy: 0.6850WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 403ms/step - loss: 1.2512 - accuracy: 0.6850 - lr: 0.0010\n","Epoch 6/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2372 - accuracy: 0.6919WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 399ms/step - loss: 1.2372 - accuracy: 0.6919 - lr: 0.0010\n","Epoch 7/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2203 - accuracy: 0.6924WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 401ms/step - loss: 1.2203 - accuracy: 0.6924 - lr: 0.0010\n","Epoch 8/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2352 - accuracy: 0.6873WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 401ms/step - loss: 1.2352 - accuracy: 0.6873 - lr: 0.0010\n","Epoch 9/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2393 - accuracy: 0.6880WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 405ms/step - loss: 1.2393 - accuracy: 0.6880 - lr: 0.0010\n","Epoch 10/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2264 - accuracy: 0.6957WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 403ms/step - loss: 1.2264 - accuracy: 0.6957 - lr: 0.0010\n","Epoch 11/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2006 - accuracy: 0.6985WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 403ms/step - loss: 1.2006 - accuracy: 0.6985 - lr: 0.0010\n","Epoch 12/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2319 - accuracy: 0.6877WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 404ms/step - loss: 1.2319 - accuracy: 0.6877 - lr: 0.0010\n","Epoch 13/15\n","200/200 [==============================] - ETA: 0s - loss: 1.1971 - accuracy: 0.7017WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 405ms/step - loss: 1.1971 - accuracy: 0.7017 - lr: 0.0010\n","Epoch 14/15\n","200/200 [==============================] - ETA: 0s - loss: 1.2052 - accuracy: 0.6973WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 80s 401ms/step - loss: 1.2052 - accuracy: 0.6973 - lr: 0.0010\n","Epoch 15/15\n","200/200 [==============================] - ETA: 0s - loss: 1.1873 - accuracy: 0.7005WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 81s 402ms/step - loss: 1.1873 - accuracy: 0.7005 - lr: 0.0010\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_15.h5')\n","\n","model.fit_generator(train_generator, epochs=15, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1, callbacks=[lr_reducer])\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_16.h5')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"ZdRXCaX914mk"},"outputs":[],"source":["checkpoint = tf.keras.callbacks.ModelCheckpoint('/content/drive/My Drive/Colab Notebooks/EIP Models/best.h5', monitor='accuracy', verbose=1, save_best_only=True, save_weights_only=False, mode='auto', save_freq=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"5mGnCwjbjwLD"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/10\n","\n","Epoch 00001: accuracy improved from -inf to 0.73438, saving model to /content/drive/My Drive/Colab Notebooks/EIP Models/best.h5\n","  1/200 [..............................] - ETA: 13:05 - loss: 1.0660 - accuracy: 0.7344\n","Epoch 00001: accuracy did not improve from 0.73438\n","  2/200 [..............................] - ETA: 1:10 - loss: 1.0264 - accuracy: 0.7266 \n","Epoch 00001: accuracy improved from 0.73438 to 0.74479, saving model to /content/drive/My Drive/Colab Notebooks/EIP Models/best.h5\n","  3/200 [..............................] - ETA: 3:31 - loss: 1.0360 - accuracy: 0.7448\n","Epoch 00001: accuracy did not improve from 0.74479\n","  4/200 [..............................] - ETA: 2:42 - loss: 1.0703 - accuracy: 0.7305\n","Epoch 00001: accuracy did not improve from 0.74479\n","  5/200 [..............................] - ETA: 2:27 - loss: 1.1285 - accuracy: 0.7188\n","Epoch 00001: accuracy did not improve from 0.74479\n","  6/200 [..............................] - ETA: 2:12 - loss: 1.0864 - accuracy: 0.7292\n","Epoch 00001: accuracy did not improve from 0.74479\n","  7/200 [\u003e.............................] - ETA: 2:03 - loss: 1.1317 - accuracy: 0.7121\n","Epoch 00001: accuracy did not improve from 0.74479\n","  8/200 [\u003e.............................] - ETA: 1:57 - loss: 1.1710 - accuracy: 0.7031\n","Epoch 00001: accuracy did not improve from 0.74479\n","  9/200 [\u003e.............................] - ETA: 1:51 - loss: 1.1848 - accuracy: 0.6997\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 10/200 [\u003e.............................] - ETA: 1:46 - loss: 1.1888 - accuracy: 0.6969\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 11/200 [\u003e.............................] - ETA: 1:43 - loss: 1.1940 - accuracy: 0.6989\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 12/200 [\u003e.............................] - ETA: 1:40 - loss: 1.2000 - accuracy: 0.6979\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 13/200 [\u003e.............................] - ETA: 1:37 - loss: 1.2086 - accuracy: 0.6959\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 14/200 [=\u003e............................] - ETA: 1:35 - loss: 1.1961 - accuracy: 0.6998\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 15/200 [=\u003e............................] - ETA: 1:33 - loss: 1.1952 - accuracy: 0.7042\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 16/200 [=\u003e............................] - ETA: 1:32 - loss: 1.2163 - accuracy: 0.7012\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 17/200 [=\u003e............................] - ETA: 1:30 - loss: 1.2016 - accuracy: 0.7050\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 18/200 [=\u003e............................] - ETA: 1:29 - loss: 1.1986 - accuracy: 0.7057\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 19/200 [=\u003e............................] - ETA: 1:27 - loss: 1.1855 - accuracy: 0.7105\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 20/200 [==\u003e...........................] - ETA: 1:26 - loss: 1.1917 - accuracy: 0.7078\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 21/200 [==\u003e...........................] - ETA: 1:25 - loss: 1.1879 - accuracy: 0.7068\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 22/200 [==\u003e...........................] - ETA: 1:25 - loss: 1.1926 - accuracy: 0.7060\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 23/200 [==\u003e...........................] - ETA: 1:25 - loss: 1.1908 - accuracy: 0.7058\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 24/200 [==\u003e...........................] - ETA: 1:24 - loss: 1.2022 - accuracy: 0.7005\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 25/200 [==\u003e...........................] - ETA: 1:24 - loss: 1.2009 - accuracy: 0.7031\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 26/200 [==\u003e...........................] - ETA: 1:23 - loss: 1.2001 - accuracy: 0.7037\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 27/200 [===\u003e..........................] - ETA: 1:22 - loss: 1.2068 - accuracy: 0.7014\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 28/200 [===\u003e..........................] - ETA: 1:21 - loss: 1.2007 - accuracy: 0.7009\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 29/200 [===\u003e..........................] - ETA: 1:20 - loss: 1.2051 - accuracy: 0.6988\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 30/200 [===\u003e..........................] - ETA: 1:19 - loss: 1.2132 - accuracy: 0.6979\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 31/200 [===\u003e..........................] - ETA: 1:18 - loss: 1.2083 - accuracy: 0.6976\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 32/200 [===\u003e..........................] - ETA: 1:17 - loss: 1.2078 - accuracy: 0.6978\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 33/200 [===\u003e..........................] - ETA: 1:16 - loss: 1.2023 - accuracy: 0.7003\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 34/200 [====\u003e.........................] - ETA: 1:16 - loss: 1.1933 - accuracy: 0.7022\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 35/200 [====\u003e.........................] - ETA: 1:15 - loss: 1.2007 - accuracy: 0.6996\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 36/200 [====\u003e.........................] - ETA: 1:14 - loss: 1.2019 - accuracy: 0.6988\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 37/200 [====\u003e.........................] - ETA: 1:13 - loss: 1.1883 - accuracy: 0.7010\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 38/200 [====\u003e.........................] - ETA: 1:12 - loss: 1.1830 - accuracy: 0.7023\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 39/200 [====\u003e.........................] - ETA: 1:12 - loss: 1.1919 - accuracy: 0.7007\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 40/200 [=====\u003e........................] - ETA: 1:11 - loss: 1.1902 - accuracy: 0.7023\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 41/200 [=====\u003e........................] - ETA: 1:11 - loss: 1.1910 - accuracy: 0.7024\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 42/200 [=====\u003e........................] - ETA: 1:10 - loss: 1.1912 - accuracy: 0.7024\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 43/200 [=====\u003e........................] - ETA: 1:09 - loss: 1.1923 - accuracy: 0.7009\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 44/200 [=====\u003e........................] - ETA: 1:09 - loss: 1.1918 - accuracy: 0.7028\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 45/200 [=====\u003e........................] - ETA: 1:08 - loss: 1.1905 - accuracy: 0.7021\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 46/200 [=====\u003e........................] - ETA: 1:08 - loss: 1.1872 - accuracy: 0.7021\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 47/200 [======\u003e.......................] - ETA: 1:07 - loss: 1.1888 - accuracy: 0.7008\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 48/200 [======\u003e.......................] - ETA: 1:06 - loss: 1.1948 - accuracy: 0.6992\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 49/200 [======\u003e.......................] - ETA: 1:06 - loss: 1.1913 - accuracy: 0.6987\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 50/200 [======\u003e.......................] - ETA: 1:05 - loss: 1.1916 - accuracy: 0.6984\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 51/200 [======\u003e.......................] - ETA: 1:05 - loss: 1.1911 - accuracy: 0.6982\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 52/200 [======\u003e.......................] - ETA: 1:04 - loss: 1.1917 - accuracy: 0.6986\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 53/200 [======\u003e.......................] - ETA: 1:04 - loss: 1.1967 - accuracy: 0.6966\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 54/200 [=======\u003e......................] - ETA: 1:03 - loss: 1.2021 - accuracy: 0.6959\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 55/200 [=======\u003e......................] - ETA: 1:03 - loss: 1.2020 - accuracy: 0.6960\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 56/200 [=======\u003e......................] - ETA: 1:02 - loss: 1.1968 - accuracy: 0.6984\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 57/200 [=======\u003e......................] - ETA: 1:02 - loss: 1.1911 - accuracy: 0.7004\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 58/200 [=======\u003e......................] - ETA: 1:01 - loss: 1.1899 - accuracy: 0.7010\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 59/200 [=======\u003e......................] - ETA: 1:01 - loss: 1.1894 - accuracy: 0.7015\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 60/200 [========\u003e.....................] - ETA: 1:00 - loss: 1.1876 - accuracy: 0.7016\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 61/200 [========\u003e.....................] - ETA: 59s - loss: 1.1831 - accuracy: 0.7026 \n","Epoch 00001: accuracy did not improve from 0.74479\n"," 62/200 [========\u003e.....................] - ETA: 59s - loss: 1.1779 - accuracy: 0.7031\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 63/200 [========\u003e.....................] - ETA: 58s - loss: 1.1787 - accuracy: 0.7016\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 64/200 [========\u003e.....................] - ETA: 58s - loss: 1.1751 - accuracy: 0.7014\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 65/200 [========\u003e.....................] - ETA: 57s - loss: 1.1730 - accuracy: 0.7019\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 66/200 [========\u003e.....................] - ETA: 57s - loss: 1.1764 - accuracy: 0.7015\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 67/200 [=========\u003e....................] - ETA: 56s - loss: 1.1729 - accuracy: 0.7024\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 68/200 [=========\u003e....................] - ETA: 56s - loss: 1.1728 - accuracy: 0.7029\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 69/200 [=========\u003e....................] - ETA: 55s - loss: 1.1714 - accuracy: 0.7034\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 70/200 [=========\u003e....................] - ETA: 55s - loss: 1.1740 - accuracy: 0.7022\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 71/200 [=========\u003e....................] - ETA: 54s - loss: 1.1745 - accuracy: 0.7018\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 72/200 [=========\u003e....................] - ETA: 54s - loss: 1.1737 - accuracy: 0.7020\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 73/200 [=========\u003e....................] - ETA: 53s - loss: 1.1719 - accuracy: 0.7021\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 74/200 [==========\u003e...................] - ETA: 53s - loss: 1.1696 - accuracy: 0.7031\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 75/200 [==========\u003e...................] - ETA: 52s - loss: 1.1703 - accuracy: 0.7025\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 76/200 [==========\u003e...................] - ETA: 52s - loss: 1.1732 - accuracy: 0.7015\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 77/200 [==========\u003e...................] - ETA: 52s - loss: 1.1694 - accuracy: 0.7027\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 78/200 [==========\u003e...................] - ETA: 51s - loss: 1.1711 - accuracy: 0.7025\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 79/200 [==========\u003e...................] - ETA: 51s - loss: 1.1707 - accuracy: 0.7025\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 80/200 [===========\u003e..................] - ETA: 50s - loss: 1.1703 - accuracy: 0.7029\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 81/200 [===========\u003e..................] - ETA: 50s - loss: 1.1680 - accuracy: 0.7031\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 82/200 [===========\u003e..................] - ETA: 49s - loss: 1.1655 - accuracy: 0.7041\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 83/200 [===========\u003e..................] - ETA: 49s - loss: 1.1690 - accuracy: 0.7026\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 84/200 [===========\u003e..................] - ETA: 48s - loss: 1.1691 - accuracy: 0.7022\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 85/200 [===========\u003e..................] - ETA: 48s - loss: 1.1693 - accuracy: 0.7022\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 86/200 [===========\u003e..................] - ETA: 48s - loss: 1.1678 - accuracy: 0.7029\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 87/200 [============\u003e.................] - ETA: 47s - loss: 1.1650 - accuracy: 0.7042\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 88/200 [============\u003e.................] - ETA: 47s - loss: 1.1644 - accuracy: 0.7045\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 89/200 [============\u003e.................] - ETA: 46s - loss: 1.1627 - accuracy: 0.7054\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 90/200 [============\u003e.................] - ETA: 46s - loss: 1.1623 - accuracy: 0.7050\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 91/200 [============\u003e.................] - ETA: 45s - loss: 1.1635 - accuracy: 0.7043\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 92/200 [============\u003e.................] - ETA: 45s - loss: 1.1636 - accuracy: 0.7040\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 93/200 [============\u003e.................] - ETA: 44s - loss: 1.1640 - accuracy: 0.7040\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 94/200 [=============\u003e................] - ETA: 44s - loss: 1.1635 - accuracy: 0.7043\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 95/200 [=============\u003e................] - ETA: 44s - loss: 1.1638 - accuracy: 0.7046\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 96/200 [=============\u003e................] - ETA: 43s - loss: 1.1649 - accuracy: 0.7043\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 97/200 [=============\u003e................] - ETA: 43s - loss: 1.1654 - accuracy: 0.7054\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 98/200 [=============\u003e................] - ETA: 42s - loss: 1.1677 - accuracy: 0.7052\n","Epoch 00001: accuracy did not improve from 0.74479\n"," 99/200 [=============\u003e................] - ETA: 42s - loss: 1.1663 - accuracy: 0.7055\n","Epoch 00001: accuracy did not improve from 0.74479\n","100/200 [==============\u003e...............] - ETA: 41s - loss: 1.1679 - accuracy: 0.7053\n","Epoch 00001: accuracy did not improve from 0.74479\n","101/200 [==============\u003e...............] - ETA: 41s - loss: 1.1682 - accuracy: 0.7054\n","Epoch 00001: accuracy did not improve from 0.74479\n","102/200 [==============\u003e...............] - ETA: 41s - loss: 1.1683 - accuracy: 0.7056\n","Epoch 00001: accuracy did not improve from 0.74479\n","103/200 [==============\u003e...............] - ETA: 40s - loss: 1.1688 - accuracy: 0.7059\n","Epoch 00001: accuracy did not improve from 0.74479\n","104/200 [==============\u003e...............] - ETA: 40s - loss: 1.1706 - accuracy: 0.7054\n","Epoch 00001: accuracy did not improve from 0.74479\n","105/200 [==============\u003e...............] - ETA: 39s - loss: 1.1693 - accuracy: 0.7054\n","Epoch 00001: accuracy did not improve from 0.74479\n","106/200 [==============\u003e...............] - ETA: 39s - loss: 1.1681 - accuracy: 0.7052\n","Epoch 00001: accuracy did not improve from 0.74479\n","107/200 [===============\u003e..............] - ETA: 38s - loss: 1.1667 - accuracy: 0.7060\n","Epoch 00001: accuracy did not improve from 0.74479\n","108/200 [===============\u003e..............] - ETA: 38s - loss: 1.1683 - accuracy: 0.7054\n","Epoch 00001: accuracy did not improve from 0.74479\n","109/200 [===============\u003e..............] - ETA: 37s - loss: 1.1657 - accuracy: 0.7054\n","Epoch 00001: accuracy did not improve from 0.74479\n","110/200 [===============\u003e..............] - ETA: 37s - loss: 1.1662 - accuracy: 0.7053\n","Epoch 00001: accuracy did not improve from 0.74479\n","111/200 [===============\u003e..............] - ETA: 37s - loss: 1.1650 - accuracy: 0.7058\n","Epoch 00001: accuracy did not improve from 0.74479\n","112/200 [===============\u003e..............] - ETA: 36s - loss: 1.1615 - accuracy: 0.7068\n","Epoch 00001: accuracy did not improve from 0.74479\n","113/200 [===============\u003e..............] - ETA: 36s - loss: 1.1609 - accuracy: 0.7071\n","Epoch 00001: accuracy did not improve from 0.74479\n","114/200 [================\u003e.............] - ETA: 35s - loss: 1.1611 - accuracy: 0.7070\n","Epoch 00001: accuracy did not improve from 0.74479\n","115/200 [================\u003e.............] - ETA: 35s - loss: 1.1605 - accuracy: 0.7075\n","Epoch 00001: accuracy did not improve from 0.74479\n","116/200 [================\u003e.............] - ETA: 34s - loss: 1.1594 - accuracy: 0.7080\n","Epoch 00001: accuracy did not improve from 0.74479\n","117/200 [================\u003e.............] - ETA: 34s - loss: 1.1618 - accuracy: 0.7071\n","Epoch 00001: accuracy did not improve from 0.74479\n","118/200 [================\u003e.............] - ETA: 34s - loss: 1.1621 - accuracy: 0.7075\n","Epoch 00001: accuracy did not improve from 0.74479\n","119/200 [================\u003e.............] - ETA: 33s - loss: 1.1655 - accuracy: 0.7067\n","Epoch 00001: accuracy did not improve from 0.74479\n","120/200 [=================\u003e............] - ETA: 33s - loss: 1.1684 - accuracy: 0.7057\n","Epoch 00001: accuracy did not improve from 0.74479\n","121/200 [=================\u003e............] - ETA: 32s - loss: 1.1687 - accuracy: 0.7056\n","Epoch 00001: accuracy did not improve from 0.74479\n","122/200 [=================\u003e............] - ETA: 32s - loss: 1.1670 - accuracy: 0.7062\n","Epoch 00001: accuracy did not improve from 0.74479\n","123/200 [=================\u003e............] - ETA: 31s - loss: 1.1672 - accuracy: 0.7066\n","Epoch 00001: accuracy did not improve from 0.74479\n","124/200 [=================\u003e............] - ETA: 31s - loss: 1.1672 - accuracy: 0.7067\n","Epoch 00001: accuracy did not improve from 0.74479\n","125/200 [=================\u003e............] - ETA: 31s - loss: 1.1693 - accuracy: 0.7065\n","Epoch 00001: accuracy did not improve from 0.74479\n","126/200 [=================\u003e............] - ETA: 30s - loss: 1.1687 - accuracy: 0.7067\n","Epoch 00001: accuracy did not improve from 0.74479\n","127/200 [==================\u003e...........] - ETA: 30s - loss: 1.1698 - accuracy: 0.7062\n","Epoch 00001: accuracy did not improve from 0.74479\n","128/200 [==================\u003e...........] - ETA: 29s - loss: 1.1707 - accuracy: 0.7053\n","Epoch 00001: accuracy did not improve from 0.74479\n","129/200 [==================\u003e...........] - ETA: 29s - loss: 1.1689 - accuracy: 0.7058\n","Epoch 00001: accuracy did not improve from 0.74479\n","130/200 [==================\u003e...........] - ETA: 29s - loss: 1.1687 - accuracy: 0.7063\n","Epoch 00001: accuracy did not improve from 0.74479\n","131/200 [==================\u003e...........] - ETA: 28s - loss: 1.1695 - accuracy: 0.7060\n","Epoch 00001: accuracy did not improve from 0.74479\n","132/200 [==================\u003e...........] - ETA: 28s - loss: 1.1708 - accuracy: 0.7060\n","Epoch 00001: accuracy did not improve from 0.74479\n","133/200 [==================\u003e...........] - ETA: 27s - loss: 1.1729 - accuracy: 0.7057\n","Epoch 00001: accuracy did not improve from 0.74479\n","134/200 [===================\u003e..........] - ETA: 27s - loss: 1.1721 - accuracy: 0.7055\n","Epoch 00001: accuracy did not improve from 0.74479\n","135/200 [===================\u003e..........] - ETA: 26s - loss: 1.1715 - accuracy: 0.7054\n","Epoch 00001: accuracy did not improve from 0.74479\n","136/200 [===================\u003e..........] - ETA: 26s - loss: 1.1716 - accuracy: 0.7055\n","Epoch 00001: accuracy did not improve from 0.74479\n","137/200 [===================\u003e..........] - ETA: 26s - loss: 1.1728 - accuracy: 0.7052\n","Epoch 00001: accuracy did not improve from 0.74479\n","138/200 [===================\u003e..........] - ETA: 25s - loss: 1.1719 - accuracy: 0.7060\n","Epoch 00001: accuracy did not improve from 0.74479\n","139/200 [===================\u003e..........] - ETA: 25s - loss: 1.1740 - accuracy: 0.7055\n","Epoch 00001: accuracy did not improve from 0.74479\n","140/200 [====================\u003e.........] - ETA: 24s - loss: 1.1747 - accuracy: 0.7051\n","Epoch 00001: accuracy did not improve from 0.74479\n","141/200 [====================\u003e.........] - ETA: 24s - loss: 1.1741 - accuracy: 0.7053\n","Epoch 00001: accuracy did not improve from 0.74479\n","142/200 [====================\u003e.........] - ETA: 23s - loss: 1.1745 - accuracy: 0.7053\n","Epoch 00001: accuracy did not improve from 0.74479\n","143/200 [====================\u003e.........] - ETA: 23s - loss: 1.1720 - accuracy: 0.7059\n","Epoch 00001: accuracy did not improve from 0.74479\n","144/200 [====================\u003e.........] - ETA: 23s - loss: 1.1738 - accuracy: 0.7052\n","Epoch 00001: accuracy did not improve from 0.74479\n","145/200 [====================\u003e.........] - ETA: 22s - loss: 1.1745 - accuracy: 0.7050\n","Epoch 00001: accuracy did not improve from 0.74479\n","146/200 [====================\u003e.........] - ETA: 22s - loss: 1.1748 - accuracy: 0.7047\n","Epoch 00001: accuracy did not improve from 0.74479\n","147/200 [=====================\u003e........] - ETA: 21s - loss: 1.1763 - accuracy: 0.7043\n","Epoch 00001: accuracy did not improve from 0.74479\n","148/200 [=====================\u003e........] - ETA: 21s - loss: 1.1756 - accuracy: 0.7046\n","Epoch 00001: accuracy did not improve from 0.74479\n","149/200 [=====================\u003e........] - ETA: 21s - loss: 1.1746 - accuracy: 0.7048\n","Epoch 00001: accuracy did not improve from 0.74479\n","150/200 [=====================\u003e........] - ETA: 20s - loss: 1.1750 - accuracy: 0.7045\n","Epoch 00001: accuracy did not improve from 0.74479\n","151/200 [=====================\u003e........] - ETA: 20s - loss: 1.1742 - accuracy: 0.7045\n","Epoch 00001: accuracy did not improve from 0.74479\n","152/200 [=====================\u003e........] - ETA: 19s - loss: 1.1717 - accuracy: 0.7050\n","Epoch 00001: accuracy did not improve from 0.74479\n","153/200 [=====================\u003e........] - ETA: 19s - loss: 1.1726 - accuracy: 0.7042\n","Epoch 00001: accuracy did not improve from 0.74479\n","154/200 [======================\u003e.......] - ETA: 18s - loss: 1.1709 - accuracy: 0.7047\n","Epoch 00001: accuracy did not improve from 0.74479\n","155/200 [======================\u003e.......] - ETA: 18s - loss: 1.1708 - accuracy: 0.7045\n","Epoch 00001: accuracy did not improve from 0.74479\n","156/200 [======================\u003e.......] - ETA: 18s - loss: 1.1713 - accuracy: 0.7047\n","Epoch 00001: accuracy did not improve from 0.74479\n","157/200 [======================\u003e.......] - ETA: 17s - loss: 1.1710 - accuracy: 0.7052\n","Epoch 00001: accuracy did not improve from 0.74479\n","158/200 [======================\u003e.......] - ETA: 17s - loss: 1.1725 - accuracy: 0.7050\n","Epoch 00001: accuracy did not improve from 0.74479\n","159/200 [======================\u003e.......] - ETA: 16s - loss: 1.1720 - accuracy: 0.7053\n","Epoch 00001: accuracy did not improve from 0.74479\n","160/200 [=======================\u003e......] - ETA: 16s - loss: 1.1725 - accuracy: 0.7053\n","Epoch 00001: accuracy did not improve from 0.74479\n","161/200 [=======================\u003e......] - ETA: 16s - loss: 1.1728 - accuracy: 0.7049\n","Epoch 00001: accuracy did not improve from 0.74479\n","162/200 [=======================\u003e......] - ETA: 15s - loss: 1.1749 - accuracy: 0.7041\n","Epoch 00001: accuracy did not improve from 0.74479\n","163/200 [=======================\u003e......] - ETA: 15s - loss: 1.1744 - accuracy: 0.7043\n","Epoch 00001: accuracy did not improve from 0.74479\n","164/200 [=======================\u003e......] - ETA: 14s - loss: 1.1756 - accuracy: 0.7041\n","Epoch 00001: accuracy did not improve from 0.74479\n","165/200 [=======================\u003e......] - ETA: 14s - loss: 1.1745 - accuracy: 0.7042\n","Epoch 00001: accuracy did not improve from 0.74479\n","166/200 [=======================\u003e......] - ETA: 14s - loss: 1.1749 - accuracy: 0.7040\n","Epoch 00001: accuracy did not improve from 0.74479\n","167/200 [========================\u003e.....] - ETA: 13s - loss: 1.1741 - accuracy: 0.7041\n","Epoch 00001: accuracy did not improve from 0.74479\n","168/200 [========================\u003e.....] - ETA: 13s - loss: 1.1732 - accuracy: 0.7041\n","Epoch 00001: accuracy did not improve from 0.74479\n","169/200 [========================\u003e.....] - ETA: 12s - loss: 1.1749 - accuracy: 0.7037\n","Epoch 00001: accuracy did not improve from 0.74479\n","170/200 [========================\u003e.....] - ETA: 12s - loss: 1.1792 - accuracy: 0.7028\n","Epoch 00001: accuracy did not improve from 0.74479\n","171/200 [========================\u003e.....] - ETA: 11s - loss: 1.1796 - accuracy: 0.7029\n","Epoch 00001: accuracy did not improve from 0.74479\n","172/200 [========================\u003e.....] - ETA: 11s - loss: 1.1807 - accuracy: 0.7026\n","Epoch 00001: accuracy did not improve from 0.74479\n","173/200 [========================\u003e.....] - ETA: 11s - loss: 1.1813 - accuracy: 0.7029\n","Epoch 00001: accuracy did not improve from 0.74479\n","174/200 [=========================\u003e....] - ETA: 10s - loss: 1.1814 - accuracy: 0.7029\n","Epoch 00001: accuracy did not improve from 0.74479\n","175/200 [=========================\u003e....] - ETA: 10s - loss: 1.1827 - accuracy: 0.7029\n","Epoch 00001: accuracy did not improve from 0.74479\n","176/200 [=========================\u003e....] - ETA: 9s - loss: 1.1818 - accuracy: 0.7030 \n","Epoch 00001: accuracy did not improve from 0.74479\n","177/200 [=========================\u003e....] - ETA: 9s - loss: 1.1816 - accuracy: 0.7027\n","Epoch 00001: accuracy did not improve from 0.74479\n","178/200 [=========================\u003e....] - ETA: 9s - loss: 1.1839 - accuracy: 0.7023\n","Epoch 00001: accuracy did not improve from 0.74479\n","179/200 [=========================\u003e....] - ETA: 8s - loss: 1.1831 - accuracy: 0.7025\n","Epoch 00001: accuracy did not improve from 0.74479\n","180/200 [==========================\u003e...] - ETA: 8s - loss: 1.1834 - accuracy: 0.7026\n","Epoch 00001: accuracy did not improve from 0.74479\n","181/200 [==========================\u003e...] - ETA: 7s - loss: 1.1812 - accuracy: 0.7034\n","Epoch 00001: accuracy did not improve from 0.74479\n","182/200 [==========================\u003e...] - ETA: 7s - loss: 1.1802 - accuracy: 0.7036\n","Epoch 00001: accuracy did not improve from 0.74479\n","183/200 [==========================\u003e...] - ETA: 6s - loss: 1.1796 - accuracy: 0.7038\n","Epoch 00001: accuracy did not improve from 0.74479\n","184/200 [==========================\u003e...] - ETA: 6s - loss: 1.1799 - accuracy: 0.7039\n","Epoch 00001: accuracy did not improve from 0.74479\n","185/200 [==========================\u003e...] - ETA: 6s - loss: 1.1784 - accuracy: 0.7043\n","Epoch 00001: accuracy did not improve from 0.74479\n","186/200 [==========================\u003e...] - ETA: 5s - loss: 1.1782 - accuracy: 0.7043\n","Epoch 00001: accuracy did not improve from 0.74479\n","187/200 [===========================\u003e..] - ETA: 5s - loss: 1.1793 - accuracy: 0.7044\n","Epoch 00001: accuracy did not improve from 0.74479\n","188/200 [===========================\u003e..] - ETA: 4s - loss: 1.1796 - accuracy: 0.7045\n","Epoch 00001: accuracy did not improve from 0.74479\n","189/200 [===========================\u003e..] - ETA: 4s - loss: 1.1802 - accuracy: 0.7045\n","Epoch 00001: accuracy did not improve from 0.74479\n","190/200 [===========================\u003e..] - ETA: 4s - loss: 1.1817 - accuracy: 0.7042\n","Epoch 00001: accuracy did not improve from 0.74479\n","191/200 [===========================\u003e..] - ETA: 3s - loss: 1.1818 - accuracy: 0.7041\n","Epoch 00001: accuracy did not improve from 0.74479\n","192/200 [===========================\u003e..] - ETA: 3s - loss: 1.1835 - accuracy: 0.7041\n","Epoch 00001: accuracy did not improve from 0.74479\n","193/200 [===========================\u003e..] - ETA: 2s - loss: 1.1828 - accuracy: 0.7043\n","Epoch 00001: accuracy did not improve from 0.74479\n","194/200 [============================\u003e.] - ETA: 2s - loss: 1.1841 - accuracy: 0.7040\n","Epoch 00001: accuracy did not improve from 0.74479\n","195/200 [============================\u003e.] - ETA: 2s - loss: 1.1852 - accuracy: 0.7039\n","Epoch 00001: accuracy did not improve from 0.74479\n","196/200 [============================\u003e.] - ETA: 1s - loss: 1.1855 - accuracy: 0.7037\n","Epoch 00001: accuracy did not improve from 0.74479\n","197/200 [============================\u003e.] - ETA: 1s - loss: 1.1852 - accuracy: 0.7039\n","Epoch 00001: accuracy did not improve from 0.74479\n","198/200 [============================\u003e.] - ETA: 0s - loss: 1.1847 - accuracy: 0.7042\n","Epoch 00001: accuracy did not improve from 0.74479\n","199/200 [============================\u003e.] - ETA: 0s - loss: 1.1854 - accuracy: 0.7040\n","Epoch 00001: accuracy did not improve from 0.74479\n","200/200 [==============================] - ETA: 0s - loss: 1.1852 - accuracy: 0.7039WARNING:tensorflow:Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches (in this case, 200 batches). You may need to use the repeat() function when building your dataset.\n","200/200 [==============================] - 106s 515ms/step - loss: 1.1852 - accuracy: 0.7039 - val_loss: 2.1984 - val_accuracy: 0.5317 - lr: 0.0010\n","Epoch 2/10\n","\n","Epoch 00002: accuracy did not improve from 0.74479\n","  1/200 [..............................] - ETA: 2:00 - loss: 1.0389 - accuracy: 0.7031\n","Epoch 00002: accuracy did not improve from 0.74479\n","  2/200 [..............................] - ETA: 1:23 - loss: 1.1356 - accuracy: 0.6953\n","Epoch 00002: accuracy did not improve from 0.74479\n","  3/200 [..............................] - ETA: 1:23 - loss: 1.2378 - accuracy: 0.6719\n","Epoch 00002: accuracy did not improve from 0.74479\n","  4/200 [..............................] - ETA: 1:21 - loss: 1.1954 - accuracy: 0.6797\n","Epoch 00002: accuracy did not improve from 0.74479\n","  5/200 [..............................] - ETA: 1:09 - loss: 1.2151 - accuracy: 0.6840\n","Epoch 00002: accuracy did not improve from 0.74479\n","  6/200 [..............................] - ETA: 1:14 - loss: 1.1838 - accuracy: 0.6932\n","Epoch 00002: accuracy did not improve from 0.74479\n","  7/200 [\u003e.............................] - ETA: 1:15 - loss: 1.1908 - accuracy: 0.6923\n","Epoch 00002: accuracy did not improve from 0.74479\n","  8/200 [\u003e.............................] - ETA: 1:16 - loss: 1.2066 - accuracy: 0.6896\n","Epoch 00002: accuracy did not improve from 0.74479\n","  9/200 [\u003e.............................] - ETA: 1:16 - loss: 1.2170 - accuracy: 0.6893\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 10/200 [\u003e.............................] - ETA: 1:16 - loss: 1.1963 - accuracy: 0.6941\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 11/200 [\u003e.............................] - ETA: 1:16 - loss: 1.2004 - accuracy: 0.6905\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 12/200 [\u003e.............................] - ETA: 1:15 - loss: 1.1892 - accuracy: 0.6957\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 13/200 [\u003e.............................] - ETA: 1:15 - loss: 1.1804 - accuracy: 0.6988\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 14/200 [=\u003e............................] - ETA: 1:14 - loss: 1.1802 - accuracy: 0.6979\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 15/200 [=\u003e............................] - ETA: 1:14 - loss: 1.1810 - accuracy: 0.7004\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 16/200 [=\u003e............................] - ETA: 1:13 - loss: 1.1635 - accuracy: 0.7067\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 17/200 [=\u003e............................] - ETA: 1:13 - loss: 1.1636 - accuracy: 0.7055\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 18/200 [=\u003e............................] - ETA: 1:12 - loss: 1.1747 - accuracy: 0.7027\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 19/200 [=\u003e............................] - ETA: 1:12 - loss: 1.1659 - accuracy: 0.7044\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 20/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.1766 - accuracy: 0.7027\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 21/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.1759 - accuracy: 0.7043\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 22/200 [==\u003e...........................] - ETA: 1:11 - loss: 1.1724 - accuracy: 0.7064\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 23/200 [==\u003e...........................] - ETA: 1:11 - loss: 1.1715 - accuracy: 0.7069\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 24/200 [==\u003e...........................] - ETA: 1:10 - loss: 1.1615 - accuracy: 0.7101\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 25/200 [==\u003e...........................] - ETA: 1:10 - loss: 1.1634 - accuracy: 0.7092\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 26/200 [==\u003e...........................] - ETA: 1:09 - loss: 1.1638 - accuracy: 0.7083\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 27/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.1649 - accuracy: 0.7075\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 28/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.1670 - accuracy: 0.7063\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 29/200 [===\u003e..........................] - ETA: 1:08 - loss: 1.1776 - accuracy: 0.7045\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 30/200 [===\u003e..........................] - ETA: 1:08 - loss: 1.1823 - accuracy: 0.7039\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 31/200 [===\u003e..........................] - ETA: 1:07 - loss: 1.1792 - accuracy: 0.7029\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 32/200 [===\u003e..........................] - ETA: 1:07 - loss: 1.1710 - accuracy: 0.7054\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 33/200 [===\u003e..........................] - ETA: 1:06 - loss: 1.1801 - accuracy: 0.7019\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 34/200 [====\u003e.........................] - ETA: 1:06 - loss: 1.1766 - accuracy: 0.7020\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 35/200 [====\u003e.........................] - ETA: 1:05 - loss: 1.1750 - accuracy: 0.7020\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 36/200 [====\u003e.........................] - ETA: 1:05 - loss: 1.1720 - accuracy: 0.7029\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 37/200 [====\u003e.........................] - ETA: 1:05 - loss: 1.1750 - accuracy: 0.7038\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 38/200 [====\u003e.........................] - ETA: 1:04 - loss: 1.1837 - accuracy: 0.7021\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 39/200 [====\u003e.........................] - ETA: 1:04 - loss: 1.1820 - accuracy: 0.7041\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 40/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1778 - accuracy: 0.7065\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 41/200 [=====\u003e........................] - ETA: 1:03 - loss: 1.1832 - accuracy: 0.7064\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 42/200 [=====\u003e........................] - ETA: 1:03 - loss: 1.1882 - accuracy: 0.7044\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 43/200 [=====\u003e........................] - ETA: 1:03 - loss: 1.1849 - accuracy: 0.7051\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 44/200 [=====\u003e........................] - ETA: 1:03 - loss: 1.1790 - accuracy: 0.7073\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 45/200 [=====\u003e........................] - ETA: 1:02 - loss: 1.1827 - accuracy: 0.7051\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 46/200 [=====\u003e........................] - ETA: 1:02 - loss: 1.1855 - accuracy: 0.7040\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 47/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1888 - accuracy: 0.7026\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 48/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1889 - accuracy: 0.7033\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 49/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1875 - accuracy: 0.7036\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 50/200 [======\u003e.......................] - ETA: 1:00 - loss: 1.1909 - accuracy: 0.7030\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 51/200 [======\u003e.......................] - ETA: 1:00 - loss: 1.1816 - accuracy: 0.7058\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 52/200 [======\u003e.......................] - ETA: 59s - loss: 1.1827 - accuracy: 0.7033 \n","Epoch 00002: accuracy did not improve from 0.74479\n"," 53/200 [======\u003e.......................] - ETA: 59s - loss: 1.1800 - accuracy: 0.7045\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 54/200 [=======\u003e......................] - ETA: 58s - loss: 1.1819 - accuracy: 0.7039\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 55/200 [=======\u003e......................] - ETA: 58s - loss: 1.1848 - accuracy: 0.7030\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 56/200 [=======\u003e......................] - ETA: 58s - loss: 1.1858 - accuracy: 0.7033\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 57/200 [=======\u003e......................] - ETA: 57s - loss: 1.1879 - accuracy: 0.7024\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 58/200 [=======\u003e......................] - ETA: 57s - loss: 1.1899 - accuracy: 0.7030\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 59/200 [=======\u003e......................] - ETA: 56s - loss: 1.1878 - accuracy: 0.7049\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 60/200 [========\u003e.....................] - ETA: 56s - loss: 1.1917 - accuracy: 0.7043\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 61/200 [========\u003e.....................] - ETA: 56s - loss: 1.1946 - accuracy: 0.7038\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 62/200 [========\u003e.....................] - ETA: 55s - loss: 1.1988 - accuracy: 0.7027\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 63/200 [========\u003e.....................] - ETA: 55s - loss: 1.2050 - accuracy: 0.7005\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 64/200 [========\u003e.....................] - ETA: 55s - loss: 1.2001 - accuracy: 0.7015\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 65/200 [========\u003e.....................] - ETA: 54s - loss: 1.2040 - accuracy: 0.7011\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 66/200 [========\u003e.....................] - ETA: 54s - loss: 1.2076 - accuracy: 0.7004\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 67/200 [=========\u003e....................] - ETA: 53s - loss: 1.2072 - accuracy: 0.7009\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 68/200 [=========\u003e....................] - ETA: 53s - loss: 1.2067 - accuracy: 0.7014\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 69/200 [=========\u003e....................] - ETA: 53s - loss: 1.2043 - accuracy: 0.7026\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 70/200 [=========\u003e....................] - ETA: 52s - loss: 1.2049 - accuracy: 0.7028\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 71/200 [=========\u003e....................] - ETA: 52s - loss: 1.2052 - accuracy: 0.7023\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 72/200 [=========\u003e....................] - ETA: 51s - loss: 1.2083 - accuracy: 0.7015\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 73/200 [=========\u003e....................] - ETA: 51s - loss: 1.2106 - accuracy: 0.7009\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 74/200 [==========\u003e...................] - ETA: 51s - loss: 1.2091 - accuracy: 0.7020\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 75/200 [==========\u003e...................] - ETA: 50s - loss: 1.2088 - accuracy: 0.7022\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 76/200 [==========\u003e...................] - ETA: 50s - loss: 1.2068 - accuracy: 0.7028\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 77/200 [==========\u003e...................] - ETA: 49s - loss: 1.2022 - accuracy: 0.7047\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 78/200 [==========\u003e...................] - ETA: 49s - loss: 1.2020 - accuracy: 0.7052\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 79/200 [==========\u003e...................] - ETA: 49s - loss: 1.2061 - accuracy: 0.7048\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 80/200 [===========\u003e..................] - ETA: 48s - loss: 1.2075 - accuracy: 0.7042\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 81/200 [===========\u003e..................] - ETA: 48s - loss: 1.2087 - accuracy: 0.7034\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 82/200 [===========\u003e..................] - ETA: 47s - loss: 1.2080 - accuracy: 0.7040\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 83/200 [===========\u003e..................] - ETA: 47s - loss: 1.2087 - accuracy: 0.7042\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 84/200 [===========\u003e..................] - ETA: 47s - loss: 1.2070 - accuracy: 0.7042\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 85/200 [===========\u003e..................] - ETA: 46s - loss: 1.2043 - accuracy: 0.7049\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 86/200 [===========\u003e..................] - ETA: 46s - loss: 1.2051 - accuracy: 0.7047\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 87/200 [============\u003e.................] - ETA: 45s - loss: 1.2099 - accuracy: 0.7038\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 88/200 [============\u003e.................] - ETA: 45s - loss: 1.2120 - accuracy: 0.7038\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 89/200 [============\u003e.................] - ETA: 45s - loss: 1.2089 - accuracy: 0.7041\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 90/200 [============\u003e.................] - ETA: 44s - loss: 1.2087 - accuracy: 0.7041\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 91/200 [============\u003e.................] - ETA: 44s - loss: 1.2093 - accuracy: 0.7036\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 92/200 [============\u003e.................] - ETA: 43s - loss: 1.2091 - accuracy: 0.7036\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 93/200 [============\u003e.................] - ETA: 43s - loss: 1.2081 - accuracy: 0.7034\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 94/200 [=============\u003e................] - ETA: 43s - loss: 1.2074 - accuracy: 0.7027\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 95/200 [=============\u003e................] - ETA: 42s - loss: 1.2051 - accuracy: 0.7032\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 96/200 [=============\u003e................] - ETA: 42s - loss: 1.2064 - accuracy: 0.7019\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 97/200 [=============\u003e................] - ETA: 42s - loss: 1.2039 - accuracy: 0.7022\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 98/200 [=============\u003e................] - ETA: 41s - loss: 1.2042 - accuracy: 0.7024\n","Epoch 00002: accuracy did not improve from 0.74479\n"," 99/200 [=============\u003e................] - ETA: 41s - loss: 1.2056 - accuracy: 0.7023\n","Epoch 00002: accuracy did not improve from 0.74479\n","100/200 [==============\u003e...............] - ETA: 40s - loss: 1.2058 - accuracy: 0.7019\n","Epoch 00002: accuracy did not improve from 0.74479\n","101/200 [==============\u003e...............] - ETA: 40s - loss: 1.2034 - accuracy: 0.7023\n","Epoch 00002: accuracy did not improve from 0.74479\n","102/200 [==============\u003e...............] - ETA: 39s - loss: 1.2077 - accuracy: 0.7014\n","Epoch 00002: accuracy did not improve from 0.74479\n","103/200 [==============\u003e...............] - ETA: 39s - loss: 1.2068 - accuracy: 0.7018\n","Epoch 00002: accuracy did not improve from 0.74479\n","104/200 [==============\u003e...............] - ETA: 39s - loss: 1.2068 - accuracy: 0.7017\n","Epoch 00002: accuracy did not improve from 0.74479\n","105/200 [==============\u003e...............] - ETA: 38s - loss: 1.2065 - accuracy: 0.7014\n","Epoch 00002: accuracy did not improve from 0.74479\n","106/200 [==============\u003e...............] - ETA: 38s - loss: 1.2048 - accuracy: 0.7014\n","Epoch 00002: accuracy did not improve from 0.74479\n","107/200 [===============\u003e..............] - ETA: 37s - loss: 1.2036 - accuracy: 0.7019\n","Epoch 00002: accuracy did not improve from 0.74479\n","108/200 [===============\u003e..............] - ETA: 37s - loss: 1.2032 - accuracy: 0.7020\n","Epoch 00002: accuracy did not improve from 0.74479\n","109/200 [===============\u003e..............] - ETA: 37s - loss: 1.2040 - accuracy: 0.7018\n","Epoch 00002: accuracy did not improve from 0.74479\n","110/200 [===============\u003e..............] - ETA: 36s - loss: 1.2050 - accuracy: 0.7011\n","Epoch 00002: accuracy did not improve from 0.74479\n","111/200 [===============\u003e..............] - ETA: 36s - loss: 1.2040 - accuracy: 0.7014\n","Epoch 00002: accuracy did not improve from 0.74479\n","112/200 [===============\u003e..............] - ETA: 35s - loss: 1.2031 - accuracy: 0.7014\n","Epoch 00002: accuracy did not improve from 0.74479\n","113/200 [===============\u003e..............] - ETA: 35s - loss: 1.2023 - accuracy: 0.7014\n","Epoch 00002: accuracy did not improve from 0.74479\n","114/200 [================\u003e.............] - ETA: 35s - loss: 1.2011 - accuracy: 0.7018\n","Epoch 00002: accuracy did not improve from 0.74479\n","115/200 [================\u003e.............] - ETA: 34s - loss: 1.1994 - accuracy: 0.7021\n","Epoch 00002: accuracy did not improve from 0.74479\n","116/200 [================\u003e.............] - ETA: 34s - loss: 1.1980 - accuracy: 0.7020\n","Epoch 00002: accuracy did not improve from 0.74479\n","117/200 [================\u003e.............] - ETA: 33s - loss: 1.1990 - accuracy: 0.7014\n","Epoch 00002: accuracy did not improve from 0.74479\n","118/200 [================\u003e.............] - ETA: 33s - loss: 1.2021 - accuracy: 0.7004\n","Epoch 00002: accuracy did not improve from 0.74479\n","119/200 [================\u003e.............] - ETA: 32s - loss: 1.1990 - accuracy: 0.7009\n","Epoch 00002: accuracy did not improve from 0.74479\n","120/200 [=================\u003e............] - ETA: 32s - loss: 1.2005 - accuracy: 0.7006\n","Epoch 00002: accuracy did not improve from 0.74479\n","121/200 [=================\u003e............] - ETA: 32s - loss: 1.2037 - accuracy: 0.6997\n","Epoch 00002: accuracy did not improve from 0.74479\n","122/200 [=================\u003e............] - ETA: 31s - loss: 1.2027 - accuracy: 0.6998\n","Epoch 00002: accuracy did not improve from 0.74479\n","123/200 [=================\u003e............] - ETA: 31s - loss: 1.2049 - accuracy: 0.6996\n","Epoch 00002: accuracy did not improve from 0.74479\n","124/200 [=================\u003e............] - ETA: 30s - loss: 1.2060 - accuracy: 0.6994\n","Epoch 00002: accuracy did not improve from 0.74479\n","125/200 [=================\u003e............] - ETA: 30s - loss: 1.2061 - accuracy: 0.6995\n","Epoch 00002: accuracy did not improve from 0.74479\n","126/200 [=================\u003e............] - ETA: 30s - loss: 1.2029 - accuracy: 0.7001\n","Epoch 00002: accuracy did not improve from 0.74479\n","127/200 [==================\u003e...........] - ETA: 29s - loss: 1.2037 - accuracy: 0.7001\n","Epoch 00002: accuracy did not improve from 0.74479\n","128/200 [==================\u003e...........] - ETA: 29s - loss: 1.2021 - accuracy: 0.7005\n","Epoch 00002: accuracy did not improve from 0.74479\n","129/200 [==================\u003e...........] - ETA: 28s - loss: 1.2017 - accuracy: 0.7004\n","Epoch 00002: accuracy did not improve from 0.74479\n","130/200 [==================\u003e...........] - ETA: 28s - loss: 1.2034 - accuracy: 0.7004\n","Epoch 00002: accuracy did not improve from 0.74479\n","131/200 [==================\u003e...........] - ETA: 28s - loss: 1.2057 - accuracy: 0.6998\n","Epoch 00002: accuracy did not improve from 0.74479\n","132/200 [==================\u003e...........] - ETA: 27s - loss: 1.2058 - accuracy: 0.7001\n","Epoch 00002: accuracy did not improve from 0.74479\n","133/200 [==================\u003e...........] - ETA: 27s - loss: 1.2059 - accuracy: 0.7002\n","Epoch 00002: accuracy did not improve from 0.74479\n","134/200 [===================\u003e..........] - ETA: 26s - loss: 1.2046 - accuracy: 0.7007\n","Epoch 00002: accuracy did not improve from 0.74479\n","135/200 [===================\u003e..........] - ETA: 26s - loss: 1.2028 - accuracy: 0.7016\n","Epoch 00002: accuracy did not improve from 0.74479\n","136/200 [===================\u003e..........] - ETA: 26s - loss: 1.2047 - accuracy: 0.7013\n","Epoch 00002: accuracy did not improve from 0.74479\n","137/200 [===================\u003e..........] - ETA: 25s - loss: 1.2064 - accuracy: 0.7010\n","Epoch 00002: accuracy did not improve from 0.74479\n","138/200 [===================\u003e..........] - ETA: 25s - loss: 1.2047 - accuracy: 0.7013\n","Epoch 00002: accuracy did not improve from 0.74479\n","139/200 [===================\u003e..........] - ETA: 24s - loss: 1.2068 - accuracy: 0.7005\n","Epoch 00002: accuracy did not improve from 0.74479\n","140/200 [====================\u003e.........] - ETA: 24s - loss: 1.2059 - accuracy: 0.7005\n","Epoch 00002: accuracy did not improve from 0.74479\n","141/200 [====================\u003e.........] - ETA: 23s - loss: 1.2087 - accuracy: 0.6996\n","Epoch 00002: accuracy did not improve from 0.74479\n","142/200 [====================\u003e.........] - ETA: 23s - loss: 1.2094 - accuracy: 0.6996\n","Epoch 00002: accuracy did not improve from 0.74479\n","143/200 [====================\u003e.........] - ETA: 23s - loss: 1.2097 - accuracy: 0.6998\n","Epoch 00002: accuracy did not improve from 0.74479\n","144/200 [====================\u003e.........] - ETA: 22s - loss: 1.2095 - accuracy: 0.6995\n","Epoch 00002: accuracy did not improve from 0.74479\n","145/200 [====================\u003e.........] - ETA: 22s - loss: 1.2090 - accuracy: 0.6994\n","Epoch 00002: accuracy did not improve from 0.74479\n","146/200 [====================\u003e.........] - ETA: 21s - loss: 1.2084 - accuracy: 0.6997\n","Epoch 00002: accuracy did not improve from 0.74479\n","147/200 [=====================\u003e........] - ETA: 21s - loss: 1.2085 - accuracy: 0.6993\n","Epoch 00002: accuracy did not improve from 0.74479\n","148/200 [=====================\u003e........] - ETA: 21s - loss: 1.2072 - accuracy: 0.6996\n","Epoch 00002: accuracy did not improve from 0.74479\n","149/200 [=====================\u003e........] - ETA: 20s - loss: 1.2061 - accuracy: 0.6994\n","Epoch 00002: accuracy did not improve from 0.74479\n","150/200 [=====================\u003e........] - ETA: 20s - loss: 1.2072 - accuracy: 0.6990\n","Epoch 00002: accuracy did not improve from 0.74479\n","151/200 [=====================\u003e........] - ETA: 19s - loss: 1.2070 - accuracy: 0.6990\n","Epoch 00002: accuracy did not improve from 0.74479\n","152/200 [=====================\u003e........] - ETA: 19s - loss: 1.2081 - accuracy: 0.6987\n","Epoch 00002: accuracy did not improve from 0.74479\n","153/200 [=====================\u003e........] - ETA: 19s - loss: 1.2093 - accuracy: 0.6984\n","Epoch 00002: accuracy did not improve from 0.74479\n","154/200 [======================\u003e.......] - ETA: 18s - loss: 1.2109 - accuracy: 0.6980\n","Epoch 00002: accuracy did not improve from 0.74479\n","155/200 [======================\u003e.......] - ETA: 18s - loss: 1.2109 - accuracy: 0.6979\n","Epoch 00002: accuracy did not improve from 0.74479\n","156/200 [======================\u003e.......] - ETA: 17s - loss: 1.2091 - accuracy: 0.6982\n","Epoch 00002: accuracy did not improve from 0.74479\n","157/200 [======================\u003e.......] - ETA: 17s - loss: 1.2078 - accuracy: 0.6983\n","Epoch 00002: accuracy did not improve from 0.74479\n","158/200 [======================\u003e.......] - ETA: 17s - loss: 1.2080 - accuracy: 0.6983\n","Epoch 00002: accuracy did not improve from 0.74479\n","159/200 [======================\u003e.......] - ETA: 16s - loss: 1.2052 - accuracy: 0.6990\n","Epoch 00002: accuracy did not improve from 0.74479\n","160/200 [=======================\u003e......] - ETA: 16s - loss: 1.2086 - accuracy: 0.6984\n","Epoch 00002: accuracy did not improve from 0.74479\n","161/200 [=======================\u003e......] - ETA: 15s - loss: 1.2092 - accuracy: 0.6979\n","Epoch 00002: accuracy did not improve from 0.74479\n","162/200 [=======================\u003e......] - ETA: 15s - loss: 1.2080 - accuracy: 0.6982\n","Epoch 00002: accuracy did not improve from 0.74479\n","163/200 [=======================\u003e......] - ETA: 15s - loss: 1.2059 - accuracy: 0.6990\n","Epoch 00002: accuracy did not improve from 0.74479\n","164/200 [=======================\u003e......] - ETA: 14s - loss: 1.2075 - accuracy: 0.6990\n","Epoch 00002: accuracy did not improve from 0.74479\n","165/200 [=======================\u003e......] - ETA: 14s - loss: 1.2059 - accuracy: 0.6993\n","Epoch 00002: accuracy did not improve from 0.74479\n","166/200 [=======================\u003e......] - ETA: 13s - loss: 1.2053 - accuracy: 0.6991\n","Epoch 00002: accuracy did not improve from 0.74479\n","167/200 [========================\u003e.....] - ETA: 13s - loss: 1.2045 - accuracy: 0.6995\n","Epoch 00002: accuracy did not improve from 0.74479\n","168/200 [========================\u003e.....] - ETA: 13s - loss: 1.2039 - accuracy: 0.6998\n","Epoch 00002: accuracy did not improve from 0.74479\n","169/200 [========================\u003e.....] - ETA: 12s - loss: 1.2040 - accuracy: 0.6998\n","Epoch 00002: accuracy did not improve from 0.74479\n","170/200 [========================\u003e.....] - ETA: 12s - loss: 1.2037 - accuracy: 0.6999\n","Epoch 00002: accuracy did not improve from 0.74479\n","171/200 [========================\u003e.....] - ETA: 11s - loss: 1.2022 - accuracy: 0.7004\n","Epoch 00002: accuracy did not improve from 0.74479\n","172/200 [========================\u003e.....] - ETA: 11s - loss: 1.1997 - accuracy: 0.7008\n","Epoch 00002: accuracy did not improve from 0.74479\n","173/200 [========================\u003e.....] - ETA: 11s - loss: 1.1992 - accuracy: 0.7010\n","Epoch 00002: accuracy did not improve from 0.74479\n","174/200 [=========================\u003e....] - ETA: 10s - loss: 1.1995 - accuracy: 0.7008\n","Epoch 00002: accuracy did not improve from 0.74479\n","175/200 [=========================\u003e....] - ETA: 10s - loss: 1.1992 - accuracy: 0.7008\n","Epoch 00002: accuracy did not improve from 0.74479\n","176/200 [=========================\u003e....] - ETA: 9s - loss: 1.1997 - accuracy: 0.7006 \n","Epoch 00002: accuracy did not improve from 0.74479\n","177/200 [=========================\u003e....] - ETA: 9s - loss: 1.1981 - accuracy: 0.7010\n","Epoch 00002: accuracy did not improve from 0.74479\n","178/200 [=========================\u003e....] - ETA: 8s - loss: 1.1990 - accuracy: 0.7004\n","Epoch 00002: accuracy did not improve from 0.74479\n","179/200 [=========================\u003e....] - ETA: 8s - loss: 1.1971 - accuracy: 0.7009\n","Epoch 00002: accuracy did not improve from 0.74479\n","180/200 [==========================\u003e...] - ETA: 8s - loss: 1.1969 - accuracy: 0.7009\n","Epoch 00002: accuracy did not improve from 0.74479\n","181/200 [==========================\u003e...] - ETA: 7s - loss: 1.1977 - accuracy: 0.7007\n","Epoch 00002: accuracy did not improve from 0.74479\n","182/200 [==========================\u003e...] - ETA: 7s - loss: 1.1979 - accuracy: 0.7005\n","Epoch 00002: accuracy did not improve from 0.74479\n","183/200 [==========================\u003e...] - ETA: 6s - loss: 1.1982 - accuracy: 0.7005\n","Epoch 00002: accuracy did not improve from 0.74479\n","184/200 [==========================\u003e...] - ETA: 6s - loss: 1.1983 - accuracy: 0.7001\n","Epoch 00002: accuracy did not improve from 0.74479\n","185/200 [==========================\u003e...] - ETA: 6s - loss: 1.2000 - accuracy: 0.6994\n","Epoch 00002: accuracy did not improve from 0.74479\n","186/200 [==========================\u003e...] - ETA: 5s - loss: 1.1995 - accuracy: 0.6998\n","Epoch 00002: accuracy did not improve from 0.74479\n","187/200 [===========================\u003e..] - ETA: 5s - loss: 1.2000 - accuracy: 0.6998\n","Epoch 00002: accuracy did not improve from 0.74479\n","188/200 [===========================\u003e..] - ETA: 4s - loss: 1.2015 - accuracy: 0.6995\n","Epoch 00002: accuracy did not improve from 0.74479\n","189/200 [===========================\u003e..] - ETA: 4s - loss: 1.2014 - accuracy: 0.6990\n","Epoch 00002: accuracy did not improve from 0.74479\n","190/200 [===========================\u003e..] - ETA: 4s - loss: 1.2023 - accuracy: 0.6989\n","Epoch 00002: accuracy did not improve from 0.74479\n","191/200 [===========================\u003e..] - ETA: 3s - loss: 1.2030 - accuracy: 0.6988\n","Epoch 00002: accuracy did not improve from 0.74479\n","192/200 [===========================\u003e..] - ETA: 3s - loss: 1.2045 - accuracy: 0.6986\n","Epoch 00002: accuracy did not improve from 0.74479\n","193/200 [===========================\u003e..] - ETA: 2s - loss: 1.2041 - accuracy: 0.6988\n","Epoch 00002: accuracy did not improve from 0.74479\n","194/200 [============================\u003e.] - ETA: 2s - loss: 1.2064 - accuracy: 0.6983\n","Epoch 00002: accuracy did not improve from 0.74479\n","195/200 [============================\u003e.] - ETA: 2s - loss: 1.2057 - accuracy: 0.6986\n","Epoch 00002: accuracy did not improve from 0.74479\n","196/200 [============================\u003e.] - ETA: 1s - loss: 1.2042 - accuracy: 0.6988\n","Epoch 00002: accuracy did not improve from 0.74479\n","197/200 [============================\u003e.] - ETA: 1s - loss: 1.2038 - accuracy: 0.6987\n","Epoch 00002: accuracy did not improve from 0.74479\n","198/200 [============================\u003e.] - ETA: 0s - loss: 1.2043 - accuracy: 0.6986\n","Epoch 00002: accuracy did not improve from 0.74479\n","199/200 [============================\u003e.] - ETA: 0s - loss: 1.2063 - accuracy: 0.6980\n","Epoch 00002: accuracy did not improve from 0.74479\n","200/200 [==============================] - ETA: 0s - loss: 1.2083 - accuracy: 0.6976WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 82s 408ms/step - loss: 1.2083 - accuracy: 0.6976 - lr: 0.0010\n","Epoch 3/10\n","\n","Epoch 00003: accuracy did not improve from 0.74479\n","  1/200 [..............................] - ETA: 1:56 - loss: 1.4352 - accuracy: 0.6094\n","Epoch 00003: accuracy did not improve from 0.74479\n","  2/200 [..............................] - ETA: 1:14 - loss: 1.3353 - accuracy: 0.6328\n","Epoch 00003: accuracy did not improve from 0.74479\n","  3/200 [..............................] - ETA: 1:16 - loss: 1.2371 - accuracy: 0.6667\n","Epoch 00003: accuracy did not improve from 0.74479\n","  4/200 [..............................] - ETA: 1:18 - loss: 1.1685 - accuracy: 0.6914\n","Epoch 00003: accuracy did not improve from 0.74479\n","  5/200 [..............................] - ETA: 1:18 - loss: 1.1743 - accuracy: 0.6969\n","Epoch 00003: accuracy did not improve from 0.74479\n","  6/200 [..............................] - ETA: 1:19 - loss: 1.1640 - accuracy: 0.6979\n","Epoch 00003: accuracy did not improve from 0.74479\n","  7/200 [\u003e.............................] - ETA: 1:19 - loss: 1.2000 - accuracy: 0.6920\n","Epoch 00003: accuracy did not improve from 0.74479\n","  8/200 [\u003e.............................] - ETA: 1:19 - loss: 1.2126 - accuracy: 0.6875\n","Epoch 00003: accuracy did not improve from 0.74479\n","  9/200 [\u003e.............................] - ETA: 1:19 - loss: 1.2376 - accuracy: 0.6753\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 10/200 [\u003e.............................] - ETA: 1:19 - loss: 1.2462 - accuracy: 0.6687\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 11/200 [\u003e.............................] - ETA: 1:19 - loss: 1.2494 - accuracy: 0.6676\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 12/200 [\u003e.............................] - ETA: 1:17 - loss: 1.2536 - accuracy: 0.6719\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 13/200 [\u003e.............................] - ETA: 1:17 - loss: 1.2450 - accuracy: 0.6743\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 14/200 [=\u003e............................] - ETA: 1:16 - loss: 1.2111 - accuracy: 0.6875\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 15/200 [=\u003e............................] - ETA: 1:15 - loss: 1.2096 - accuracy: 0.6885\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 16/200 [=\u003e............................] - ETA: 1:14 - loss: 1.1937 - accuracy: 0.6963\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 17/200 [=\u003e............................] - ETA: 1:13 - loss: 1.1733 - accuracy: 0.7013\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 18/200 [=\u003e............................] - ETA: 1:13 - loss: 1.1717 - accuracy: 0.7014\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 19/200 [=\u003e............................] - ETA: 1:13 - loss: 1.1850 - accuracy: 0.7015\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 20/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.1906 - accuracy: 0.7000\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 21/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.1837 - accuracy: 0.6987\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 22/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.1902 - accuracy: 0.6982\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 23/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.1812 - accuracy: 0.6990\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 24/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.1797 - accuracy: 0.6992\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 25/200 [==\u003e...........................] - ETA: 1:11 - loss: 1.1733 - accuracy: 0.7013\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 26/200 [==\u003e...........................] - ETA: 1:11 - loss: 1.1789 - accuracy: 0.6983\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 27/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.1765 - accuracy: 0.6991\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 28/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.1834 - accuracy: 0.6970\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 29/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.1840 - accuracy: 0.6972\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 30/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.1715 - accuracy: 0.7005\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 31/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.1814 - accuracy: 0.6991\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 32/200 [===\u003e..........................] - ETA: 1:08 - loss: 1.1803 - accuracy: 0.6982\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 33/200 [===\u003e..........................] - ETA: 1:08 - loss: 1.1936 - accuracy: 0.6941\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 34/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.2026 - accuracy: 0.6907\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 35/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1983 - accuracy: 0.6924\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 36/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1892 - accuracy: 0.6936\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 37/200 [====\u003e.........................] - ETA: 1:06 - loss: 1.1795 - accuracy: 0.6955\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 38/200 [====\u003e.........................] - ETA: 1:06 - loss: 1.1811 - accuracy: 0.6953\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 39/200 [====\u003e.........................] - ETA: 1:05 - loss: 1.1816 - accuracy: 0.6947\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 40/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1853 - accuracy: 0.6938\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 41/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1867 - accuracy: 0.6940\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 42/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1798 - accuracy: 0.6953\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 43/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1747 - accuracy: 0.6969\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 44/200 [=====\u003e........................] - ETA: 1:03 - loss: 1.1696 - accuracy: 0.6985\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 45/200 [=====\u003e........................] - ETA: 1:03 - loss: 1.1718 - accuracy: 0.6990\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 46/200 [=====\u003e........................] - ETA: 1:03 - loss: 1.1696 - accuracy: 0.7001\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 47/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1693 - accuracy: 0.7005\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 48/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1711 - accuracy: 0.7005\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 49/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1707 - accuracy: 0.7006\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 50/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1719 - accuracy: 0.7000\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 51/200 [======\u003e.......................] - ETA: 1:00 - loss: 1.1762 - accuracy: 0.6991\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 52/200 [======\u003e.......................] - ETA: 1:00 - loss: 1.1773 - accuracy: 0.6989\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 53/200 [======\u003e.......................] - ETA: 1:00 - loss: 1.1751 - accuracy: 0.6984\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 54/200 [=======\u003e......................] - ETA: 59s - loss: 1.1765 - accuracy: 0.6979 \n","Epoch 00003: accuracy did not improve from 0.74479\n"," 55/200 [=======\u003e......................] - ETA: 59s - loss: 1.1881 - accuracy: 0.6957\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 56/200 [=======\u003e......................] - ETA: 58s - loss: 1.1859 - accuracy: 0.6964\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 57/200 [=======\u003e......................] - ETA: 58s - loss: 1.1869 - accuracy: 0.6960\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 58/200 [=======\u003e......................] - ETA: 57s - loss: 1.1829 - accuracy: 0.6975\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 59/200 [=======\u003e......................] - ETA: 57s - loss: 1.1793 - accuracy: 0.6984\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 60/200 [========\u003e.....................] - ETA: 57s - loss: 1.1723 - accuracy: 0.7000\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 61/200 [========\u003e.....................] - ETA: 56s - loss: 1.1729 - accuracy: 0.6995\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 62/200 [========\u003e.....................] - ETA: 56s - loss: 1.1754 - accuracy: 0.6991\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 63/200 [========\u003e.....................] - ETA: 55s - loss: 1.1734 - accuracy: 0.6997\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 64/200 [========\u003e.....................] - ETA: 55s - loss: 1.1713 - accuracy: 0.7007\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 65/200 [========\u003e.....................] - ETA: 55s - loss: 1.1729 - accuracy: 0.7012\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 66/200 [========\u003e.....................] - ETA: 54s - loss: 1.1736 - accuracy: 0.7015\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 67/200 [=========\u003e....................] - ETA: 54s - loss: 1.1781 - accuracy: 0.7001\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 68/200 [=========\u003e....................] - ETA: 53s - loss: 1.1801 - accuracy: 0.6990\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 69/200 [=========\u003e....................] - ETA: 53s - loss: 1.1792 - accuracy: 0.6981\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 70/200 [=========\u003e....................] - ETA: 53s - loss: 1.1757 - accuracy: 0.6996\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 71/200 [=========\u003e....................] - ETA: 52s - loss: 1.1727 - accuracy: 0.7000\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 72/200 [=========\u003e....................] - ETA: 52s - loss: 1.1726 - accuracy: 0.7007\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 73/200 [=========\u003e....................] - ETA: 51s - loss: 1.1717 - accuracy: 0.7008\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 74/200 [==========\u003e...................] - ETA: 51s - loss: 1.1705 - accuracy: 0.7014\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 75/200 [==========\u003e...................] - ETA: 51s - loss: 1.1689 - accuracy: 0.7017\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 76/200 [==========\u003e...................] - ETA: 50s - loss: 1.1714 - accuracy: 0.7009\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 77/200 [==========\u003e...................] - ETA: 50s - loss: 1.1759 - accuracy: 0.7003\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 78/200 [==========\u003e...................] - ETA: 49s - loss: 1.1744 - accuracy: 0.7007\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 79/200 [==========\u003e...................] - ETA: 49s - loss: 1.1776 - accuracy: 0.7002\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 80/200 [===========\u003e..................] - ETA: 49s - loss: 1.1773 - accuracy: 0.6994\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 81/200 [===========\u003e..................] - ETA: 48s - loss: 1.1717 - accuracy: 0.7006\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 82/200 [===========\u003e..................] - ETA: 48s - loss: 1.1706 - accuracy: 0.7006\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 83/200 [===========\u003e..................] - ETA: 47s - loss: 1.1726 - accuracy: 0.6997\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 84/200 [===========\u003e..................] - ETA: 47s - loss: 1.1686 - accuracy: 0.7011\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 85/200 [===========\u003e..................] - ETA: 46s - loss: 1.1735 - accuracy: 0.7000\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 86/200 [===========\u003e..................] - ETA: 46s - loss: 1.1718 - accuracy: 0.7002\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 87/200 [============\u003e.................] - ETA: 46s - loss: 1.1682 - accuracy: 0.7010\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 88/200 [============\u003e.................] - ETA: 45s - loss: 1.1670 - accuracy: 0.7019\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 89/200 [============\u003e.................] - ETA: 45s - loss: 1.1672 - accuracy: 0.7022\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 90/200 [============\u003e.................] - ETA: 44s - loss: 1.1713 - accuracy: 0.7012\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 91/200 [============\u003e.................] - ETA: 44s - loss: 1.1710 - accuracy: 0.7009\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 92/200 [============\u003e.................] - ETA: 44s - loss: 1.1721 - accuracy: 0.7011\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 93/200 [============\u003e.................] - ETA: 43s - loss: 1.1753 - accuracy: 0.7003\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 94/200 [=============\u003e................] - ETA: 43s - loss: 1.1776 - accuracy: 0.6993\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 95/200 [=============\u003e................] - ETA: 42s - loss: 1.1763 - accuracy: 0.6998\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 96/200 [=============\u003e................] - ETA: 42s - loss: 1.1774 - accuracy: 0.6989\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 97/200 [=============\u003e................] - ETA: 42s - loss: 1.1757 - accuracy: 0.6994\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 98/200 [=============\u003e................] - ETA: 41s - loss: 1.1745 - accuracy: 0.6995\n","Epoch 00003: accuracy did not improve from 0.74479\n"," 99/200 [=============\u003e................] - ETA: 41s - loss: 1.1731 - accuracy: 0.6998\n","Epoch 00003: accuracy did not improve from 0.74479\n","100/200 [==============\u003e...............] - ETA: 40s - loss: 1.1755 - accuracy: 0.6995\n","Epoch 00003: accuracy did not improve from 0.74479\n","101/200 [==============\u003e...............] - ETA: 40s - loss: 1.1729 - accuracy: 0.6999\n","Epoch 00003: accuracy did not improve from 0.74479\n","102/200 [==============\u003e...............] - ETA: 40s - loss: 1.1740 - accuracy: 0.6991\n","Epoch 00003: accuracy did not improve from 0.74479\n","103/200 [==============\u003e...............] - ETA: 39s - loss: 1.1726 - accuracy: 0.6992\n","Epoch 00003: accuracy did not improve from 0.74479\n","104/200 [==============\u003e...............] - ETA: 39s - loss: 1.1708 - accuracy: 0.6998\n","Epoch 00003: accuracy did not improve from 0.74479\n","105/200 [==============\u003e...............] - ETA: 38s - loss: 1.1718 - accuracy: 0.6997\n","Epoch 00003: accuracy did not improve from 0.74479\n","106/200 [==============\u003e...............] - ETA: 38s - loss: 1.1710 - accuracy: 0.7002\n","Epoch 00003: accuracy did not improve from 0.74479\n","107/200 [===============\u003e..............] - ETA: 38s - loss: 1.1723 - accuracy: 0.7002\n","Epoch 00003: accuracy did not improve from 0.74479\n","108/200 [===============\u003e..............] - ETA: 37s - loss: 1.1712 - accuracy: 0.7004\n","Epoch 00003: accuracy did not improve from 0.74479\n","109/200 [===============\u003e..............] - ETA: 37s - loss: 1.1725 - accuracy: 0.7001\n","Epoch 00003: accuracy did not improve from 0.74479\n","110/200 [===============\u003e..............] - ETA: 36s - loss: 1.1735 - accuracy: 0.7000\n","Epoch 00003: accuracy did not improve from 0.74479\n","111/200 [===============\u003e..............] - ETA: 36s - loss: 1.1741 - accuracy: 0.6997\n","Epoch 00003: accuracy did not improve from 0.74479\n","112/200 [===============\u003e..............] - ETA: 36s - loss: 1.1712 - accuracy: 0.7010\n","Epoch 00003: accuracy did not improve from 0.74479\n","113/200 [===============\u003e..............] - ETA: 35s - loss: 1.1719 - accuracy: 0.7008\n","Epoch 00003: accuracy did not improve from 0.74479\n","114/200 [================\u003e.............] - ETA: 35s - loss: 1.1702 - accuracy: 0.7009\n","Epoch 00003: accuracy did not improve from 0.74479\n","115/200 [================\u003e.............] - ETA: 34s - loss: 1.1688 - accuracy: 0.7011\n","Epoch 00003: accuracy did not improve from 0.74479\n","116/200 [================\u003e.............] - ETA: 34s - loss: 1.1693 - accuracy: 0.7010\n","Epoch 00003: accuracy did not improve from 0.74479\n","117/200 [================\u003e.............] - ETA: 33s - loss: 1.1711 - accuracy: 0.7005\n","Epoch 00003: accuracy did not improve from 0.74479\n","118/200 [================\u003e.............] - ETA: 33s - loss: 1.1721 - accuracy: 0.6997\n","Epoch 00003: accuracy did not improve from 0.74479\n","119/200 [================\u003e.............] - ETA: 33s - loss: 1.1710 - accuracy: 0.7000\n","Epoch 00003: accuracy did not improve from 0.74479\n","120/200 [=================\u003e............] - ETA: 32s - loss: 1.1708 - accuracy: 0.7003\n","Epoch 00003: accuracy did not improve from 0.74479\n","121/200 [=================\u003e............] - ETA: 32s - loss: 1.1727 - accuracy: 0.6991\n","Epoch 00003: accuracy did not improve from 0.74479\n","122/200 [=================\u003e............] - ETA: 32s - loss: 1.1731 - accuracy: 0.6989\n","Epoch 00003: accuracy did not improve from 0.74479\n","123/200 [=================\u003e............] - ETA: 31s - loss: 1.1740 - accuracy: 0.6992\n","Epoch 00003: accuracy did not improve from 0.74479\n","124/200 [=================\u003e............] - ETA: 31s - loss: 1.1735 - accuracy: 0.6995\n","Epoch 00003: accuracy did not improve from 0.74479\n","125/200 [=================\u003e............] - ETA: 30s - loss: 1.1729 - accuracy: 0.6998\n","Epoch 00003: accuracy did not improve from 0.74479\n","126/200 [=================\u003e............] - ETA: 30s - loss: 1.1713 - accuracy: 0.7008\n","Epoch 00003: accuracy did not improve from 0.74479\n","127/200 [==================\u003e...........] - ETA: 29s - loss: 1.1700 - accuracy: 0.7014\n","Epoch 00003: accuracy did not improve from 0.74479\n","128/200 [==================\u003e...........] - ETA: 29s - loss: 1.1696 - accuracy: 0.7018\n","Epoch 00003: accuracy did not improve from 0.74479\n","129/200 [==================\u003e...........] - ETA: 29s - loss: 1.1701 - accuracy: 0.7017\n","Epoch 00003: accuracy did not improve from 0.74479\n","130/200 [==================\u003e...........] - ETA: 28s - loss: 1.1697 - accuracy: 0.7019\n","Epoch 00003: accuracy did not improve from 0.74479\n","131/200 [==================\u003e...........] - ETA: 28s - loss: 1.1689 - accuracy: 0.7024\n","Epoch 00003: accuracy did not improve from 0.74479\n","132/200 [==================\u003e...........] - ETA: 27s - loss: 1.1709 - accuracy: 0.7021\n","Epoch 00003: accuracy did not improve from 0.74479\n","133/200 [==================\u003e...........] - ETA: 27s - loss: 1.1696 - accuracy: 0.7024\n","Epoch 00003: accuracy did not improve from 0.74479\n","134/200 [===================\u003e..........] - ETA: 27s - loss: 1.1691 - accuracy: 0.7021\n","Epoch 00003: accuracy did not improve from 0.74479\n","135/200 [===================\u003e..........] - ETA: 26s - loss: 1.1667 - accuracy: 0.7030\n","Epoch 00003: accuracy did not improve from 0.74479\n","136/200 [===================\u003e..........] - ETA: 26s - loss: 1.1668 - accuracy: 0.7027\n","Epoch 00003: accuracy did not improve from 0.74479\n","137/200 [===================\u003e..........] - ETA: 25s - loss: 1.1654 - accuracy: 0.7029\n","Epoch 00003: accuracy did not improve from 0.74479\n","138/200 [===================\u003e..........] - ETA: 25s - loss: 1.1645 - accuracy: 0.7027\n","Epoch 00003: accuracy did not improve from 0.74479\n","139/200 [===================\u003e..........] - ETA: 24s - loss: 1.1639 - accuracy: 0.7030\n","Epoch 00003: accuracy did not improve from 0.74479\n","140/200 [====================\u003e.........] - ETA: 24s - loss: 1.1664 - accuracy: 0.7026\n","Epoch 00003: accuracy did not improve from 0.74479\n","141/200 [====================\u003e.........] - ETA: 24s - loss: 1.1657 - accuracy: 0.7028\n","Epoch 00003: accuracy did not improve from 0.74479\n","142/200 [====================\u003e.........] - ETA: 23s - loss: 1.1656 - accuracy: 0.7030\n","Epoch 00003: accuracy did not improve from 0.74479\n","143/200 [====================\u003e.........] - ETA: 23s - loss: 1.1640 - accuracy: 0.7032\n","Epoch 00003: accuracy did not improve from 0.74479\n","144/200 [====================\u003e.........] - ETA: 22s - loss: 1.1633 - accuracy: 0.7040\n","Epoch 00003: accuracy did not improve from 0.74479\n","145/200 [====================\u003e.........] - ETA: 22s - loss: 1.1628 - accuracy: 0.7038\n","Epoch 00003: accuracy did not improve from 0.74479\n","146/200 [====================\u003e.........] - ETA: 22s - loss: 1.1630 - accuracy: 0.7039\n","Epoch 00003: accuracy did not improve from 0.74479\n","147/200 [=====================\u003e........] - ETA: 21s - loss: 1.1638 - accuracy: 0.7041\n","Epoch 00003: accuracy did not improve from 0.74479\n","148/200 [=====================\u003e........] - ETA: 21s - loss: 1.1627 - accuracy: 0.7044\n","Epoch 00003: accuracy did not improve from 0.74479\n","149/200 [=====================\u003e........] - ETA: 20s - loss: 1.1612 - accuracy: 0.7045\n","Epoch 00003: accuracy did not improve from 0.74479\n","150/200 [=====================\u003e........] - ETA: 20s - loss: 1.1596 - accuracy: 0.7051\n","Epoch 00003: accuracy did not improve from 0.74479\n","151/200 [=====================\u003e........] - ETA: 20s - loss: 1.1606 - accuracy: 0.7045\n","Epoch 00003: accuracy did not improve from 0.74479\n","152/200 [=====================\u003e........] - ETA: 19s - loss: 1.1601 - accuracy: 0.7047\n","Epoch 00003: accuracy did not improve from 0.74479\n","153/200 [=====================\u003e........] - ETA: 19s - loss: 1.1601 - accuracy: 0.7048\n","Epoch 00003: accuracy did not improve from 0.74479\n","154/200 [======================\u003e.......] - ETA: 18s - loss: 1.1594 - accuracy: 0.7047\n","Epoch 00003: accuracy did not improve from 0.74479\n","155/200 [======================\u003e.......] - ETA: 18s - loss: 1.1591 - accuracy: 0.7045\n","Epoch 00003: accuracy did not improve from 0.74479\n","156/200 [======================\u003e.......] - ETA: 18s - loss: 1.1620 - accuracy: 0.7039\n","Epoch 00003: accuracy did not improve from 0.74479\n","157/200 [======================\u003e.......] - ETA: 17s - loss: 1.1615 - accuracy: 0.7040\n","Epoch 00003: accuracy did not improve from 0.74479\n","158/200 [======================\u003e.......] - ETA: 17s - loss: 1.1599 - accuracy: 0.7049\n","Epoch 00003: accuracy did not improve from 0.74479\n","159/200 [======================\u003e.......] - ETA: 16s - loss: 1.1625 - accuracy: 0.7040\n","Epoch 00003: accuracy did not improve from 0.74479\n","160/200 [=======================\u003e......] - ETA: 16s - loss: 1.1631 - accuracy: 0.7036\n","Epoch 00003: accuracy did not improve from 0.74479\n","161/200 [=======================\u003e......] - ETA: 15s - loss: 1.1631 - accuracy: 0.7039\n","Epoch 00003: accuracy did not improve from 0.74479\n","162/200 [=======================\u003e......] - ETA: 15s - loss: 1.1619 - accuracy: 0.7041\n","Epoch 00003: accuracy did not improve from 0.74479\n","163/200 [=======================\u003e......] - ETA: 15s - loss: 1.1610 - accuracy: 0.7044\n","Epoch 00003: accuracy did not improve from 0.74479\n","164/200 [=======================\u003e......] - ETA: 14s - loss: 1.1601 - accuracy: 0.7046\n","Epoch 00003: accuracy did not improve from 0.74479\n","165/200 [=======================\u003e......] - ETA: 14s - loss: 1.1595 - accuracy: 0.7048\n","Epoch 00003: accuracy did not improve from 0.74479\n","166/200 [=======================\u003e......] - ETA: 13s - loss: 1.1572 - accuracy: 0.7055\n","Epoch 00003: accuracy did not improve from 0.74479\n","167/200 [========================\u003e.....] - ETA: 13s - loss: 1.1559 - accuracy: 0.7061\n","Epoch 00003: accuracy did not improve from 0.74479\n","168/200 [========================\u003e.....] - ETA: 13s - loss: 1.1572 - accuracy: 0.7060\n","Epoch 00003: accuracy did not improve from 0.74479\n","169/200 [========================\u003e.....] - ETA: 12s - loss: 1.1571 - accuracy: 0.7060\n","Epoch 00003: accuracy did not improve from 0.74479\n","170/200 [========================\u003e.....] - ETA: 12s - loss: 1.1565 - accuracy: 0.7058\n","Epoch 00003: accuracy did not improve from 0.74479\n","171/200 [========================\u003e.....] - ETA: 11s - loss: 1.1568 - accuracy: 0.7059\n","Epoch 00003: accuracy did not improve from 0.74479\n","172/200 [========================\u003e.....] - ETA: 11s - loss: 1.1592 - accuracy: 0.7052\n","Epoch 00003: accuracy did not improve from 0.74479\n","173/200 [========================\u003e.....] - ETA: 11s - loss: 1.1599 - accuracy: 0.7051\n","Epoch 00003: accuracy did not improve from 0.74479\n","174/200 [=========================\u003e....] - ETA: 10s - loss: 1.1605 - accuracy: 0.7052\n","Epoch 00003: accuracy did not improve from 0.74479\n","175/200 [=========================\u003e....] - ETA: 10s - loss: 1.1608 - accuracy: 0.7051\n","Epoch 00003: accuracy did not improve from 0.74479\n","176/200 [=========================\u003e....] - ETA: 9s - loss: 1.1615 - accuracy: 0.7048 \n","Epoch 00003: accuracy did not improve from 0.74479\n","177/200 [=========================\u003e....] - ETA: 9s - loss: 1.1619 - accuracy: 0.7048\n","Epoch 00003: accuracy did not improve from 0.74479\n","178/200 [=========================\u003e....] - ETA: 9s - loss: 1.1616 - accuracy: 0.7050\n","Epoch 00003: accuracy did not improve from 0.74479\n","179/200 [=========================\u003e....] - ETA: 8s - loss: 1.1601 - accuracy: 0.7053\n","Epoch 00003: accuracy did not improve from 0.74479\n","180/200 [==========================\u003e...] - ETA: 8s - loss: 1.1603 - accuracy: 0.7051\n","Epoch 00003: accuracy did not improve from 0.74479\n","181/200 [==========================\u003e...] - ETA: 7s - loss: 1.1594 - accuracy: 0.7055\n","Epoch 00003: accuracy did not improve from 0.74479\n","182/200 [==========================\u003e...] - ETA: 7s - loss: 1.1599 - accuracy: 0.7054\n","Epoch 00003: accuracy did not improve from 0.74479\n","183/200 [==========================\u003e...] - ETA: 6s - loss: 1.1596 - accuracy: 0.7053\n","Epoch 00003: accuracy did not improve from 0.74479\n","184/200 [==========================\u003e...] - ETA: 6s - loss: 1.1598 - accuracy: 0.7053\n","Epoch 00003: accuracy did not improve from 0.74479\n","185/200 [==========================\u003e...] - ETA: 6s - loss: 1.1591 - accuracy: 0.7057\n","Epoch 00003: accuracy did not improve from 0.74479\n","186/200 [==========================\u003e...] - ETA: 5s - loss: 1.1599 - accuracy: 0.7051\n","Epoch 00003: accuracy did not improve from 0.74479\n","187/200 [===========================\u003e..] - ETA: 5s - loss: 1.1604 - accuracy: 0.7049\n","Epoch 00003: accuracy did not improve from 0.74479\n","188/200 [===========================\u003e..] - ETA: 4s - loss: 1.1619 - accuracy: 0.7049\n","Epoch 00003: accuracy did not improve from 0.74479\n","189/200 [===========================\u003e..] - ETA: 4s - loss: 1.1634 - accuracy: 0.7049\n","Epoch 00003: accuracy did not improve from 0.74479\n","190/200 [===========================\u003e..] - ETA: 4s - loss: 1.1629 - accuracy: 0.7049\n","Epoch 00003: accuracy did not improve from 0.74479\n","191/200 [===========================\u003e..] - ETA: 3s - loss: 1.1621 - accuracy: 0.7053\n","Epoch 00003: accuracy did not improve from 0.74479\n","192/200 [===========================\u003e..] - ETA: 3s - loss: 1.1641 - accuracy: 0.7047\n","Epoch 00003: accuracy did not improve from 0.74479\n","193/200 [===========================\u003e..] - ETA: 2s - loss: 1.1640 - accuracy: 0.7047\n","Epoch 00003: accuracy did not improve from 0.74479\n","194/200 [============================\u003e.] - ETA: 2s - loss: 1.1628 - accuracy: 0.7047\n","Epoch 00003: accuracy did not improve from 0.74479\n","195/200 [============================\u003e.] - ETA: 2s - loss: 1.1639 - accuracy: 0.7044\n","Epoch 00003: accuracy did not improve from 0.74479\n","196/200 [============================\u003e.] - ETA: 1s - loss: 1.1636 - accuracy: 0.7045\n","Epoch 00003: accuracy did not improve from 0.74479\n","197/200 [============================\u003e.] - ETA: 1s - loss: 1.1624 - accuracy: 0.7050\n","Epoch 00003: accuracy did not improve from 0.74479\n","198/200 [============================\u003e.] - ETA: 0s - loss: 1.1619 - accuracy: 0.7052\n","Epoch 00003: accuracy did not improve from 0.74479\n","199/200 [============================\u003e.] - ETA: 0s - loss: 1.1634 - accuracy: 0.7049\n","Epoch 00003: accuracy did not improve from 0.74479\n","200/200 [==============================] - ETA: 0s - loss: 1.1655 - accuracy: 0.7046WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 82s 409ms/step - loss: 1.1655 - accuracy: 0.7046 - lr: 0.0010\n","Epoch 4/10\n","\n","Epoch 00004: accuracy improved from 0.74479 to 0.79688, saving model to /content/drive/My Drive/Colab Notebooks/EIP Models/best.h5\n","  1/200 [..............................] - ETA: 9:14 - loss: 0.9250 - accuracy: 0.7969\n","Epoch 00004: accuracy did not improve from 0.79688\n","  2/200 [..............................] - ETA: 1:06 - loss: 0.9849 - accuracy: 0.7656\n","Epoch 00004: accuracy did not improve from 0.79688\n","  3/200 [..............................] - ETA: 1:14 - loss: 0.9838 - accuracy: 0.7500\n","Epoch 00004: accuracy did not improve from 0.79688\n","  4/200 [..............................] - ETA: 1:15 - loss: 1.0011 - accuracy: 0.7539\n","Epoch 00004: accuracy did not improve from 0.79688\n","  5/200 [..............................] - ETA: 1:16 - loss: 1.0749 - accuracy: 0.7406\n","Epoch 00004: accuracy did not improve from 0.79688\n","  6/200 [..............................] - ETA: 1:17 - loss: 1.0981 - accuracy: 0.7318\n","Epoch 00004: accuracy did not improve from 0.79688\n","  7/200 [\u003e.............................] - ETA: 1:16 - loss: 1.1122 - accuracy: 0.7344\n","Epoch 00004: accuracy did not improve from 0.79688\n","  8/200 [\u003e.............................] - ETA: 1:15 - loss: 1.1171 - accuracy: 0.7344\n","Epoch 00004: accuracy did not improve from 0.79688\n","  9/200 [\u003e.............................] - ETA: 1:15 - loss: 1.1609 - accuracy: 0.7205\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 10/200 [\u003e.............................] - ETA: 1:15 - loss: 1.1805 - accuracy: 0.7109\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 11/200 [\u003e.............................] - ETA: 1:14 - loss: 1.1444 - accuracy: 0.7188\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 12/200 [\u003e.............................] - ETA: 1:14 - loss: 1.1472 - accuracy: 0.7161\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 13/200 [\u003e.............................] - ETA: 1:14 - loss: 1.1595 - accuracy: 0.7127\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 14/200 [=\u003e............................] - ETA: 1:14 - loss: 1.1512 - accuracy: 0.7087\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 15/200 [=\u003e............................] - ETA: 1:13 - loss: 1.1497 - accuracy: 0.7083\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 16/200 [=\u003e............................] - ETA: 1:13 - loss: 1.1494 - accuracy: 0.7109\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 17/200 [=\u003e............................] - ETA: 1:14 - loss: 1.1584 - accuracy: 0.7114\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 18/200 [=\u003e............................] - ETA: 1:13 - loss: 1.1691 - accuracy: 0.7075\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 19/200 [=\u003e............................] - ETA: 1:13 - loss: 1.1847 - accuracy: 0.7031\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 20/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.1716 - accuracy: 0.7063\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 21/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.1689 - accuracy: 0.7068\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 22/200 [==\u003e...........................] - ETA: 1:11 - loss: 1.1559 - accuracy: 0.7088\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 23/200 [==\u003e...........................] - ETA: 1:11 - loss: 1.1519 - accuracy: 0.7099\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 24/200 [==\u003e...........................] - ETA: 1:10 - loss: 1.1618 - accuracy: 0.7083\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 25/200 [==\u003e...........................] - ETA: 1:11 - loss: 1.1759 - accuracy: 0.7031\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 26/200 [==\u003e...........................] - ETA: 1:11 - loss: 1.1741 - accuracy: 0.7049\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 27/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.1781 - accuracy: 0.7054\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 28/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.1846 - accuracy: 0.7054\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 29/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.1805 - accuracy: 0.7026\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 30/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.1790 - accuracy: 0.7026\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 31/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.1746 - accuracy: 0.7046\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 32/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.1824 - accuracy: 0.7041\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 33/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.1809 - accuracy: 0.7041\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 34/200 [====\u003e.........................] - ETA: 1:09 - loss: 1.1770 - accuracy: 0.7045\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 35/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.1834 - accuracy: 0.7036\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 36/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.1818 - accuracy: 0.7040\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 37/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1754 - accuracy: 0.7040\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 38/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1771 - accuracy: 0.7035\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 39/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1793 - accuracy: 0.7023\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 40/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1774 - accuracy: 0.7035\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 41/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1759 - accuracy: 0.7043\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 42/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1781 - accuracy: 0.7042\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 43/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1750 - accuracy: 0.7049\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 44/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1772 - accuracy: 0.7038\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 45/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1727 - accuracy: 0.7052\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 46/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1708 - accuracy: 0.7058\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 47/200 [======\u003e.......................] - ETA: 1:04 - loss: 1.1747 - accuracy: 0.7058\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 48/200 [======\u003e.......................] - ETA: 1:04 - loss: 1.1719 - accuracy: 0.7070\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 49/200 [======\u003e.......................] - ETA: 1:03 - loss: 1.1763 - accuracy: 0.7060\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 50/200 [======\u003e.......................] - ETA: 1:03 - loss: 1.1686 - accuracy: 0.7081\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 51/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1677 - accuracy: 0.7093\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 52/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1713 - accuracy: 0.7082\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 53/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1723 - accuracy: 0.7081\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 54/200 [=======\u003e......................] - ETA: 1:01 - loss: 1.1724 - accuracy: 0.7078\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 55/200 [=======\u003e......................] - ETA: 1:01 - loss: 1.1768 - accuracy: 0.7071\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 56/200 [=======\u003e......................] - ETA: 1:00 - loss: 1.1769 - accuracy: 0.7079\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 57/200 [=======\u003e......................] - ETA: 1:00 - loss: 1.1720 - accuracy: 0.7097\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 58/200 [=======\u003e......................] - ETA: 59s - loss: 1.1732 - accuracy: 0.7091 \n","Epoch 00004: accuracy did not improve from 0.79688\n"," 59/200 [=======\u003e......................] - ETA: 59s - loss: 1.1751 - accuracy: 0.7090\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 60/200 [========\u003e.....................] - ETA: 58s - loss: 1.1687 - accuracy: 0.7112\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 61/200 [========\u003e.....................] - ETA: 58s - loss: 1.1700 - accuracy: 0.7111\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 62/200 [========\u003e.....................] - ETA: 57s - loss: 1.1749 - accuracy: 0.7097\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 63/200 [========\u003e.....................] - ETA: 57s - loss: 1.1757 - accuracy: 0.7081\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 64/200 [========\u003e.....................] - ETA: 57s - loss: 1.1777 - accuracy: 0.7075\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 65/200 [========\u003e.....................] - ETA: 56s - loss: 1.1765 - accuracy: 0.7077\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 66/200 [========\u003e.....................] - ETA: 56s - loss: 1.1788 - accuracy: 0.7062\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 67/200 [=========\u003e....................] - ETA: 55s - loss: 1.1861 - accuracy: 0.7050\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 68/200 [=========\u003e....................] - ETA: 55s - loss: 1.1894 - accuracy: 0.7038\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 69/200 [=========\u003e....................] - ETA: 54s - loss: 1.1956 - accuracy: 0.7022\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 70/200 [=========\u003e....................] - ETA: 54s - loss: 1.1979 - accuracy: 0.7018\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 71/200 [=========\u003e....................] - ETA: 54s - loss: 1.1944 - accuracy: 0.7027\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 72/200 [=========\u003e....................] - ETA: 53s - loss: 1.1971 - accuracy: 0.7025\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 73/200 [=========\u003e....................] - ETA: 53s - loss: 1.1936 - accuracy: 0.7031\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 74/200 [==========\u003e...................] - ETA: 52s - loss: 1.1964 - accuracy: 0.7027\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 75/200 [==========\u003e...................] - ETA: 52s - loss: 1.1968 - accuracy: 0.7023\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 76/200 [==========\u003e...................] - ETA: 51s - loss: 1.1953 - accuracy: 0.7031\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 77/200 [==========\u003e...................] - ETA: 51s - loss: 1.1937 - accuracy: 0.7031\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 78/200 [==========\u003e...................] - ETA: 51s - loss: 1.1947 - accuracy: 0.7019\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 79/200 [==========\u003e...................] - ETA: 50s - loss: 1.1940 - accuracy: 0.7015\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 80/200 [===========\u003e..................] - ETA: 50s - loss: 1.1975 - accuracy: 0.7014\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 81/200 [===========\u003e..................] - ETA: 49s - loss: 1.1973 - accuracy: 0.7010\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 82/200 [===========\u003e..................] - ETA: 49s - loss: 1.1936 - accuracy: 0.7022\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 83/200 [===========\u003e..................] - ETA: 48s - loss: 1.1951 - accuracy: 0.7014\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 84/200 [===========\u003e..................] - ETA: 48s - loss: 1.1942 - accuracy: 0.7018\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 85/200 [===========\u003e..................] - ETA: 48s - loss: 1.1901 - accuracy: 0.7033\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 86/200 [===========\u003e..................] - ETA: 47s - loss: 1.1909 - accuracy: 0.7033\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 87/200 [============\u003e.................] - ETA: 47s - loss: 1.1906 - accuracy: 0.7033\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 88/200 [============\u003e.................] - ETA: 46s - loss: 1.1895 - accuracy: 0.7035\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 89/200 [============\u003e.................] - ETA: 46s - loss: 1.1869 - accuracy: 0.7040\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 90/200 [============\u003e.................] - ETA: 45s - loss: 1.1937 - accuracy: 0.7028\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 91/200 [============\u003e.................] - ETA: 45s - loss: 1.1947 - accuracy: 0.7030\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 92/200 [============\u003e.................] - ETA: 45s - loss: 1.1935 - accuracy: 0.7030\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 93/200 [============\u003e.................] - ETA: 44s - loss: 1.1912 - accuracy: 0.7036\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 94/200 [=============\u003e................] - ETA: 44s - loss: 1.1927 - accuracy: 0.7035\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 95/200 [=============\u003e................] - ETA: 43s - loss: 1.1932 - accuracy: 0.7038\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 96/200 [=============\u003e................] - ETA: 43s - loss: 1.1907 - accuracy: 0.7041\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 97/200 [=============\u003e................] - ETA: 42s - loss: 1.1894 - accuracy: 0.7049\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 98/200 [=============\u003e................] - ETA: 42s - loss: 1.1868 - accuracy: 0.7058\n","Epoch 00004: accuracy did not improve from 0.79688\n"," 99/200 [=============\u003e................] - ETA: 42s - loss: 1.1851 - accuracy: 0.7057\n","Epoch 00004: accuracy did not improve from 0.79688\n","100/200 [==============\u003e...............] - ETA: 41s - loss: 1.1844 - accuracy: 0.7056\n","Epoch 00004: accuracy did not improve from 0.79688\n","101/200 [==============\u003e...............] - ETA: 41s - loss: 1.1822 - accuracy: 0.7064\n","Epoch 00004: accuracy did not improve from 0.79688\n","102/200 [==============\u003e...............] - ETA: 40s - loss: 1.1805 - accuracy: 0.7071\n","Epoch 00004: accuracy did not improve from 0.79688\n","103/200 [==============\u003e...............] - ETA: 40s - loss: 1.1791 - accuracy: 0.7072\n","Epoch 00004: accuracy did not improve from 0.79688\n","104/200 [==============\u003e...............] - ETA: 40s - loss: 1.1789 - accuracy: 0.7069\n","Epoch 00004: accuracy did not improve from 0.79688\n","105/200 [==============\u003e...............] - ETA: 39s - loss: 1.1780 - accuracy: 0.7073\n","Epoch 00004: accuracy did not improve from 0.79688\n","106/200 [==============\u003e...............] - ETA: 39s - loss: 1.1782 - accuracy: 0.7071\n","Epoch 00004: accuracy did not improve from 0.79688\n","107/200 [===============\u003e..............] - ETA: 38s - loss: 1.1770 - accuracy: 0.7069\n","Epoch 00004: accuracy did not improve from 0.79688\n","108/200 [===============\u003e..............] - ETA: 38s - loss: 1.1777 - accuracy: 0.7067\n","Epoch 00004: accuracy did not improve from 0.79688\n","109/200 [===============\u003e..............] - ETA: 37s - loss: 1.1762 - accuracy: 0.7067\n","Epoch 00004: accuracy did not improve from 0.79688\n","110/200 [===============\u003e..............] - ETA: 37s - loss: 1.1745 - accuracy: 0.7072\n","Epoch 00004: accuracy did not improve from 0.79688\n","111/200 [===============\u003e..............] - ETA: 37s - loss: 1.1749 - accuracy: 0.7065\n","Epoch 00004: accuracy did not improve from 0.79688\n","112/200 [===============\u003e..............] - ETA: 36s - loss: 1.1743 - accuracy: 0.7065\n","Epoch 00004: accuracy did not improve from 0.79688\n","113/200 [===============\u003e..............] - ETA: 36s - loss: 1.1747 - accuracy: 0.7062\n","Epoch 00004: accuracy did not improve from 0.79688\n","114/200 [================\u003e.............] - ETA: 35s - loss: 1.1758 - accuracy: 0.7056\n","Epoch 00004: accuracy did not improve from 0.79688\n","115/200 [================\u003e.............] - ETA: 35s - loss: 1.1744 - accuracy: 0.7058\n","Epoch 00004: accuracy did not improve from 0.79688\n","116/200 [================\u003e.............] - ETA: 35s - loss: 1.1746 - accuracy: 0.7061\n","Epoch 00004: accuracy did not improve from 0.79688\n","117/200 [================\u003e.............] - ETA: 34s - loss: 1.1761 - accuracy: 0.7057\n","Epoch 00004: accuracy did not improve from 0.79688\n","118/200 [================\u003e.............] - ETA: 34s - loss: 1.1744 - accuracy: 0.7062\n","Epoch 00004: accuracy did not improve from 0.79688\n","119/200 [================\u003e.............] - ETA: 33s - loss: 1.1757 - accuracy: 0.7055\n","Epoch 00004: accuracy did not improve from 0.79688\n","120/200 [=================\u003e............] - ETA: 33s - loss: 1.1777 - accuracy: 0.7048\n","Epoch 00004: accuracy did not improve from 0.79688\n","121/200 [=================\u003e............] - ETA: 32s - loss: 1.1774 - accuracy: 0.7051\n","Epoch 00004: accuracy did not improve from 0.79688\n","122/200 [=================\u003e............] - ETA: 32s - loss: 1.1748 - accuracy: 0.7057\n","Epoch 00004: accuracy did not improve from 0.79688\n","123/200 [=================\u003e............] - ETA: 32s - loss: 1.1782 - accuracy: 0.7052\n","Epoch 00004: accuracy did not improve from 0.79688\n","124/200 [=================\u003e............] - ETA: 31s - loss: 1.1784 - accuracy: 0.7046\n","Epoch 00004: accuracy did not improve from 0.79688\n","125/200 [=================\u003e............] - ETA: 31s - loss: 1.1788 - accuracy: 0.7041\n","Epoch 00004: accuracy did not improve from 0.79688\n","126/200 [=================\u003e............] - ETA: 30s - loss: 1.1781 - accuracy: 0.7040\n","Epoch 00004: accuracy did not improve from 0.79688\n","127/200 [==================\u003e...........] - ETA: 30s - loss: 1.1802 - accuracy: 0.7031\n","Epoch 00004: accuracy did not improve from 0.79688\n","128/200 [==================\u003e...........] - ETA: 30s - loss: 1.1796 - accuracy: 0.7037\n","Epoch 00004: accuracy did not improve from 0.79688\n","129/200 [==================\u003e...........] - ETA: 29s - loss: 1.1811 - accuracy: 0.7030\n","Epoch 00004: accuracy did not improve from 0.79688\n","130/200 [==================\u003e...........] - ETA: 29s - loss: 1.1799 - accuracy: 0.7035\n","Epoch 00004: accuracy did not improve from 0.79688\n","131/200 [==================\u003e...........] - ETA: 28s - loss: 1.1819 - accuracy: 0.7024\n","Epoch 00004: accuracy did not improve from 0.79688\n","132/200 [==================\u003e...........] - ETA: 28s - loss: 1.1824 - accuracy: 0.7024\n","Epoch 00004: accuracy did not improve from 0.79688\n","133/200 [==================\u003e...........] - ETA: 27s - loss: 1.1821 - accuracy: 0.7027\n","Epoch 00004: accuracy did not improve from 0.79688\n","134/200 [===================\u003e..........] - ETA: 27s - loss: 1.1822 - accuracy: 0.7032\n","Epoch 00004: accuracy did not improve from 0.79688\n","135/200 [===================\u003e..........] - ETA: 27s - loss: 1.1814 - accuracy: 0.7031\n","Epoch 00004: accuracy did not improve from 0.79688\n","136/200 [===================\u003e..........] - ETA: 26s - loss: 1.1799 - accuracy: 0.7036\n","Epoch 00004: accuracy did not improve from 0.79688\n","137/200 [===================\u003e..........] - ETA: 26s - loss: 1.1839 - accuracy: 0.7031\n","Epoch 00004: accuracy did not improve from 0.79688\n","138/200 [===================\u003e..........] - ETA: 25s - loss: 1.1841 - accuracy: 0.7030\n","Epoch 00004: accuracy did not improve from 0.79688\n","139/200 [===================\u003e..........] - ETA: 25s - loss: 1.1848 - accuracy: 0.7029\n","Epoch 00004: accuracy did not improve from 0.79688\n","140/200 [====================\u003e.........] - ETA: 24s - loss: 1.1863 - accuracy: 0.7026\n","Epoch 00004: accuracy did not improve from 0.79688\n","141/200 [====================\u003e.........] - ETA: 24s - loss: 1.1865 - accuracy: 0.7023\n","Epoch 00004: accuracy did not improve from 0.79688\n","142/200 [====================\u003e.........] - ETA: 24s - loss: 1.1858 - accuracy: 0.7026\n","Epoch 00004: accuracy did not improve from 0.79688\n","143/200 [====================\u003e.........] - ETA: 23s - loss: 1.1853 - accuracy: 0.7027\n","Epoch 00004: accuracy did not improve from 0.79688\n","144/200 [====================\u003e.........] - ETA: 23s - loss: 1.1873 - accuracy: 0.7023\n","Epoch 00004: accuracy did not improve from 0.79688\n","145/200 [====================\u003e.........] - ETA: 22s - loss: 1.1878 - accuracy: 0.7023\n","Epoch 00004: accuracy did not improve from 0.79688\n","146/200 [====================\u003e.........] - ETA: 22s - loss: 1.1866 - accuracy: 0.7027\n","Epoch 00004: accuracy did not improve from 0.79688\n","147/200 [=====================\u003e........] - ETA: 22s - loss: 1.1855 - accuracy: 0.7028\n","Epoch 00004: accuracy did not improve from 0.79688\n","148/200 [=====================\u003e........] - ETA: 21s - loss: 1.1878 - accuracy: 0.7021\n","Epoch 00004: accuracy did not improve from 0.79688\n","149/200 [=====================\u003e........] - ETA: 21s - loss: 1.1890 - accuracy: 0.7014\n","Epoch 00004: accuracy did not improve from 0.79688\n","150/200 [=====================\u003e........] - ETA: 20s - loss: 1.1894 - accuracy: 0.7011\n","Epoch 00004: accuracy did not improve from 0.79688\n","151/200 [=====================\u003e........] - ETA: 20s - loss: 1.1903 - accuracy: 0.7006\n","Epoch 00004: accuracy did not improve from 0.79688\n","152/200 [=====================\u003e........] - ETA: 20s - loss: 1.1889 - accuracy: 0.7012\n","Epoch 00004: accuracy did not improve from 0.79688\n","153/200 [=====================\u003e........] - ETA: 19s - loss: 1.1910 - accuracy: 0.7006\n","Epoch 00004: accuracy did not improve from 0.79688\n","154/200 [======================\u003e.......] - ETA: 19s - loss: 1.1921 - accuracy: 0.7004\n","Epoch 00004: accuracy did not improve from 0.79688\n","155/200 [======================\u003e.......] - ETA: 18s - loss: 1.1928 - accuracy: 0.7001\n","Epoch 00004: accuracy did not improve from 0.79688\n","156/200 [======================\u003e.......] - ETA: 18s - loss: 1.1899 - accuracy: 0.7007\n","Epoch 00004: accuracy did not improve from 0.79688\n","157/200 [======================\u003e.......] - ETA: 17s - loss: 1.1900 - accuracy: 0.7002\n","Epoch 00004: accuracy did not improve from 0.79688\n","158/200 [======================\u003e.......] - ETA: 17s - loss: 1.1903 - accuracy: 0.7005\n","Epoch 00004: accuracy did not improve from 0.79688\n","159/200 [======================\u003e.......] - ETA: 17s - loss: 1.1899 - accuracy: 0.7005\n","Epoch 00004: accuracy did not improve from 0.79688\n","160/200 [=======================\u003e......] - ETA: 16s - loss: 1.1908 - accuracy: 0.7004\n","Epoch 00004: accuracy did not improve from 0.79688\n","161/200 [=======================\u003e......] - ETA: 16s - loss: 1.1904 - accuracy: 0.7004\n","Epoch 00004: accuracy did not improve from 0.79688\n","162/200 [=======================\u003e......] - ETA: 15s - loss: 1.1903 - accuracy: 0.7005\n","Epoch 00004: accuracy did not improve from 0.79688\n","163/200 [=======================\u003e......] - ETA: 15s - loss: 1.1897 - accuracy: 0.7002\n","Epoch 00004: accuracy did not improve from 0.79688\n","164/200 [=======================\u003e......] - ETA: 14s - loss: 1.1900 - accuracy: 0.6999\n","Epoch 00004: accuracy did not improve from 0.79688\n","165/200 [=======================\u003e......] - ETA: 14s - loss: 1.1892 - accuracy: 0.6999\n","Epoch 00004: accuracy did not improve from 0.79688\n","166/200 [=======================\u003e......] - ETA: 14s - loss: 1.1897 - accuracy: 0.6997\n","Epoch 00004: accuracy did not improve from 0.79688\n","167/200 [========================\u003e.....] - ETA: 13s - loss: 1.1906 - accuracy: 0.6997\n","Epoch 00004: accuracy did not improve from 0.79688\n","168/200 [========================\u003e.....] - ETA: 13s - loss: 1.1907 - accuracy: 0.6998\n","Epoch 00004: accuracy did not improve from 0.79688\n","169/200 [========================\u003e.....] - ETA: 12s - loss: 1.1904 - accuracy: 0.6998\n","Epoch 00004: accuracy did not improve from 0.79688\n","170/200 [========================\u003e.....] - ETA: 12s - loss: 1.1902 - accuracy: 0.6998\n","Epoch 00004: accuracy did not improve from 0.79688\n","171/200 [========================\u003e.....] - ETA: 12s - loss: 1.1899 - accuracy: 0.7001\n","Epoch 00004: accuracy did not improve from 0.79688\n","172/200 [========================\u003e.....] - ETA: 11s - loss: 1.1897 - accuracy: 0.7001\n","Epoch 00004: accuracy did not improve from 0.79688\n","173/200 [========================\u003e.....] - ETA: 11s - loss: 1.1901 - accuracy: 0.6998\n","Epoch 00004: accuracy did not improve from 0.79688\n","174/200 [=========================\u003e....] - ETA: 10s - loss: 1.1913 - accuracy: 0.6994\n","Epoch 00004: accuracy did not improve from 0.79688\n","175/200 [=========================\u003e....] - ETA: 10s - loss: 1.1913 - accuracy: 0.6991\n","Epoch 00004: accuracy did not improve from 0.79688\n","176/200 [=========================\u003e....] - ETA: 9s - loss: 1.1910 - accuracy: 0.6990 \n","Epoch 00004: accuracy did not improve from 0.79688\n","177/200 [=========================\u003e....] - ETA: 9s - loss: 1.1908 - accuracy: 0.6992\n","Epoch 00004: accuracy did not improve from 0.79688\n","178/200 [=========================\u003e....] - ETA: 9s - loss: 1.1907 - accuracy: 0.6994\n","Epoch 00004: accuracy did not improve from 0.79688\n","179/200 [=========================\u003e....] - ETA: 8s - loss: 1.1909 - accuracy: 0.6992\n","Epoch 00004: accuracy did not improve from 0.79688\n","180/200 [==========================\u003e...] - ETA: 8s - loss: 1.1916 - accuracy: 0.6989\n","Epoch 00004: accuracy did not improve from 0.79688\n","181/200 [==========================\u003e...] - ETA: 7s - loss: 1.1915 - accuracy: 0.6989\n","Epoch 00004: accuracy did not improve from 0.79688\n","182/200 [==========================\u003e...] - ETA: 7s - loss: 1.1915 - accuracy: 0.6987\n","Epoch 00004: accuracy did not improve from 0.79688\n","183/200 [==========================\u003e...] - ETA: 7s - loss: 1.1915 - accuracy: 0.6985\n","Epoch 00004: accuracy did not improve from 0.79688\n","184/200 [==========================\u003e...] - ETA: 6s - loss: 1.1915 - accuracy: 0.6988\n","Epoch 00004: accuracy did not improve from 0.79688\n","185/200 [==========================\u003e...] - ETA: 6s - loss: 1.1943 - accuracy: 0.6986\n","Epoch 00004: accuracy did not improve from 0.79688\n","186/200 [==========================\u003e...] - ETA: 5s - loss: 1.1949 - accuracy: 0.6988\n","Epoch 00004: accuracy did not improve from 0.79688\n","187/200 [===========================\u003e..] - ETA: 5s - loss: 1.1962 - accuracy: 0.6985\n","Epoch 00004: accuracy did not improve from 0.79688\n","188/200 [===========================\u003e..] - ETA: 5s - loss: 1.1961 - accuracy: 0.6985\n","Epoch 00004: accuracy did not improve from 0.79688\n","189/200 [===========================\u003e..] - ETA: 4s - loss: 1.1961 - accuracy: 0.6987\n","Epoch 00004: accuracy did not improve from 0.79688\n","190/200 [===========================\u003e..] - ETA: 4s - loss: 1.1953 - accuracy: 0.6988\n","Epoch 00004: accuracy did not improve from 0.79688\n","191/200 [===========================\u003e..] - ETA: 3s - loss: 1.1952 - accuracy: 0.6987\n","Epoch 00004: accuracy did not improve from 0.79688\n","192/200 [===========================\u003e..] - ETA: 3s - loss: 1.1942 - accuracy: 0.6988\n","Epoch 00004: accuracy did not improve from 0.79688\n","193/200 [===========================\u003e..] - ETA: 2s - loss: 1.1936 - accuracy: 0.6992\n","Epoch 00004: accuracy did not improve from 0.79688\n","194/200 [============================\u003e.] - ETA: 2s - loss: 1.1950 - accuracy: 0.6987\n","Epoch 00004: accuracy did not improve from 0.79688\n","195/200 [============================\u003e.] - ETA: 2s - loss: 1.1945 - accuracy: 0.6988\n","Epoch 00004: accuracy did not improve from 0.79688\n","196/200 [============================\u003e.] - ETA: 1s - loss: 1.1927 - accuracy: 0.6993\n","Epoch 00004: accuracy did not improve from 0.79688\n","197/200 [============================\u003e.] - ETA: 1s - loss: 1.1929 - accuracy: 0.6993\n","Epoch 00004: accuracy did not improve from 0.79688\n","198/200 [============================\u003e.] - ETA: 0s - loss: 1.1940 - accuracy: 0.6992\n","Epoch 00004: accuracy did not improve from 0.79688\n","199/200 [============================\u003e.] - ETA: 0s - loss: 1.1946 - accuracy: 0.6993\n","Epoch 00004: accuracy did not improve from 0.79688\n","200/200 [==============================] - ETA: 0s - loss: 1.1936 - accuracy: 0.6998WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 86s 417ms/step - loss: 1.1936 - accuracy: 0.6998 - lr: 0.0010\n","Epoch 5/10\n","\n","Epoch 00005: accuracy did not improve from 0.79688\n","  1/200 [..............................] - ETA: 2:11 - loss: 1.1528 - accuracy: 0.7031\n","Epoch 00005: accuracy did not improve from 0.79688\n","  2/200 [..............................] - ETA: 1:16 - loss: 1.1616 - accuracy: 0.7109\n","Epoch 00005: accuracy did not improve from 0.79688\n","  3/200 [..............................] - ETA: 1:18 - loss: 1.1088 - accuracy: 0.7292\n","Epoch 00005: accuracy did not improve from 0.79688\n","  4/200 [..............................] - ETA: 1:19 - loss: 1.2083 - accuracy: 0.7070\n","Epoch 00005: accuracy did not improve from 0.79688\n","  5/200 [..............................] - ETA: 1:19 - loss: 1.1746 - accuracy: 0.7125\n","Epoch 00005: accuracy did not improve from 0.79688\n","  6/200 [..............................] - ETA: 1:18 - loss: 1.1665 - accuracy: 0.7161\n","Epoch 00005: accuracy did not improve from 0.79688\n","  7/200 [\u003e.............................] - ETA: 1:19 - loss: 1.1596 - accuracy: 0.7232\n","Epoch 00005: accuracy did not improve from 0.79688\n","  8/200 [\u003e.............................] - ETA: 1:19 - loss: 1.2280 - accuracy: 0.7031\n","Epoch 00005: accuracy did not improve from 0.79688\n","  9/200 [\u003e.............................] - ETA: 1:19 - loss: 1.2089 - accuracy: 0.7049\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 10/200 [\u003e.............................] - ETA: 1:18 - loss: 1.1859 - accuracy: 0.7063\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 11/200 [\u003e.............................] - ETA: 1:17 - loss: 1.1854 - accuracy: 0.7102\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 12/200 [\u003e.............................] - ETA: 1:17 - loss: 1.1718 - accuracy: 0.7174\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 13/200 [\u003e.............................] - ETA: 1:18 - loss: 1.1891 - accuracy: 0.7103\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 14/200 [=\u003e............................] - ETA: 1:17 - loss: 1.1842 - accuracy: 0.7076\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 15/200 [=\u003e............................] - ETA: 1:16 - loss: 1.2234 - accuracy: 0.6958\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 16/200 [=\u003e............................] - ETA: 1:16 - loss: 1.2405 - accuracy: 0.6924\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 17/200 [=\u003e............................] - ETA: 1:16 - loss: 1.2316 - accuracy: 0.6930\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 18/200 [=\u003e............................] - ETA: 1:15 - loss: 1.2350 - accuracy: 0.6927\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 19/200 [=\u003e............................] - ETA: 1:15 - loss: 1.2451 - accuracy: 0.6875\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 20/200 [==\u003e...........................] - ETA: 1:14 - loss: 1.2424 - accuracy: 0.6859\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 21/200 [==\u003e...........................] - ETA: 1:14 - loss: 1.2429 - accuracy: 0.6875\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 22/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.2425 - accuracy: 0.6882\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 23/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.2383 - accuracy: 0.6868\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 24/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.2327 - accuracy: 0.6855\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 25/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.2266 - accuracy: 0.6900\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 26/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.2262 - accuracy: 0.6887\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 27/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.2301 - accuracy: 0.6875\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 28/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.2259 - accuracy: 0.6892\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 29/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.2211 - accuracy: 0.6902\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 30/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.2167 - accuracy: 0.6911\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 31/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.2160 - accuracy: 0.6900\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 32/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.2134 - accuracy: 0.6919\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 33/200 [===\u003e..........................] - ETA: 1:08 - loss: 1.2031 - accuracy: 0.6932\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 34/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.1999 - accuracy: 0.6953\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 35/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.1998 - accuracy: 0.6938\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 36/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.2010 - accuracy: 0.6940\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 37/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.2000 - accuracy: 0.6926\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 38/200 [====\u003e.........................] - ETA: 1:06 - loss: 1.2001 - accuracy: 0.6928\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 39/200 [====\u003e.........................] - ETA: 1:06 - loss: 1.2012 - accuracy: 0.6919\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 40/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.2001 - accuracy: 0.6930\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 41/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.2028 - accuracy: 0.6932\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 42/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.2131 - accuracy: 0.6908\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 43/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.2184 - accuracy: 0.6886\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 44/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.2102 - accuracy: 0.6903\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 45/200 [=====\u003e........................] - ETA: 1:03 - loss: 1.2091 - accuracy: 0.6906\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 46/200 [=====\u003e........................] - ETA: 1:03 - loss: 1.2017 - accuracy: 0.6923\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 47/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.2024 - accuracy: 0.6925\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 48/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.2080 - accuracy: 0.6904\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 49/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.2113 - accuracy: 0.6901\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 50/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.2091 - accuracy: 0.6909\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 51/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.2096 - accuracy: 0.6921\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 52/200 [======\u003e.......................] - ETA: 1:00 - loss: 1.2103 - accuracy: 0.6911\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 53/200 [======\u003e.......................] - ETA: 1:00 - loss: 1.2030 - accuracy: 0.6925\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 54/200 [=======\u003e......................] - ETA: 1:00 - loss: 1.1979 - accuracy: 0.6936\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 55/200 [=======\u003e......................] - ETA: 59s - loss: 1.2020 - accuracy: 0.6932 \n","Epoch 00005: accuracy did not improve from 0.79688\n"," 56/200 [=======\u003e......................] - ETA: 59s - loss: 1.2084 - accuracy: 0.6911\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 57/200 [=======\u003e......................] - ETA: 59s - loss: 1.2071 - accuracy: 0.6911\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 58/200 [=======\u003e......................] - ETA: 58s - loss: 1.2072 - accuracy: 0.6915\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 59/200 [=======\u003e......................] - ETA: 58s - loss: 1.2016 - accuracy: 0.6939\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 60/200 [========\u003e.....................] - ETA: 57s - loss: 1.1995 - accuracy: 0.6948\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 61/200 [========\u003e.....................] - ETA: 57s - loss: 1.1949 - accuracy: 0.6954\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 62/200 [========\u003e.....................] - ETA: 57s - loss: 1.1945 - accuracy: 0.6953\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 63/200 [========\u003e.....................] - ETA: 56s - loss: 1.1945 - accuracy: 0.6962\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 64/200 [========\u003e.....................] - ETA: 56s - loss: 1.1927 - accuracy: 0.6968\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 65/200 [========\u003e.....................] - ETA: 55s - loss: 1.1894 - accuracy: 0.6966\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 66/200 [========\u003e.....................] - ETA: 55s - loss: 1.1853 - accuracy: 0.6974\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 67/200 [=========\u003e....................] - ETA: 54s - loss: 1.1881 - accuracy: 0.6973\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 68/200 [=========\u003e....................] - ETA: 54s - loss: 1.1900 - accuracy: 0.6976\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 69/200 [=========\u003e....................] - ETA: 54s - loss: 1.1920 - accuracy: 0.6970\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 70/200 [=========\u003e....................] - ETA: 53s - loss: 1.1892 - accuracy: 0.6982\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 71/200 [=========\u003e....................] - ETA: 53s - loss: 1.1890 - accuracy: 0.6981\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 72/200 [=========\u003e....................] - ETA: 52s - loss: 1.1869 - accuracy: 0.6990\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 73/200 [=========\u003e....................] - ETA: 52s - loss: 1.1883 - accuracy: 0.6988\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 74/200 [==========\u003e...................] - ETA: 52s - loss: 1.1889 - accuracy: 0.6993\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 75/200 [==========\u003e...................] - ETA: 51s - loss: 1.1927 - accuracy: 0.6979\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 76/200 [==========\u003e...................] - ETA: 51s - loss: 1.1968 - accuracy: 0.6970\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 77/200 [==========\u003e...................] - ETA: 50s - loss: 1.1945 - accuracy: 0.6981\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 78/200 [==========\u003e...................] - ETA: 50s - loss: 1.1955 - accuracy: 0.6985\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 79/200 [==========\u003e...................] - ETA: 50s - loss: 1.1920 - accuracy: 0.6994\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 80/200 [===========\u003e..................] - ETA: 49s - loss: 1.1909 - accuracy: 0.6996\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 81/200 [===========\u003e..................] - ETA: 49s - loss: 1.1897 - accuracy: 0.7000\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 82/200 [===========\u003e..................] - ETA: 48s - loss: 1.1908 - accuracy: 0.7008\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 83/200 [===========\u003e..................] - ETA: 48s - loss: 1.1895 - accuracy: 0.7009\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 84/200 [===========\u003e..................] - ETA: 48s - loss: 1.1919 - accuracy: 0.6998\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 85/200 [===========\u003e..................] - ETA: 47s - loss: 1.1903 - accuracy: 0.7006\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 86/200 [===========\u003e..................] - ETA: 47s - loss: 1.1884 - accuracy: 0.7015\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 87/200 [============\u003e.................] - ETA: 46s - loss: 1.1893 - accuracy: 0.7015\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 88/200 [============\u003e.................] - ETA: 46s - loss: 1.1900 - accuracy: 0.7012\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 89/200 [============\u003e.................] - ETA: 46s - loss: 1.1968 - accuracy: 0.6994\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 90/200 [============\u003e.................] - ETA: 45s - loss: 1.1996 - accuracy: 0.6986\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 91/200 [============\u003e.................] - ETA: 45s - loss: 1.2019 - accuracy: 0.6980\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 92/200 [============\u003e.................] - ETA: 44s - loss: 1.2021 - accuracy: 0.6984\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 93/200 [============\u003e.................] - ETA: 44s - loss: 1.2006 - accuracy: 0.6983\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 94/200 [=============\u003e................] - ETA: 43s - loss: 1.2012 - accuracy: 0.6981\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 95/200 [=============\u003e................] - ETA: 43s - loss: 1.2016 - accuracy: 0.6979\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 96/200 [=============\u003e................] - ETA: 43s - loss: 1.2031 - accuracy: 0.6978\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 97/200 [=============\u003e................] - ETA: 42s - loss: 1.2036 - accuracy: 0.6980\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 98/200 [=============\u003e................] - ETA: 42s - loss: 1.2011 - accuracy: 0.6987\n","Epoch 00005: accuracy did not improve from 0.79688\n"," 99/200 [=============\u003e................] - ETA: 41s - loss: 1.2021 - accuracy: 0.6985\n","Epoch 00005: accuracy did not improve from 0.79688\n","100/200 [==============\u003e...............] - ETA: 41s - loss: 1.2011 - accuracy: 0.6989\n","Epoch 00005: accuracy did not improve from 0.79688\n","101/200 [==============\u003e...............] - ETA: 40s - loss: 1.2013 - accuracy: 0.6986\n","Epoch 00005: accuracy did not improve from 0.79688\n","102/200 [==============\u003e...............] - ETA: 40s - loss: 1.2024 - accuracy: 0.6984\n","Epoch 00005: accuracy did not improve from 0.79688\n","103/200 [==============\u003e...............] - ETA: 40s - loss: 1.2017 - accuracy: 0.6989\n","Epoch 00005: accuracy did not improve from 0.79688\n","104/200 [==============\u003e...............] - ETA: 39s - loss: 1.2017 - accuracy: 0.6988\n","Epoch 00005: accuracy did not improve from 0.79688\n","105/200 [==============\u003e...............] - ETA: 39s - loss: 1.2021 - accuracy: 0.6988\n","Epoch 00005: accuracy did not improve from 0.79688\n","106/200 [==============\u003e...............] - ETA: 38s - loss: 1.2073 - accuracy: 0.6975\n","Epoch 00005: accuracy did not improve from 0.79688\n","107/200 [===============\u003e..............] - ETA: 38s - loss: 1.2029 - accuracy: 0.6986\n","Epoch 00005: accuracy did not improve from 0.79688\n","108/200 [===============\u003e..............] - ETA: 38s - loss: 1.2035 - accuracy: 0.6989\n","Epoch 00005: accuracy did not improve from 0.79688\n","109/200 [===============\u003e..............] - ETA: 37s - loss: 1.1994 - accuracy: 0.7000\n","Epoch 00005: accuracy did not improve from 0.79688\n","110/200 [===============\u003e..............] - ETA: 37s - loss: 1.1995 - accuracy: 0.6999\n","Epoch 00005: accuracy did not improve from 0.79688\n","111/200 [===============\u003e..............] - ETA: 36s - loss: 1.1991 - accuracy: 0.7002\n","Epoch 00005: accuracy did not improve from 0.79688\n","112/200 [===============\u003e..............] - ETA: 36s - loss: 1.2001 - accuracy: 0.6994\n","Epoch 00005: accuracy did not improve from 0.79688\n","113/200 [===============\u003e..............] - ETA: 35s - loss: 1.2035 - accuracy: 0.6981\n","Epoch 00005: accuracy did not improve from 0.79688\n","114/200 [================\u003e.............] - ETA: 35s - loss: 1.2017 - accuracy: 0.6985\n","Epoch 00005: accuracy did not improve from 0.79688\n","115/200 [================\u003e.............] - ETA: 35s - loss: 1.2027 - accuracy: 0.6980\n","Epoch 00005: accuracy did not improve from 0.79688\n","116/200 [================\u003e.............] - ETA: 34s - loss: 1.2025 - accuracy: 0.6984\n","Epoch 00005: accuracy did not improve from 0.79688\n","117/200 [================\u003e.............] - ETA: 34s - loss: 1.2010 - accuracy: 0.6989\n","Epoch 00005: accuracy did not improve from 0.79688\n","118/200 [================\u003e.............] - ETA: 33s - loss: 1.1994 - accuracy: 0.6997\n","Epoch 00005: accuracy did not improve from 0.79688\n","119/200 [================\u003e.............] - ETA: 33s - loss: 1.2004 - accuracy: 0.6993\n","Epoch 00005: accuracy did not improve from 0.79688\n","120/200 [=================\u003e............] - ETA: 32s - loss: 1.1973 - accuracy: 0.7001\n","Epoch 00005: accuracy did not improve from 0.79688\n","121/200 [=================\u003e............] - ETA: 32s - loss: 1.1957 - accuracy: 0.7005\n","Epoch 00005: accuracy did not improve from 0.79688\n","122/200 [=================\u003e............] - ETA: 32s - loss: 1.1957 - accuracy: 0.7006\n","Epoch 00005: accuracy did not improve from 0.79688\n","123/200 [=================\u003e............] - ETA: 31s - loss: 1.1943 - accuracy: 0.7007\n","Epoch 00005: accuracy did not improve from 0.79688\n","124/200 [=================\u003e............] - ETA: 31s - loss: 1.1936 - accuracy: 0.7012\n","Epoch 00005: accuracy did not improve from 0.79688\n","125/200 [=================\u003e............] - ETA: 30s - loss: 1.1923 - accuracy: 0.7017\n","Epoch 00005: accuracy did not improve from 0.79688\n","126/200 [=================\u003e............] - ETA: 30s - loss: 1.1927 - accuracy: 0.7013\n","Epoch 00005: accuracy did not improve from 0.79688\n","127/200 [==================\u003e...........] - ETA: 30s - loss: 1.1914 - accuracy: 0.7016\n","Epoch 00005: accuracy did not improve from 0.79688\n","128/200 [==================\u003e...........] - ETA: 29s - loss: 1.1899 - accuracy: 0.7018\n","Epoch 00005: accuracy did not improve from 0.79688\n","129/200 [==================\u003e...........] - ETA: 29s - loss: 1.1890 - accuracy: 0.7017\n","Epoch 00005: accuracy did not improve from 0.79688\n","130/200 [==================\u003e...........] - ETA: 28s - loss: 1.1874 - accuracy: 0.7020\n","Epoch 00005: accuracy did not improve from 0.79688\n","131/200 [==================\u003e...........] - ETA: 28s - loss: 1.1876 - accuracy: 0.7018\n","Epoch 00005: accuracy did not improve from 0.79688\n","132/200 [==================\u003e...........] - ETA: 28s - loss: 1.1883 - accuracy: 0.7017\n","Epoch 00005: accuracy did not improve from 0.79688\n","133/200 [==================\u003e...........] - ETA: 27s - loss: 1.1887 - accuracy: 0.7020\n","Epoch 00005: accuracy did not improve from 0.79688\n","134/200 [===================\u003e..........] - ETA: 27s - loss: 1.1875 - accuracy: 0.7021\n","Epoch 00005: accuracy did not improve from 0.79688\n","135/200 [===================\u003e..........] - ETA: 26s - loss: 1.1877 - accuracy: 0.7016\n","Epoch 00005: accuracy did not improve from 0.79688\n","136/200 [===================\u003e..........] - ETA: 26s - loss: 1.1850 - accuracy: 0.7023\n","Epoch 00005: accuracy did not improve from 0.79688\n","137/200 [===================\u003e..........] - ETA: 25s - loss: 1.1832 - accuracy: 0.7030\n","Epoch 00005: accuracy did not improve from 0.79688\n","138/200 [===================\u003e..........] - ETA: 25s - loss: 1.1836 - accuracy: 0.7034\n","Epoch 00005: accuracy did not improve from 0.79688\n","139/200 [===================\u003e..........] - ETA: 25s - loss: 1.1863 - accuracy: 0.7026\n","Epoch 00005: accuracy did not improve from 0.79688\n","140/200 [====================\u003e.........] - ETA: 24s - loss: 1.1859 - accuracy: 0.7021\n","Epoch 00005: accuracy did not improve from 0.79688\n","141/200 [====================\u003e.........] - ETA: 24s - loss: 1.1867 - accuracy: 0.7014\n","Epoch 00005: accuracy did not improve from 0.79688\n","142/200 [====================\u003e.........] - ETA: 23s - loss: 1.1881 - accuracy: 0.7014\n","Epoch 00005: accuracy did not improve from 0.79688\n","143/200 [====================\u003e.........] - ETA: 23s - loss: 1.1868 - accuracy: 0.7020\n","Epoch 00005: accuracy did not improve from 0.79688\n","144/200 [====================\u003e.........] - ETA: 23s - loss: 1.1880 - accuracy: 0.7016\n","Epoch 00005: accuracy did not improve from 0.79688\n","145/200 [====================\u003e.........] - ETA: 22s - loss: 1.1893 - accuracy: 0.7014\n","Epoch 00005: accuracy did not improve from 0.79688\n","146/200 [====================\u003e.........] - ETA: 22s - loss: 1.1878 - accuracy: 0.7018\n","Epoch 00005: accuracy did not improve from 0.79688\n","147/200 [=====================\u003e........] - ETA: 21s - loss: 1.1877 - accuracy: 0.7017\n","Epoch 00005: accuracy did not improve from 0.79688\n","148/200 [=====================\u003e........] - ETA: 21s - loss: 1.1869 - accuracy: 0.7019\n","Epoch 00005: accuracy did not improve from 0.79688\n","149/200 [=====================\u003e........] - ETA: 20s - loss: 1.1857 - accuracy: 0.7022\n","Epoch 00005: accuracy did not improve from 0.79688\n","150/200 [=====================\u003e........] - ETA: 20s - loss: 1.1841 - accuracy: 0.7031\n","Epoch 00005: accuracy did not improve from 0.79688\n","151/200 [=====================\u003e........] - ETA: 20s - loss: 1.1852 - accuracy: 0.7030\n","Epoch 00005: accuracy did not improve from 0.79688\n","152/200 [=====================\u003e........] - ETA: 19s - loss: 1.1855 - accuracy: 0.7030\n","Epoch 00005: accuracy did not improve from 0.79688\n","153/200 [=====================\u003e........] - ETA: 19s - loss: 1.1866 - accuracy: 0.7026\n","Epoch 00005: accuracy did not improve from 0.79688\n","154/200 [======================\u003e.......] - ETA: 18s - loss: 1.1875 - accuracy: 0.7026\n","Epoch 00005: accuracy did not improve from 0.79688\n","155/200 [======================\u003e.......] - ETA: 18s - loss: 1.1873 - accuracy: 0.7023\n","Epoch 00005: accuracy did not improve from 0.79688\n","156/200 [======================\u003e.......] - ETA: 18s - loss: 1.1868 - accuracy: 0.7022\n","Epoch 00005: accuracy did not improve from 0.79688\n","157/200 [======================\u003e.......] - ETA: 17s - loss: 1.1885 - accuracy: 0.7018\n","Epoch 00005: accuracy did not improve from 0.79688\n","158/200 [======================\u003e.......] - ETA: 17s - loss: 1.1877 - accuracy: 0.7018\n","Epoch 00005: accuracy did not improve from 0.79688\n","159/200 [======================\u003e.......] - ETA: 16s - loss: 1.1858 - accuracy: 0.7025\n","Epoch 00005: accuracy did not improve from 0.79688\n","160/200 [=======================\u003e......] - ETA: 16s - loss: 1.1880 - accuracy: 0.7021\n","Epoch 00005: accuracy did not improve from 0.79688\n","161/200 [=======================\u003e......] - ETA: 16s - loss: 1.1866 - accuracy: 0.7022\n","Epoch 00005: accuracy did not improve from 0.79688\n","162/200 [=======================\u003e......] - ETA: 15s - loss: 1.1874 - accuracy: 0.7017\n","Epoch 00005: accuracy did not improve from 0.79688\n","163/200 [=======================\u003e......] - ETA: 15s - loss: 1.1861 - accuracy: 0.7020\n","Epoch 00005: accuracy did not improve from 0.79688\n","164/200 [=======================\u003e......] - ETA: 14s - loss: 1.1867 - accuracy: 0.7022\n","Epoch 00005: accuracy did not improve from 0.79688\n","165/200 [=======================\u003e......] - ETA: 14s - loss: 1.1876 - accuracy: 0.7021\n","Epoch 00005: accuracy did not improve from 0.79688\n","166/200 [=======================\u003e......] - ETA: 13s - loss: 1.1876 - accuracy: 0.7020\n","Epoch 00005: accuracy did not improve from 0.79688\n","167/200 [========================\u003e.....] - ETA: 13s - loss: 1.1862 - accuracy: 0.7023\n","Epoch 00005: accuracy did not improve from 0.79688\n","168/200 [========================\u003e.....] - ETA: 13s - loss: 1.1866 - accuracy: 0.7019\n","Epoch 00005: accuracy did not improve from 0.79688\n","169/200 [========================\u003e.....] - ETA: 12s - loss: 1.1860 - accuracy: 0.7018\n","Epoch 00005: accuracy did not improve from 0.79688\n","170/200 [========================\u003e.....] - ETA: 12s - loss: 1.1855 - accuracy: 0.7023\n","Epoch 00005: accuracy did not improve from 0.79688\n","171/200 [========================\u003e.....] - ETA: 11s - loss: 1.1863 - accuracy: 0.7019\n","Epoch 00005: accuracy did not improve from 0.79688\n","172/200 [========================\u003e.....] - ETA: 11s - loss: 1.1859 - accuracy: 0.7021\n","Epoch 00005: accuracy did not improve from 0.79688\n","173/200 [========================\u003e.....] - ETA: 11s - loss: 1.1863 - accuracy: 0.7019\n","Epoch 00005: accuracy did not improve from 0.79688\n","174/200 [=========================\u003e....] - ETA: 10s - loss: 1.1863 - accuracy: 0.7019\n","Epoch 00005: accuracy did not improve from 0.79688\n","175/200 [=========================\u003e....] - ETA: 10s - loss: 1.1862 - accuracy: 0.7020\n","Epoch 00005: accuracy did not improve from 0.79688\n","176/200 [=========================\u003e....] - ETA: 9s - loss: 1.1871 - accuracy: 0.7018 \n","Epoch 00005: accuracy did not improve from 0.79688\n","177/200 [=========================\u003e....] - ETA: 9s - loss: 1.1872 - accuracy: 0.7020\n","Epoch 00005: accuracy did not improve from 0.79688\n","178/200 [=========================\u003e....] - ETA: 9s - loss: 1.1862 - accuracy: 0.7023\n","Epoch 00005: accuracy did not improve from 0.79688\n","179/200 [=========================\u003e....] - ETA: 8s - loss: 1.1856 - accuracy: 0.7023\n","Epoch 00005: accuracy did not improve from 0.79688\n","180/200 [==========================\u003e...] - ETA: 8s - loss: 1.1846 - accuracy: 0.7023\n","Epoch 00005: accuracy did not improve from 0.79688\n","181/200 [==========================\u003e...] - ETA: 7s - loss: 1.1842 - accuracy: 0.7024\n","Epoch 00005: accuracy did not improve from 0.79688\n","182/200 [==========================\u003e...] - ETA: 7s - loss: 1.1852 - accuracy: 0.7021\n","Epoch 00005: accuracy did not improve from 0.79688\n","183/200 [==========================\u003e...] - ETA: 7s - loss: 1.1867 - accuracy: 0.7021\n","Epoch 00005: accuracy did not improve from 0.79688\n","184/200 [==========================\u003e...] - ETA: 6s - loss: 1.1891 - accuracy: 0.7016\n","Epoch 00005: accuracy did not improve from 0.79688\n","185/200 [==========================\u003e...] - ETA: 6s - loss: 1.1884 - accuracy: 0.7014\n","Epoch 00005: accuracy did not improve from 0.79688\n","186/200 [==========================\u003e...] - ETA: 5s - loss: 1.1897 - accuracy: 0.7014\n","Epoch 00005: accuracy did not improve from 0.79688\n","187/200 [===========================\u003e..] - ETA: 5s - loss: 1.1881 - accuracy: 0.7015\n","Epoch 00005: accuracy did not improve from 0.79688\n","188/200 [===========================\u003e..] - ETA: 4s - loss: 1.1870 - accuracy: 0.7018\n","Epoch 00005: accuracy did not improve from 0.79688\n","189/200 [===========================\u003e..] - ETA: 4s - loss: 1.1872 - accuracy: 0.7014\n","Epoch 00005: accuracy did not improve from 0.79688\n","190/200 [===========================\u003e..] - ETA: 4s - loss: 1.1869 - accuracy: 0.7016\n","Epoch 00005: accuracy did not improve from 0.79688\n","191/200 [===========================\u003e..] - ETA: 3s - loss: 1.1875 - accuracy: 0.7016\n","Epoch 00005: accuracy did not improve from 0.79688\n","192/200 [===========================\u003e..] - ETA: 3s - loss: 1.1862 - accuracy: 0.7019\n","Epoch 00005: accuracy did not improve from 0.79688\n","193/200 [===========================\u003e..] - ETA: 2s - loss: 1.1858 - accuracy: 0.7018\n","Epoch 00005: accuracy did not improve from 0.79688\n","194/200 [============================\u003e.] - ETA: 2s - loss: 1.1857 - accuracy: 0.7018\n","Epoch 00005: accuracy did not improve from 0.79688\n","195/200 [============================\u003e.] - ETA: 2s - loss: 1.1863 - accuracy: 0.7016\n","Epoch 00005: accuracy did not improve from 0.79688\n","196/200 [============================\u003e.] - ETA: 1s - loss: 1.1865 - accuracy: 0.7016\n","Epoch 00005: accuracy did not improve from 0.79688\n","197/200 [============================\u003e.] - ETA: 1s - loss: 1.1867 - accuracy: 0.7016\n","Epoch 00005: accuracy did not improve from 0.79688\n","198/200 [============================\u003e.] - ETA: 0s - loss: 1.1872 - accuracy: 0.7014\n","Epoch 00005: accuracy did not improve from 0.79688\n","199/200 [============================\u003e.] - ETA: 0s - loss: 1.1865 - accuracy: 0.7019\n","Epoch 00005: accuracy did not improve from 0.79688\n","200/200 [==============================] - ETA: 0s - loss: 1.1871 - accuracy: 0.7019WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 83s 413ms/step - loss: 1.1871 - accuracy: 0.7019 - lr: 0.0010\n","Epoch 6/10\n","\n","Epoch 00006: accuracy did not improve from 0.79688\n","  1/200 [..............................] - ETA: 1:52 - loss: 0.7638 - accuracy: 0.7969\n","Epoch 00006: accuracy did not improve from 0.79688\n","  2/200 [..............................] - ETA: 1:22 - loss: 0.9277 - accuracy: 0.7578\n","Epoch 00006: accuracy did not improve from 0.79688\n","  3/200 [..............................] - ETA: 1:19 - loss: 1.0176 - accuracy: 0.7344\n","Epoch 00006: accuracy did not improve from 0.79688\n","  4/200 [..............................] - ETA: 1:18 - loss: 1.0654 - accuracy: 0.7188\n","Epoch 00006: accuracy did not improve from 0.79688\n","  5/200 [..............................] - ETA: 1:19 - loss: 1.0349 - accuracy: 0.7281\n","Epoch 00006: accuracy did not improve from 0.79688\n","  6/200 [..............................] - ETA: 1:18 - loss: 1.0351 - accuracy: 0.7240\n","Epoch 00006: accuracy did not improve from 0.79688\n","  7/200 [\u003e.............................] - ETA: 1:17 - loss: 1.0664 - accuracy: 0.7121\n","Epoch 00006: accuracy did not improve from 0.79688\n","  8/200 [\u003e.............................] - ETA: 1:17 - loss: 1.0449 - accuracy: 0.7227\n","Epoch 00006: accuracy did not improve from 0.79688\n","  9/200 [\u003e.............................] - ETA: 1:17 - loss: 1.0485 - accuracy: 0.7257\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 10/200 [\u003e.............................] - ETA: 1:17 - loss: 1.1041 - accuracy: 0.7156\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 11/200 [\u003e.............................] - ETA: 1:17 - loss: 1.1212 - accuracy: 0.7116\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 12/200 [\u003e.............................] - ETA: 1:16 - loss: 1.1207 - accuracy: 0.7122\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 13/200 [\u003e.............................] - ETA: 1:16 - loss: 1.1116 - accuracy: 0.7151\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 14/200 [=\u003e............................] - ETA: 1:16 - loss: 1.1124 - accuracy: 0.7143\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 15/200 [=\u003e............................] - ETA: 1:15 - loss: 1.1271 - accuracy: 0.7094\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 16/200 [=\u003e............................] - ETA: 1:15 - loss: 1.1311 - accuracy: 0.7100\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 17/200 [=\u003e............................] - ETA: 1:14 - loss: 1.1231 - accuracy: 0.7086\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 18/200 [=\u003e............................] - ETA: 1:14 - loss: 1.1248 - accuracy: 0.7092\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 19/200 [=\u003e............................] - ETA: 1:13 - loss: 1.1340 - accuracy: 0.7039\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 20/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.1302 - accuracy: 0.7055\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 21/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.1327 - accuracy: 0.7054\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 22/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.1329 - accuracy: 0.7067\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 23/200 [==\u003e...........................] - ETA: 1:11 - loss: 1.1264 - accuracy: 0.7058\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 24/200 [==\u003e...........................] - ETA: 1:11 - loss: 1.1264 - accuracy: 0.7051\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 25/200 [==\u003e...........................] - ETA: 1:10 - loss: 1.1198 - accuracy: 0.7081\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 26/200 [==\u003e...........................] - ETA: 1:10 - loss: 1.1152 - accuracy: 0.7097\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 27/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.1330 - accuracy: 0.7066\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 28/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.1414 - accuracy: 0.7065\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 29/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.1366 - accuracy: 0.7091\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 30/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.1303 - accuracy: 0.7109\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 31/200 [===\u003e..........................] - ETA: 1:08 - loss: 1.1306 - accuracy: 0.7112\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 32/200 [===\u003e..........................] - ETA: 1:08 - loss: 1.1399 - accuracy: 0.7090\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 33/200 [===\u003e..........................] - ETA: 1:08 - loss: 1.1460 - accuracy: 0.7074\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 34/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1515 - accuracy: 0.7082\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 35/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1533 - accuracy: 0.7085\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 36/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1459 - accuracy: 0.7101\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 37/200 [====\u003e.........................] - ETA: 1:06 - loss: 1.1573 - accuracy: 0.7082\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 38/200 [====\u003e.........................] - ETA: 1:06 - loss: 1.1484 - accuracy: 0.7097\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 39/200 [====\u003e.........................] - ETA: 1:05 - loss: 1.1481 - accuracy: 0.7091\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 40/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1534 - accuracy: 0.7086\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 41/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1563 - accuracy: 0.7077\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 42/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1535 - accuracy: 0.7080\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 43/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1526 - accuracy: 0.7089\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 44/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1499 - accuracy: 0.7095\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 45/200 [=====\u003e........................] - ETA: 1:03 - loss: 1.1489 - accuracy: 0.7101\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 46/200 [=====\u003e........................] - ETA: 1:03 - loss: 1.1501 - accuracy: 0.7089\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 47/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1581 - accuracy: 0.7064\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 48/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1624 - accuracy: 0.7051\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 49/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1618 - accuracy: 0.7057\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 50/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1634 - accuracy: 0.7056\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 51/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1586 - accuracy: 0.7074\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 52/200 [======\u003e.......................] - ETA: 1:00 - loss: 1.1564 - accuracy: 0.7070\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 53/200 [======\u003e.......................] - ETA: 1:00 - loss: 1.1540 - accuracy: 0.7078\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 54/200 [=======\u003e......................] - ETA: 59s - loss: 1.1564 - accuracy: 0.7075 \n","Epoch 00006: accuracy did not improve from 0.79688\n"," 55/200 [=======\u003e......................] - ETA: 59s - loss: 1.1570 - accuracy: 0.7077\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 56/200 [=======\u003e......................] - ETA: 58s - loss: 1.1553 - accuracy: 0.7076\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 57/200 [=======\u003e......................] - ETA: 58s - loss: 1.1557 - accuracy: 0.7067\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 58/200 [=======\u003e......................] - ETA: 58s - loss: 1.1502 - accuracy: 0.7088\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 59/200 [=======\u003e......................] - ETA: 57s - loss: 1.1494 - accuracy: 0.7097\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 60/200 [========\u003e.....................] - ETA: 57s - loss: 1.1519 - accuracy: 0.7107\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 61/200 [========\u003e.....................] - ETA: 56s - loss: 1.1494 - accuracy: 0.7111\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 62/200 [========\u003e.....................] - ETA: 56s - loss: 1.1518 - accuracy: 0.7102\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 63/200 [========\u003e.....................] - ETA: 55s - loss: 1.1499 - accuracy: 0.7103\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 64/200 [========\u003e.....................] - ETA: 55s - loss: 1.1505 - accuracy: 0.7107\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 65/200 [========\u003e.....................] - ETA: 54s - loss: 1.1463 - accuracy: 0.7120\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 66/200 [========\u003e.....................] - ETA: 54s - loss: 1.1450 - accuracy: 0.7119\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 67/200 [=========\u003e....................] - ETA: 54s - loss: 1.1456 - accuracy: 0.7118\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 68/200 [=========\u003e....................] - ETA: 53s - loss: 1.1459 - accuracy: 0.7112\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 69/200 [=========\u003e....................] - ETA: 53s - loss: 1.1467 - accuracy: 0.7111\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 70/200 [=========\u003e....................] - ETA: 52s - loss: 1.1471 - accuracy: 0.7109\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 71/200 [=========\u003e....................] - ETA: 52s - loss: 1.1454 - accuracy: 0.7108\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 72/200 [=========\u003e....................] - ETA: 52s - loss: 1.1414 - accuracy: 0.7122\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 73/200 [=========\u003e....................] - ETA: 51s - loss: 1.1391 - accuracy: 0.7130\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 74/200 [==========\u003e...................] - ETA: 51s - loss: 1.1426 - accuracy: 0.7120\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 75/200 [==========\u003e...................] - ETA: 51s - loss: 1.1432 - accuracy: 0.7121\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 76/200 [==========\u003e...................] - ETA: 50s - loss: 1.1446 - accuracy: 0.7118\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 77/200 [==========\u003e...................] - ETA: 50s - loss: 1.1468 - accuracy: 0.7116\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 78/200 [==========\u003e...................] - ETA: 49s - loss: 1.1475 - accuracy: 0.7121\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 79/200 [==========\u003e...................] - ETA: 49s - loss: 1.1500 - accuracy: 0.7106\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 80/200 [===========\u003e..................] - ETA: 49s - loss: 1.1512 - accuracy: 0.7102\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 81/200 [===========\u003e..................] - ETA: 48s - loss: 1.1510 - accuracy: 0.7099\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 82/200 [===========\u003e..................] - ETA: 48s - loss: 1.1509 - accuracy: 0.7106\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 83/200 [===========\u003e..................] - ETA: 47s - loss: 1.1495 - accuracy: 0.7108\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 84/200 [===========\u003e..................] - ETA: 47s - loss: 1.1489 - accuracy: 0.7108\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 85/200 [===========\u003e..................] - ETA: 47s - loss: 1.1480 - accuracy: 0.7105\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 86/200 [===========\u003e..................] - ETA: 46s - loss: 1.1474 - accuracy: 0.7109\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 87/200 [============\u003e.................] - ETA: 46s - loss: 1.1496 - accuracy: 0.7099\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 88/200 [============\u003e.................] - ETA: 45s - loss: 1.1484 - accuracy: 0.7108\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 89/200 [============\u003e.................] - ETA: 45s - loss: 1.1459 - accuracy: 0.7117\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 90/200 [============\u003e.................] - ETA: 45s - loss: 1.1453 - accuracy: 0.7118\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 91/200 [============\u003e.................] - ETA: 44s - loss: 1.1462 - accuracy: 0.7117\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 92/200 [============\u003e.................] - ETA: 44s - loss: 1.1441 - accuracy: 0.7126\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 93/200 [============\u003e.................] - ETA: 43s - loss: 1.1442 - accuracy: 0.7125\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 94/200 [=============\u003e................] - ETA: 43s - loss: 1.1425 - accuracy: 0.7128\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 95/200 [=============\u003e................] - ETA: 43s - loss: 1.1449 - accuracy: 0.7123\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 96/200 [=============\u003e................] - ETA: 42s - loss: 1.1441 - accuracy: 0.7119\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 97/200 [=============\u003e................] - ETA: 42s - loss: 1.1507 - accuracy: 0.7105\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 98/200 [=============\u003e................] - ETA: 41s - loss: 1.1537 - accuracy: 0.7093\n","Epoch 00006: accuracy did not improve from 0.79688\n"," 99/200 [=============\u003e................] - ETA: 41s - loss: 1.1503 - accuracy: 0.7102\n","Epoch 00006: accuracy did not improve from 0.79688\n","100/200 [==============\u003e...............] - ETA: 41s - loss: 1.1544 - accuracy: 0.7091\n","Epoch 00006: accuracy did not improve from 0.79688\n","101/200 [==============\u003e...............] - ETA: 40s - loss: 1.1559 - accuracy: 0.7085\n","Epoch 00006: accuracy did not improve from 0.79688\n","102/200 [==============\u003e...............] - ETA: 40s - loss: 1.1549 - accuracy: 0.7082\n","Epoch 00006: accuracy did not improve from 0.79688\n","103/200 [==============\u003e...............] - ETA: 39s - loss: 1.1519 - accuracy: 0.7089\n","Epoch 00006: accuracy did not improve from 0.79688\n","104/200 [==============\u003e...............] - ETA: 39s - loss: 1.1507 - accuracy: 0.7094\n","Epoch 00006: accuracy did not improve from 0.79688\n","105/200 [==============\u003e...............] - ETA: 39s - loss: 1.1505 - accuracy: 0.7095\n","Epoch 00006: accuracy did not improve from 0.79688\n","106/200 [==============\u003e...............] - ETA: 38s - loss: 1.1496 - accuracy: 0.7098\n","Epoch 00006: accuracy did not improve from 0.79688\n","107/200 [===============\u003e..............] - ETA: 38s - loss: 1.1484 - accuracy: 0.7100\n","Epoch 00006: accuracy did not improve from 0.79688\n","108/200 [===============\u003e..............] - ETA: 37s - loss: 1.1474 - accuracy: 0.7099\n","Epoch 00006: accuracy did not improve from 0.79688\n","109/200 [===============\u003e..............] - ETA: 37s - loss: 1.1476 - accuracy: 0.7101\n","Epoch 00006: accuracy did not improve from 0.79688\n","110/200 [===============\u003e..............] - ETA: 37s - loss: 1.1454 - accuracy: 0.7111\n","Epoch 00006: accuracy did not improve from 0.79688\n","111/200 [===============\u003e..............] - ETA: 36s - loss: 1.1460 - accuracy: 0.7109\n","Epoch 00006: accuracy did not improve from 0.79688\n","112/200 [===============\u003e..............] - ETA: 36s - loss: 1.1449 - accuracy: 0.7111\n","Epoch 00006: accuracy did not improve from 0.79688\n","113/200 [===============\u003e..............] - ETA: 35s - loss: 1.1474 - accuracy: 0.7110\n","Epoch 00006: accuracy did not improve from 0.79688\n","114/200 [================\u003e.............] - ETA: 35s - loss: 1.1468 - accuracy: 0.7118\n","Epoch 00006: accuracy did not improve from 0.79688\n","115/200 [================\u003e.............] - ETA: 35s - loss: 1.1470 - accuracy: 0.7118\n","Epoch 00006: accuracy did not improve from 0.79688\n","116/200 [================\u003e.............] - ETA: 34s - loss: 1.1452 - accuracy: 0.7126\n","Epoch 00006: accuracy did not improve from 0.79688\n","117/200 [================\u003e.............] - ETA: 34s - loss: 1.1451 - accuracy: 0.7130\n","Epoch 00006: accuracy did not improve from 0.79688\n","118/200 [================\u003e.............] - ETA: 33s - loss: 1.1445 - accuracy: 0.7129\n","Epoch 00006: accuracy did not improve from 0.79688\n","119/200 [================\u003e.............] - ETA: 33s - loss: 1.1445 - accuracy: 0.7134\n","Epoch 00006: accuracy did not improve from 0.79688\n","120/200 [=================\u003e............] - ETA: 33s - loss: 1.1450 - accuracy: 0.7128\n","Epoch 00006: accuracy did not improve from 0.79688\n","121/200 [=================\u003e............] - ETA: 32s - loss: 1.1424 - accuracy: 0.7132\n","Epoch 00006: accuracy did not improve from 0.79688\n","122/200 [=================\u003e............] - ETA: 32s - loss: 1.1405 - accuracy: 0.7136\n","Epoch 00006: accuracy did not improve from 0.79688\n","123/200 [=================\u003e............] - ETA: 31s - loss: 1.1395 - accuracy: 0.7135\n","Epoch 00006: accuracy did not improve from 0.79688\n","124/200 [=================\u003e............] - ETA: 31s - loss: 1.1383 - accuracy: 0.7137\n","Epoch 00006: accuracy did not improve from 0.79688\n","125/200 [=================\u003e............] - ETA: 31s - loss: 1.1389 - accuracy: 0.7138\n","Epoch 00006: accuracy did not improve from 0.79688\n","126/200 [=================\u003e............] - ETA: 30s - loss: 1.1354 - accuracy: 0.7143\n","Epoch 00006: accuracy did not improve from 0.79688\n","127/200 [==================\u003e...........] - ETA: 30s - loss: 1.1329 - accuracy: 0.7146\n","Epoch 00006: accuracy did not improve from 0.79688\n","128/200 [==================\u003e...........] - ETA: 29s - loss: 1.1318 - accuracy: 0.7148\n","Epoch 00006: accuracy did not improve from 0.79688\n","129/200 [==================\u003e...........] - ETA: 29s - loss: 1.1320 - accuracy: 0.7145\n","Epoch 00006: accuracy did not improve from 0.79688\n","130/200 [==================\u003e...........] - ETA: 28s - loss: 1.1334 - accuracy: 0.7142\n","Epoch 00006: accuracy did not improve from 0.79688\n","131/200 [==================\u003e...........] - ETA: 28s - loss: 1.1321 - accuracy: 0.7147\n","Epoch 00006: accuracy did not improve from 0.79688\n","132/200 [==================\u003e...........] - ETA: 28s - loss: 1.1323 - accuracy: 0.7143\n","Epoch 00006: accuracy did not improve from 0.79688\n","133/200 [==================\u003e...........] - ETA: 27s - loss: 1.1324 - accuracy: 0.7139\n","Epoch 00006: accuracy did not improve from 0.79688\n","134/200 [===================\u003e..........] - ETA: 27s - loss: 1.1312 - accuracy: 0.7143\n","Epoch 00006: accuracy did not improve from 0.79688\n","135/200 [===================\u003e..........] - ETA: 26s - loss: 1.1323 - accuracy: 0.7137\n","Epoch 00006: accuracy did not improve from 0.79688\n","136/200 [===================\u003e..........] - ETA: 26s - loss: 1.1300 - accuracy: 0.7142\n","Epoch 00006: accuracy did not improve from 0.79688\n","137/200 [===================\u003e..........] - ETA: 26s - loss: 1.1309 - accuracy: 0.7137\n","Epoch 00006: accuracy did not improve from 0.79688\n","138/200 [===================\u003e..........] - ETA: 25s - loss: 1.1306 - accuracy: 0.7138\n","Epoch 00006: accuracy did not improve from 0.79688\n","139/200 [===================\u003e..........] - ETA: 25s - loss: 1.1313 - accuracy: 0.7136\n","Epoch 00006: accuracy did not improve from 0.79688\n","140/200 [====================\u003e.........] - ETA: 24s - loss: 1.1326 - accuracy: 0.7132\n","Epoch 00006: accuracy did not improve from 0.79688\n","141/200 [====================\u003e.........] - ETA: 24s - loss: 1.1309 - accuracy: 0.7137\n","Epoch 00006: accuracy did not improve from 0.79688\n","142/200 [====================\u003e.........] - ETA: 23s - loss: 1.1324 - accuracy: 0.7132\n","Epoch 00006: accuracy did not improve from 0.79688\n","143/200 [====================\u003e.........] - ETA: 23s - loss: 1.1327 - accuracy: 0.7133\n","Epoch 00006: accuracy did not improve from 0.79688\n","144/200 [====================\u003e.........] - ETA: 23s - loss: 1.1334 - accuracy: 0.7129\n","Epoch 00006: accuracy did not improve from 0.79688\n","145/200 [====================\u003e.........] - ETA: 22s - loss: 1.1328 - accuracy: 0.7129\n","Epoch 00006: accuracy did not improve from 0.79688\n","146/200 [====================\u003e.........] - ETA: 22s - loss: 1.1335 - accuracy: 0.7130\n","Epoch 00006: accuracy did not improve from 0.79688\n","147/200 [=====================\u003e........] - ETA: 21s - loss: 1.1378 - accuracy: 0.7125\n","Epoch 00006: accuracy did not improve from 0.79688\n","148/200 [=====================\u003e........] - ETA: 21s - loss: 1.1396 - accuracy: 0.7120\n","Epoch 00006: accuracy did not improve from 0.79688\n","149/200 [=====================\u003e........] - ETA: 21s - loss: 1.1393 - accuracy: 0.7122\n","Epoch 00006: accuracy did not improve from 0.79688\n","150/200 [=====================\u003e........] - ETA: 20s - loss: 1.1408 - accuracy: 0.7118\n","Epoch 00006: accuracy did not improve from 0.79688\n","151/200 [=====================\u003e........] - ETA: 20s - loss: 1.1401 - accuracy: 0.7117\n","Epoch 00006: accuracy did not improve from 0.79688\n","152/200 [=====================\u003e........] - ETA: 19s - loss: 1.1411 - accuracy: 0.7113\n","Epoch 00006: accuracy did not improve from 0.79688\n","153/200 [=====================\u003e........] - ETA: 19s - loss: 1.1419 - accuracy: 0.7112\n","Epoch 00006: accuracy did not improve from 0.79688\n","154/200 [======================\u003e.......] - ETA: 19s - loss: 1.1437 - accuracy: 0.7108\n","Epoch 00006: accuracy did not improve from 0.79688\n","155/200 [======================\u003e.......] - ETA: 18s - loss: 1.1452 - accuracy: 0.7106\n","Epoch 00006: accuracy did not improve from 0.79688\n","156/200 [======================\u003e.......] - ETA: 18s - loss: 1.1462 - accuracy: 0.7103\n","Epoch 00006: accuracy did not improve from 0.79688\n","157/200 [======================\u003e.......] - ETA: 17s - loss: 1.1451 - accuracy: 0.7105\n","Epoch 00006: accuracy did not improve from 0.79688\n","158/200 [======================\u003e.......] - ETA: 17s - loss: 1.1449 - accuracy: 0.7104\n","Epoch 00006: accuracy did not improve from 0.79688\n","159/200 [======================\u003e.......] - ETA: 16s - loss: 1.1452 - accuracy: 0.7102\n","Epoch 00006: accuracy did not improve from 0.79688\n","160/200 [=======================\u003e......] - ETA: 16s - loss: 1.1449 - accuracy: 0.7104\n","Epoch 00006: accuracy did not improve from 0.79688\n","161/200 [=======================\u003e......] - ETA: 16s - loss: 1.1456 - accuracy: 0.7102\n","Epoch 00006: accuracy did not improve from 0.79688\n","162/200 [=======================\u003e......] - ETA: 15s - loss: 1.1480 - accuracy: 0.7099\n","Epoch 00006: accuracy did not improve from 0.79688\n","163/200 [=======================\u003e......] - ETA: 15s - loss: 1.1483 - accuracy: 0.7099\n","Epoch 00006: accuracy did not improve from 0.79688\n","164/200 [=======================\u003e......] - ETA: 14s - loss: 1.1517 - accuracy: 0.7093\n","Epoch 00006: accuracy did not improve from 0.79688\n","165/200 [=======================\u003e......] - ETA: 14s - loss: 1.1535 - accuracy: 0.7093\n","Epoch 00006: accuracy did not improve from 0.79688\n","166/200 [=======================\u003e......] - ETA: 14s - loss: 1.1542 - accuracy: 0.7094\n","Epoch 00006: accuracy did not improve from 0.79688\n","167/200 [========================\u003e.....] - ETA: 13s - loss: 1.1538 - accuracy: 0.7096\n","Epoch 00006: accuracy did not improve from 0.79688\n","168/200 [========================\u003e.....] - ETA: 13s - loss: 1.1548 - accuracy: 0.7092\n","Epoch 00006: accuracy did not improve from 0.79688\n","169/200 [========================\u003e.....] - ETA: 12s - loss: 1.1547 - accuracy: 0.7091\n","Epoch 00006: accuracy did not improve from 0.79688\n","170/200 [========================\u003e.....] - ETA: 12s - loss: 1.1543 - accuracy: 0.7093\n","Epoch 00006: accuracy did not improve from 0.79688\n","171/200 [========================\u003e.....] - ETA: 12s - loss: 1.1535 - accuracy: 0.7096\n","Epoch 00006: accuracy did not improve from 0.79688\n","172/200 [========================\u003e.....] - ETA: 11s - loss: 1.1519 - accuracy: 0.7100\n","Epoch 00006: accuracy did not improve from 0.79688\n","173/200 [========================\u003e.....] - ETA: 11s - loss: 1.1520 - accuracy: 0.7102\n","Epoch 00006: accuracy did not improve from 0.79688\n","174/200 [=========================\u003e....] - ETA: 10s - loss: 1.1508 - accuracy: 0.7104\n","Epoch 00006: accuracy did not improve from 0.79688\n","175/200 [=========================\u003e....] - ETA: 10s - loss: 1.1526 - accuracy: 0.7099\n","Epoch 00006: accuracy did not improve from 0.79688\n","176/200 [=========================\u003e....] - ETA: 9s - loss: 1.1531 - accuracy: 0.7097 \n","Epoch 00006: accuracy did not improve from 0.79688\n","177/200 [=========================\u003e....] - ETA: 9s - loss: 1.1531 - accuracy: 0.7097\n","Epoch 00006: accuracy did not improve from 0.79688\n","178/200 [=========================\u003e....] - ETA: 9s - loss: 1.1518 - accuracy: 0.7100\n","Epoch 00006: accuracy did not improve from 0.79688\n","179/200 [=========================\u003e....] - ETA: 8s - loss: 1.1513 - accuracy: 0.7102\n","Epoch 00006: accuracy did not improve from 0.79688\n","180/200 [==========================\u003e...] - ETA: 8s - loss: 1.1506 - accuracy: 0.7105\n","Epoch 00006: accuracy did not improve from 0.79688\n","181/200 [==========================\u003e...] - ETA: 7s - loss: 1.1503 - accuracy: 0.7104\n","Epoch 00006: accuracy did not improve from 0.79688\n","182/200 [==========================\u003e...] - ETA: 7s - loss: 1.1493 - accuracy: 0.7107\n","Epoch 00006: accuracy did not improve from 0.79688\n","183/200 [==========================\u003e...] - ETA: 7s - loss: 1.1483 - accuracy: 0.7111\n","Epoch 00006: accuracy did not improve from 0.79688\n","184/200 [==========================\u003e...] - ETA: 6s - loss: 1.1474 - accuracy: 0.7112\n","Epoch 00006: accuracy did not improve from 0.79688\n","185/200 [==========================\u003e...] - ETA: 6s - loss: 1.1477 - accuracy: 0.7111\n","Epoch 00006: accuracy did not improve from 0.79688\n","186/200 [==========================\u003e...] - ETA: 5s - loss: 1.1491 - accuracy: 0.7108\n","Epoch 00006: accuracy did not improve from 0.79688\n","187/200 [===========================\u003e..] - ETA: 5s - loss: 1.1496 - accuracy: 0.7106\n","Epoch 00006: accuracy did not improve from 0.79688\n","188/200 [===========================\u003e..] - ETA: 4s - loss: 1.1516 - accuracy: 0.7101\n","Epoch 00006: accuracy did not improve from 0.79688\n","189/200 [===========================\u003e..] - ETA: 4s - loss: 1.1524 - accuracy: 0.7099\n","Epoch 00006: accuracy did not improve from 0.79688\n","190/200 [===========================\u003e..] - ETA: 4s - loss: 1.1526 - accuracy: 0.7100\n","Epoch 00006: accuracy did not improve from 0.79688\n","191/200 [===========================\u003e..] - ETA: 3s - loss: 1.1531 - accuracy: 0.7102\n","Epoch 00006: accuracy did not improve from 0.79688\n","192/200 [===========================\u003e..] - ETA: 3s - loss: 1.1526 - accuracy: 0.7103\n","Epoch 00006: accuracy did not improve from 0.79688\n","193/200 [===========================\u003e..] - ETA: 2s - loss: 1.1523 - accuracy: 0.7101\n","Epoch 00006: accuracy did not improve from 0.79688\n","194/200 [============================\u003e.] - ETA: 2s - loss: 1.1538 - accuracy: 0.7099\n","Epoch 00006: accuracy did not improve from 0.79688\n","195/200 [============================\u003e.] - ETA: 2s - loss: 1.1540 - accuracy: 0.7099\n","Epoch 00006: accuracy did not improve from 0.79688\n","196/200 [============================\u003e.] - ETA: 1s - loss: 1.1541 - accuracy: 0.7101\n","Epoch 00006: accuracy did not improve from 0.79688\n","197/200 [============================\u003e.] - ETA: 1s - loss: 1.1547 - accuracy: 0.7098\n","Epoch 00006: accuracy did not improve from 0.79688\n","198/200 [============================\u003e.] - ETA: 0s - loss: 1.1551 - accuracy: 0.7093\n","Epoch 00006: accuracy did not improve from 0.79688\n","199/200 [============================\u003e.] - ETA: 0s - loss: 1.1562 - accuracy: 0.7089\n","Epoch 00006: accuracy did not improve from 0.79688\n","200/200 [==============================] - ETA: 0s - loss: 1.1574 - accuracy: 0.7087WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 83s 415ms/step - loss: 1.1574 - accuracy: 0.7087 - lr: 0.0010\n","Epoch 7/10\n","\n","Epoch 00007: accuracy did not improve from 0.79688\n","  1/200 [..............................] - ETA: 2:08 - loss: 1.1383 - accuracy: 0.7344\n","Epoch 00007: accuracy did not improve from 0.79688\n","  2/200 [..............................] - ETA: 1:16 - loss: 1.0411 - accuracy: 0.7422\n","Epoch 00007: accuracy did not improve from 0.79688\n","  3/200 [..............................] - ETA: 1:18 - loss: 1.0151 - accuracy: 0.7500\n","Epoch 00007: accuracy did not improve from 0.79688\n","  4/200 [..............................] - ETA: 1:19 - loss: 1.0290 - accuracy: 0.7539\n","Epoch 00007: accuracy did not improve from 0.79688\n","  5/200 [..............................] - ETA: 1:19 - loss: 1.0547 - accuracy: 0.7531\n","Epoch 00007: accuracy did not improve from 0.79688\n","  6/200 [..............................] - ETA: 1:19 - loss: 1.0642 - accuracy: 0.7474\n","Epoch 00007: accuracy did not improve from 0.79688\n","  7/200 [\u003e.............................] - ETA: 1:18 - loss: 1.0351 - accuracy: 0.7567\n","Epoch 00007: accuracy did not improve from 0.79688\n","  8/200 [\u003e.............................] - ETA: 1:18 - loss: 1.1083 - accuracy: 0.7344\n","Epoch 00007: accuracy did not improve from 0.79688\n","  9/200 [\u003e.............................] - ETA: 1:17 - loss: 1.1390 - accuracy: 0.7292\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 10/200 [\u003e.............................] - ETA: 1:17 - loss: 1.1396 - accuracy: 0.7266\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 11/200 [\u003e.............................] - ETA: 1:17 - loss: 1.1467 - accuracy: 0.7202\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 12/200 [\u003e.............................] - ETA: 1:18 - loss: 1.1493 - accuracy: 0.7188\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 13/200 [\u003e.............................] - ETA: 1:18 - loss: 1.1589 - accuracy: 0.7139\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 14/200 [=\u003e............................] - ETA: 1:17 - loss: 1.1533 - accuracy: 0.7132\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 15/200 [=\u003e............................] - ETA: 1:17 - loss: 1.1446 - accuracy: 0.7188\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 16/200 [=\u003e............................] - ETA: 1:16 - loss: 1.1475 - accuracy: 0.7148\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 17/200 [=\u003e............................] - ETA: 1:16 - loss: 1.1413 - accuracy: 0.7160\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 18/200 [=\u003e............................] - ETA: 1:15 - loss: 1.1466 - accuracy: 0.7109\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 19/200 [=\u003e............................] - ETA: 1:15 - loss: 1.1495 - accuracy: 0.7113\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 20/200 [==\u003e...........................] - ETA: 1:15 - loss: 1.1436 - accuracy: 0.7102\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 21/200 [==\u003e...........................] - ETA: 1:15 - loss: 1.1402 - accuracy: 0.7135\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 22/200 [==\u003e...........................] - ETA: 1:14 - loss: 1.1377 - accuracy: 0.7152\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 23/200 [==\u003e...........................] - ETA: 1:14 - loss: 1.1427 - accuracy: 0.7133\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 24/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.1509 - accuracy: 0.7116\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 25/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.1449 - accuracy: 0.7106\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 26/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.1380 - accuracy: 0.7121\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 27/200 [===\u003e..........................] - ETA: 1:12 - loss: 1.1340 - accuracy: 0.7135\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 28/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.1372 - accuracy: 0.7098\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 29/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.1358 - accuracy: 0.7091\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 30/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.1350 - accuracy: 0.7078\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 31/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.1275 - accuracy: 0.7107\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 32/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.1264 - accuracy: 0.7119\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 33/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.1304 - accuracy: 0.7116\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 34/200 [====\u003e.........................] - ETA: 1:09 - loss: 1.1291 - accuracy: 0.7105\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 35/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.1391 - accuracy: 0.7094\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 36/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.1448 - accuracy: 0.7088\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 37/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.1470 - accuracy: 0.7082\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 38/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1525 - accuracy: 0.7068\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 39/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1612 - accuracy: 0.7059\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 40/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1603 - accuracy: 0.7063\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 41/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1665 - accuracy: 0.7043\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 42/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1633 - accuracy: 0.7057\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 43/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1696 - accuracy: 0.7035\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 44/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1711 - accuracy: 0.7031\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 45/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1722 - accuracy: 0.7035\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 46/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1680 - accuracy: 0.7045\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 47/200 [======\u003e.......................] - ETA: 1:04 - loss: 1.1595 - accuracy: 0.7061\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 48/200 [======\u003e.......................] - ETA: 1:04 - loss: 1.1595 - accuracy: 0.7067\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 49/200 [======\u003e.......................] - ETA: 1:03 - loss: 1.1645 - accuracy: 0.7050\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 50/200 [======\u003e.......................] - ETA: 1:03 - loss: 1.1679 - accuracy: 0.7044\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 51/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1704 - accuracy: 0.7037\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 52/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1699 - accuracy: 0.7037\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 53/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1656 - accuracy: 0.7052\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 54/200 [=======\u003e......................] - ETA: 1:01 - loss: 1.1635 - accuracy: 0.7052\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 55/200 [=======\u003e......................] - ETA: 1:01 - loss: 1.1614 - accuracy: 0.7057\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 56/200 [=======\u003e......................] - ETA: 1:00 - loss: 1.1593 - accuracy: 0.7062\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 57/200 [=======\u003e......................] - ETA: 1:00 - loss: 1.1650 - accuracy: 0.7053\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 58/200 [=======\u003e......................] - ETA: 59s - loss: 1.1674 - accuracy: 0.7045 \n","Epoch 00007: accuracy did not improve from 0.79688\n"," 59/200 [=======\u003e......................] - ETA: 59s - loss: 1.1667 - accuracy: 0.7042\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 60/200 [========\u003e.....................] - ETA: 58s - loss: 1.1692 - accuracy: 0.7039\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 61/200 [========\u003e.....................] - ETA: 58s - loss: 1.1659 - accuracy: 0.7044\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 62/200 [========\u003e.....................] - ETA: 58s - loss: 1.1617 - accuracy: 0.7056\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 63/200 [========\u003e.....................] - ETA: 57s - loss: 1.1560 - accuracy: 0.7071\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 64/200 [========\u003e.....................] - ETA: 57s - loss: 1.1621 - accuracy: 0.7058\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 65/200 [========\u003e.....................] - ETA: 56s - loss: 1.1569 - accuracy: 0.7075\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 66/200 [========\u003e.....................] - ETA: 56s - loss: 1.1644 - accuracy: 0.7055\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 67/200 [=========\u003e....................] - ETA: 55s - loss: 1.1622 - accuracy: 0.7059\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 68/200 [=========\u003e....................] - ETA: 55s - loss: 1.1666 - accuracy: 0.7045\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 69/200 [=========\u003e....................] - ETA: 55s - loss: 1.1702 - accuracy: 0.7040\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 70/200 [=========\u003e....................] - ETA: 54s - loss: 1.1738 - accuracy: 0.7036\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 71/200 [=========\u003e....................] - ETA: 54s - loss: 1.1693 - accuracy: 0.7042\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 72/200 [=========\u003e....................] - ETA: 54s - loss: 1.1676 - accuracy: 0.7042\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 73/200 [=========\u003e....................] - ETA: 53s - loss: 1.1655 - accuracy: 0.7044\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 74/200 [==========\u003e...................] - ETA: 53s - loss: 1.1659 - accuracy: 0.7040\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 75/200 [==========\u003e...................] - ETA: 52s - loss: 1.1688 - accuracy: 0.7031\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 76/200 [==========\u003e...................] - ETA: 52s - loss: 1.1676 - accuracy: 0.7031\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 77/200 [==========\u003e...................] - ETA: 51s - loss: 1.1700 - accuracy: 0.7035\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 78/200 [==========\u003e...................] - ETA: 51s - loss: 1.1702 - accuracy: 0.7035\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 79/200 [==========\u003e...................] - ETA: 51s - loss: 1.1698 - accuracy: 0.7045\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 80/200 [===========\u003e..................] - ETA: 50s - loss: 1.1722 - accuracy: 0.7035\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 81/200 [===========\u003e..................] - ETA: 50s - loss: 1.1753 - accuracy: 0.7027\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 82/200 [===========\u003e..................] - ETA: 49s - loss: 1.1719 - accuracy: 0.7041\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 83/200 [===========\u003e..................] - ETA: 49s - loss: 1.1692 - accuracy: 0.7050\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 84/200 [===========\u003e..................] - ETA: 48s - loss: 1.1705 - accuracy: 0.7050\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 85/200 [===========\u003e..................] - ETA: 48s - loss: 1.1697 - accuracy: 0.7051\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 86/200 [===========\u003e..................] - ETA: 48s - loss: 1.1687 - accuracy: 0.7051\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 87/200 [============\u003e.................] - ETA: 47s - loss: 1.1702 - accuracy: 0.7046\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 88/200 [============\u003e.................] - ETA: 47s - loss: 1.1708 - accuracy: 0.7044\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 89/200 [============\u003e.................] - ETA: 46s - loss: 1.1719 - accuracy: 0.7042\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 90/200 [============\u003e.................] - ETA: 46s - loss: 1.1722 - accuracy: 0.7043\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 91/200 [============\u003e.................] - ETA: 45s - loss: 1.1725 - accuracy: 0.7048\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 92/200 [============\u003e.................] - ETA: 45s - loss: 1.1698 - accuracy: 0.7060\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 93/200 [============\u003e.................] - ETA: 45s - loss: 1.1707 - accuracy: 0.7055\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 94/200 [=============\u003e................] - ETA: 44s - loss: 1.1692 - accuracy: 0.7056\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 95/200 [=============\u003e................] - ETA: 44s - loss: 1.1710 - accuracy: 0.7053\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 96/200 [=============\u003e................] - ETA: 43s - loss: 1.1710 - accuracy: 0.7049\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 97/200 [=============\u003e................] - ETA: 43s - loss: 1.1695 - accuracy: 0.7055\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 98/200 [=============\u003e................] - ETA: 42s - loss: 1.1678 - accuracy: 0.7065\n","Epoch 00007: accuracy did not improve from 0.79688\n"," 99/200 [=============\u003e................] - ETA: 42s - loss: 1.1701 - accuracy: 0.7063\n","Epoch 00007: accuracy did not improve from 0.79688\n","100/200 [==============\u003e...............] - ETA: 41s - loss: 1.1689 - accuracy: 0.7069\n","Epoch 00007: accuracy did not improve from 0.79688\n","101/200 [==============\u003e...............] - ETA: 41s - loss: 1.1720 - accuracy: 0.7062\n","Epoch 00007: accuracy did not improve from 0.79688\n","102/200 [==============\u003e...............] - ETA: 41s - loss: 1.1700 - accuracy: 0.7071\n","Epoch 00007: accuracy did not improve from 0.79688\n","103/200 [==============\u003e...............] - ETA: 40s - loss: 1.1703 - accuracy: 0.7075\n","Epoch 00007: accuracy did not improve from 0.79688\n","104/200 [==============\u003e...............] - ETA: 40s - loss: 1.1699 - accuracy: 0.7073\n","Epoch 00007: accuracy did not improve from 0.79688\n","105/200 [==============\u003e...............] - ETA: 39s - loss: 1.1709 - accuracy: 0.7071\n","Epoch 00007: accuracy did not improve from 0.79688\n","106/200 [==============\u003e...............] - ETA: 39s - loss: 1.1709 - accuracy: 0.7067\n","Epoch 00007: accuracy did not improve from 0.79688\n","107/200 [===============\u003e..............] - ETA: 39s - loss: 1.1708 - accuracy: 0.7069\n","Epoch 00007: accuracy did not improve from 0.79688\n","108/200 [===============\u003e..............] - ETA: 38s - loss: 1.1703 - accuracy: 0.7069\n","Epoch 00007: accuracy did not improve from 0.79688\n","109/200 [===============\u003e..............] - ETA: 38s - loss: 1.1693 - accuracy: 0.7071\n","Epoch 00007: accuracy did not improve from 0.79688\n","110/200 [===============\u003e..............] - ETA: 37s - loss: 1.1698 - accuracy: 0.7070\n","Epoch 00007: accuracy did not improve from 0.79688\n","111/200 [===============\u003e..............] - ETA: 37s - loss: 1.1725 - accuracy: 0.7057\n","Epoch 00007: accuracy did not improve from 0.79688\n","112/200 [===============\u003e..............] - ETA: 36s - loss: 1.1757 - accuracy: 0.7041\n","Epoch 00007: accuracy did not improve from 0.79688\n","113/200 [===============\u003e..............] - ETA: 36s - loss: 1.1754 - accuracy: 0.7046\n","Epoch 00007: accuracy did not improve from 0.79688\n","114/200 [================\u003e.............] - ETA: 36s - loss: 1.1743 - accuracy: 0.7052\n","Epoch 00007: accuracy did not improve from 0.79688\n","115/200 [================\u003e.............] - ETA: 35s - loss: 1.1737 - accuracy: 0.7052\n","Epoch 00007: accuracy did not improve from 0.79688\n","116/200 [================\u003e.............] - ETA: 35s - loss: 1.1766 - accuracy: 0.7045\n","Epoch 00007: accuracy did not improve from 0.79688\n","117/200 [================\u003e.............] - ETA: 34s - loss: 1.1759 - accuracy: 0.7047\n","Epoch 00007: accuracy did not improve from 0.79688\n","118/200 [================\u003e.............] - ETA: 34s - loss: 1.1746 - accuracy: 0.7050\n","Epoch 00007: accuracy did not improve from 0.79688\n","119/200 [================\u003e.............] - ETA: 34s - loss: 1.1725 - accuracy: 0.7052\n","Epoch 00007: accuracy did not improve from 0.79688\n","120/200 [=================\u003e............] - ETA: 33s - loss: 1.1732 - accuracy: 0.7056\n","Epoch 00007: accuracy did not improve from 0.79688\n","121/200 [=================\u003e............] - ETA: 33s - loss: 1.1710 - accuracy: 0.7065\n","Epoch 00007: accuracy did not improve from 0.79688\n","122/200 [=================\u003e............] - ETA: 32s - loss: 1.1730 - accuracy: 0.7059\n","Epoch 00007: accuracy did not improve from 0.79688\n","123/200 [=================\u003e............] - ETA: 32s - loss: 1.1721 - accuracy: 0.7066\n","Epoch 00007: accuracy did not improve from 0.79688\n","124/200 [=================\u003e............] - ETA: 31s - loss: 1.1744 - accuracy: 0.7059\n","Epoch 00007: accuracy did not improve from 0.79688\n","125/200 [=================\u003e............] - ETA: 31s - loss: 1.1744 - accuracy: 0.7055\n","Epoch 00007: accuracy did not improve from 0.79688\n","126/200 [=================\u003e............] - ETA: 31s - loss: 1.1767 - accuracy: 0.7049\n","Epoch 00007: accuracy did not improve from 0.79688\n","127/200 [==================\u003e...........] - ETA: 30s - loss: 1.1742 - accuracy: 0.7053\n","Epoch 00007: accuracy did not improve from 0.79688\n","128/200 [==================\u003e...........] - ETA: 30s - loss: 1.1731 - accuracy: 0.7062\n","Epoch 00007: accuracy did not improve from 0.79688\n","129/200 [==================\u003e...........] - ETA: 29s - loss: 1.1702 - accuracy: 0.7071\n","Epoch 00007: accuracy did not improve from 0.79688\n","130/200 [==================\u003e...........] - ETA: 29s - loss: 1.1692 - accuracy: 0.7076\n","Epoch 00007: accuracy did not improve from 0.79688\n","131/200 [==================\u003e...........] - ETA: 28s - loss: 1.1693 - accuracy: 0.7072\n","Epoch 00007: accuracy did not improve from 0.79688\n","132/200 [==================\u003e...........] - ETA: 28s - loss: 1.1713 - accuracy: 0.7067\n","Epoch 00007: accuracy did not improve from 0.79688\n","133/200 [==================\u003e...........] - ETA: 28s - loss: 1.1709 - accuracy: 0.7069\n","Epoch 00007: accuracy did not improve from 0.79688\n","134/200 [===================\u003e..........] - ETA: 27s - loss: 1.1704 - accuracy: 0.7070\n","Epoch 00007: accuracy did not improve from 0.79688\n","135/200 [===================\u003e..........] - ETA: 27s - loss: 1.1701 - accuracy: 0.7064\n","Epoch 00007: accuracy did not improve from 0.79688\n","136/200 [===================\u003e..........] - ETA: 26s - loss: 1.1701 - accuracy: 0.7055\n","Epoch 00007: accuracy did not improve from 0.79688\n","137/200 [===================\u003e..........] - ETA: 26s - loss: 1.1681 - accuracy: 0.7061\n","Epoch 00007: accuracy did not improve from 0.79688\n","138/200 [===================\u003e..........] - ETA: 26s - loss: 1.1700 - accuracy: 0.7057\n","Epoch 00007: accuracy did not improve from 0.79688\n","139/200 [===================\u003e..........] - ETA: 25s - loss: 1.1690 - accuracy: 0.7055\n","Epoch 00007: accuracy did not improve from 0.79688\n","140/200 [====================\u003e.........] - ETA: 25s - loss: 1.1693 - accuracy: 0.7054\n","Epoch 00007: accuracy did not improve from 0.79688\n","141/200 [====================\u003e.........] - ETA: 24s - loss: 1.1675 - accuracy: 0.7057\n","Epoch 00007: accuracy did not improve from 0.79688\n","142/200 [====================\u003e.........] - ETA: 24s - loss: 1.1688 - accuracy: 0.7053\n","Epoch 00007: accuracy did not improve from 0.79688\n","143/200 [====================\u003e.........] - ETA: 23s - loss: 1.1690 - accuracy: 0.7049\n","Epoch 00007: accuracy did not improve from 0.79688\n","144/200 [====================\u003e.........] - ETA: 23s - loss: 1.1686 - accuracy: 0.7053\n","Epoch 00007: accuracy did not improve from 0.79688\n","145/200 [====================\u003e.........] - ETA: 23s - loss: 1.1673 - accuracy: 0.7053\n","Epoch 00007: accuracy did not improve from 0.79688\n","146/200 [====================\u003e.........] - ETA: 22s - loss: 1.1675 - accuracy: 0.7052\n","Epoch 00007: accuracy did not improve from 0.79688\n","147/200 [=====================\u003e........] - ETA: 22s - loss: 1.1665 - accuracy: 0.7051\n","Epoch 00007: accuracy did not improve from 0.79688\n","148/200 [=====================\u003e........] - ETA: 21s - loss: 1.1681 - accuracy: 0.7047\n","Epoch 00007: accuracy did not improve from 0.79688\n","149/200 [=====================\u003e........] - ETA: 21s - loss: 1.1691 - accuracy: 0.7047\n","Epoch 00007: accuracy did not improve from 0.79688\n","150/200 [=====================\u003e........] - ETA: 21s - loss: 1.1689 - accuracy: 0.7050\n","Epoch 00007: accuracy did not improve from 0.79688\n","151/200 [=====================\u003e........] - ETA: 20s - loss: 1.1680 - accuracy: 0.7052\n","Epoch 00007: accuracy did not improve from 0.79688\n","152/200 [=====================\u003e........] - ETA: 20s - loss: 1.1677 - accuracy: 0.7051\n","Epoch 00007: accuracy did not improve from 0.79688\n","153/200 [=====================\u003e........] - ETA: 19s - loss: 1.1675 - accuracy: 0.7051\n","Epoch 00007: accuracy did not improve from 0.79688\n","154/200 [======================\u003e.......] - ETA: 19s - loss: 1.1665 - accuracy: 0.7053\n","Epoch 00007: accuracy did not improve from 0.79688\n","155/200 [======================\u003e.......] - ETA: 18s - loss: 1.1668 - accuracy: 0.7052\n","Epoch 00007: accuracy did not improve from 0.79688\n","156/200 [======================\u003e.......] - ETA: 18s - loss: 1.1673 - accuracy: 0.7048\n","Epoch 00007: accuracy did not improve from 0.79688\n","157/200 [======================\u003e.......] - ETA: 18s - loss: 1.1674 - accuracy: 0.7049\n","Epoch 00007: accuracy did not improve from 0.79688\n","158/200 [======================\u003e.......] - ETA: 17s - loss: 1.1705 - accuracy: 0.7045\n","Epoch 00007: accuracy did not improve from 0.79688\n","159/200 [======================\u003e.......] - ETA: 17s - loss: 1.1704 - accuracy: 0.7048\n","Epoch 00007: accuracy did not improve from 0.79688\n","160/200 [=======================\u003e......] - ETA: 16s - loss: 1.1744 - accuracy: 0.7038\n","Epoch 00007: accuracy did not improve from 0.79688\n","161/200 [=======================\u003e......] - ETA: 16s - loss: 1.1751 - accuracy: 0.7035\n","Epoch 00007: accuracy did not improve from 0.79688\n","162/200 [=======================\u003e......] - ETA: 15s - loss: 1.1760 - accuracy: 0.7033\n","Epoch 00007: accuracy did not improve from 0.79688\n","163/200 [=======================\u003e......] - ETA: 15s - loss: 1.1768 - accuracy: 0.7031\n","Epoch 00007: accuracy did not improve from 0.79688\n","164/200 [=======================\u003e......] - ETA: 15s - loss: 1.1775 - accuracy: 0.7027\n","Epoch 00007: accuracy did not improve from 0.79688\n","165/200 [=======================\u003e......] - ETA: 14s - loss: 1.1783 - accuracy: 0.7027\n","Epoch 00007: accuracy did not improve from 0.79688\n","166/200 [=======================\u003e......] - ETA: 14s - loss: 1.1787 - accuracy: 0.7024\n","Epoch 00007: accuracy did not improve from 0.79688\n","167/200 [========================\u003e.....] - ETA: 13s - loss: 1.1785 - accuracy: 0.7025\n","Epoch 00007: accuracy did not improve from 0.79688\n","168/200 [========================\u003e.....] - ETA: 13s - loss: 1.1797 - accuracy: 0.7025\n","Epoch 00007: accuracy did not improve from 0.79688\n","169/200 [========================\u003e.....] - ETA: 13s - loss: 1.1799 - accuracy: 0.7021\n","Epoch 00007: accuracy did not improve from 0.79688\n","170/200 [========================\u003e.....] - ETA: 12s - loss: 1.1799 - accuracy: 0.7023\n","Epoch 00007: accuracy did not improve from 0.79688\n","171/200 [========================\u003e.....] - ETA: 12s - loss: 1.1786 - accuracy: 0.7025\n","Epoch 00007: accuracy did not improve from 0.79688\n","172/200 [========================\u003e.....] - ETA: 11s - loss: 1.1776 - accuracy: 0.7031\n","Epoch 00007: accuracy did not improve from 0.79688\n","173/200 [========================\u003e.....] - ETA: 11s - loss: 1.1766 - accuracy: 0.7031\n","Epoch 00007: accuracy did not improve from 0.79688\n","174/200 [=========================\u003e....] - ETA: 10s - loss: 1.1760 - accuracy: 0.7031\n","Epoch 00007: accuracy did not improve from 0.79688\n","175/200 [=========================\u003e....] - ETA: 10s - loss: 1.1764 - accuracy: 0.7028\n","Epoch 00007: accuracy did not improve from 0.79688\n","176/200 [=========================\u003e....] - ETA: 10s - loss: 1.1752 - accuracy: 0.7031\n","Epoch 00007: accuracy did not improve from 0.79688\n","177/200 [=========================\u003e....] - ETA: 9s - loss: 1.1749 - accuracy: 0.7036 \n","Epoch 00007: accuracy did not improve from 0.79688\n","178/200 [=========================\u003e....] - ETA: 9s - loss: 1.1741 - accuracy: 0.7039\n","Epoch 00007: accuracy did not improve from 0.79688\n","179/200 [=========================\u003e....] - ETA: 8s - loss: 1.1753 - accuracy: 0.7036\n","Epoch 00007: accuracy did not improve from 0.79688\n","180/200 [==========================\u003e...] - ETA: 8s - loss: 1.1761 - accuracy: 0.7033\n","Epoch 00007: accuracy did not improve from 0.79688\n","181/200 [==========================\u003e...] - ETA: 8s - loss: 1.1754 - accuracy: 0.7037\n","Epoch 00007: accuracy did not improve from 0.79688\n","182/200 [==========================\u003e...] - ETA: 7s - loss: 1.1757 - accuracy: 0.7037\n","Epoch 00007: accuracy did not improve from 0.79688\n","183/200 [==========================\u003e...] - ETA: 7s - loss: 1.1746 - accuracy: 0.7039\n","Epoch 00007: accuracy did not improve from 0.79688\n","184/200 [==========================\u003e...] - ETA: 6s - loss: 1.1740 - accuracy: 0.7037\n","Epoch 00007: accuracy did not improve from 0.79688\n","185/200 [==========================\u003e...] - ETA: 6s - loss: 1.1749 - accuracy: 0.7031\n","Epoch 00007: accuracy did not improve from 0.79688\n","186/200 [==========================\u003e...] - ETA: 5s - loss: 1.1757 - accuracy: 0.7030\n","Epoch 00007: accuracy did not improve from 0.79688\n","187/200 [===========================\u003e..] - ETA: 5s - loss: 1.1742 - accuracy: 0.7033\n","Epoch 00007: accuracy did not improve from 0.79688\n","188/200 [===========================\u003e..] - ETA: 5s - loss: 1.1725 - accuracy: 0.7036\n","Epoch 00007: accuracy did not improve from 0.79688\n","189/200 [===========================\u003e..] - ETA: 4s - loss: 1.1729 - accuracy: 0.7035\n","Epoch 00007: accuracy did not improve from 0.79688\n","190/200 [===========================\u003e..] - ETA: 4s - loss: 1.1738 - accuracy: 0.7034\n","Epoch 00007: accuracy did not improve from 0.79688\n","191/200 [===========================\u003e..] - ETA: 3s - loss: 1.1733 - accuracy: 0.7035\n","Epoch 00007: accuracy did not improve from 0.79688\n","192/200 [===========================\u003e..] - ETA: 3s - loss: 1.1725 - accuracy: 0.7039\n","Epoch 00007: accuracy did not improve from 0.79688\n","193/200 [===========================\u003e..] - ETA: 2s - loss: 1.1734 - accuracy: 0.7036\n","Epoch 00007: accuracy did not improve from 0.79688\n","194/200 [============================\u003e.] - ETA: 2s - loss: 1.1729 - accuracy: 0.7037\n","Epoch 00007: accuracy did not improve from 0.79688\n","195/200 [============================\u003e.] - ETA: 2s - loss: 1.1732 - accuracy: 0.7035\n","Epoch 00007: accuracy did not improve from 0.79688\n","196/200 [============================\u003e.] - ETA: 1s - loss: 1.1727 - accuracy: 0.7035\n","Epoch 00007: accuracy did not improve from 0.79688\n","197/200 [============================\u003e.] - ETA: 1s - loss: 1.1726 - accuracy: 0.7037\n","Epoch 00007: accuracy did not improve from 0.79688\n","198/200 [============================\u003e.] - ETA: 0s - loss: 1.1722 - accuracy: 0.7038\n","Epoch 00007: accuracy did not improve from 0.79688\n","199/200 [============================\u003e.] - ETA: 0s - loss: 1.1725 - accuracy: 0.7038\n","Epoch 00007: accuracy did not improve from 0.79688\n","200/200 [==============================] - ETA: 0s - loss: 1.1725 - accuracy: 0.7038WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 84s 421ms/step - loss: 1.1725 - accuracy: 0.7038 - lr: 0.0010\n","Epoch 8/10\n","\n","Epoch 00008: accuracy did not improve from 0.79688\n","  1/200 [..............................] - ETA: 2:05 - loss: 1.3346 - accuracy: 0.6406\n","Epoch 00008: accuracy did not improve from 0.79688\n","  2/200 [..............................] - ETA: 1:20 - loss: 1.2623 - accuracy: 0.6797\n","Epoch 00008: accuracy did not improve from 0.79688\n","  3/200 [..............................] - ETA: 1:19 - loss: 1.1743 - accuracy: 0.7083\n","Epoch 00008: accuracy did not improve from 0.79688\n","  4/200 [..............................] - ETA: 1:15 - loss: 1.1059 - accuracy: 0.7344\n","Epoch 00008: accuracy did not improve from 0.79688\n","  5/200 [..............................] - ETA: 1:16 - loss: 1.0990 - accuracy: 0.7344\n","Epoch 00008: accuracy did not improve from 0.79688\n","  6/200 [..............................] - ETA: 1:16 - loss: 1.1019 - accuracy: 0.7344\n","Epoch 00008: accuracy did not improve from 0.79688\n","  7/200 [\u003e.............................] - ETA: 1:16 - loss: 1.0785 - accuracy: 0.7344\n","Epoch 00008: accuracy did not improve from 0.79688\n","  8/200 [\u003e.............................] - ETA: 1:17 - loss: 1.1023 - accuracy: 0.7305\n","Epoch 00008: accuracy did not improve from 0.79688\n","  9/200 [\u003e.............................] - ETA: 1:16 - loss: 1.0835 - accuracy: 0.7361\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 10/200 [\u003e.............................] - ETA: 1:16 - loss: 1.0917 - accuracy: 0.7375\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 11/200 [\u003e.............................] - ETA: 1:16 - loss: 1.0889 - accuracy: 0.7330\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 12/200 [\u003e.............................] - ETA: 1:17 - loss: 1.0902 - accuracy: 0.7331\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 13/200 [\u003e.............................] - ETA: 1:16 - loss: 1.0848 - accuracy: 0.7284\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 14/200 [=\u003e............................] - ETA: 1:16 - loss: 1.1012 - accuracy: 0.7232\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 15/200 [=\u003e............................] - ETA: 1:16 - loss: 1.1002 - accuracy: 0.7229\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 16/200 [=\u003e............................] - ETA: 1:16 - loss: 1.1297 - accuracy: 0.7139\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 17/200 [=\u003e............................] - ETA: 1:15 - loss: 1.1349 - accuracy: 0.7114\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 18/200 [=\u003e............................] - ETA: 1:15 - loss: 1.1337 - accuracy: 0.7101\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 19/200 [=\u003e............................] - ETA: 1:15 - loss: 1.1250 - accuracy: 0.7138\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 20/200 [==\u003e...........................] - ETA: 1:14 - loss: 1.1149 - accuracy: 0.7188\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 21/200 [==\u003e...........................] - ETA: 1:14 - loss: 1.1031 - accuracy: 0.7202\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 22/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.0970 - accuracy: 0.7209\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 23/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.1062 - accuracy: 0.7194\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 24/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.0993 - accuracy: 0.7201\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 25/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.0823 - accuracy: 0.7250\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 26/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.0916 - accuracy: 0.7236\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 27/200 [===\u003e..........................] - ETA: 1:12 - loss: 1.0920 - accuracy: 0.7222\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 28/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.0938 - accuracy: 0.7215\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 29/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.0928 - accuracy: 0.7214\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 30/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.0990 - accuracy: 0.7198\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 31/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.1041 - accuracy: 0.7198\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 32/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.1119 - accuracy: 0.7178\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 33/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.1134 - accuracy: 0.7164\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 34/200 [====\u003e.........................] - ETA: 1:09 - loss: 1.1174 - accuracy: 0.7165\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 35/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.1136 - accuracy: 0.7170\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 36/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.1133 - accuracy: 0.7170\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 37/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.1160 - accuracy: 0.7171\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 38/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1238 - accuracy: 0.7167\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 39/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.1222 - accuracy: 0.7163\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 40/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1264 - accuracy: 0.7156\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 41/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1204 - accuracy: 0.7153\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 42/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1296 - accuracy: 0.7128\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 43/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1358 - accuracy: 0.7108\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 44/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1280 - accuracy: 0.7131\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 45/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1232 - accuracy: 0.7146\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 46/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1182 - accuracy: 0.7160\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 47/200 [======\u003e.......................] - ETA: 1:03 - loss: 1.1233 - accuracy: 0.7151\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 48/200 [======\u003e.......................] - ETA: 1:03 - loss: 1.1170 - accuracy: 0.7161\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 49/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1222 - accuracy: 0.7143\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 50/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1189 - accuracy: 0.7153\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 51/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1177 - accuracy: 0.7154\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 52/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1157 - accuracy: 0.7166\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 53/200 [======\u003e.......................] - ETA: 1:00 - loss: 1.1155 - accuracy: 0.7170\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 54/200 [=======\u003e......................] - ETA: 1:00 - loss: 1.1163 - accuracy: 0.7167\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 55/200 [=======\u003e......................] - ETA: 1:00 - loss: 1.1155 - accuracy: 0.7165\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 56/200 [=======\u003e......................] - ETA: 59s - loss: 1.1185 - accuracy: 0.7160 \n","Epoch 00008: accuracy did not improve from 0.79688\n"," 57/200 [=======\u003e......................] - ETA: 59s - loss: 1.1202 - accuracy: 0.7160\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 58/200 [=======\u003e......................] - ETA: 58s - loss: 1.1178 - accuracy: 0.7169\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 59/200 [=======\u003e......................] - ETA: 58s - loss: 1.1155 - accuracy: 0.7166\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 60/200 [========\u003e.....................] - ETA: 58s - loss: 1.1143 - accuracy: 0.7167\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 61/200 [========\u003e.....................] - ETA: 57s - loss: 1.1110 - accuracy: 0.7170\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 62/200 [========\u003e.....................] - ETA: 57s - loss: 1.1045 - accuracy: 0.7185\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 63/200 [========\u003e.....................] - ETA: 56s - loss: 1.1022 - accuracy: 0.7188\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 64/200 [========\u003e.....................] - ETA: 56s - loss: 1.0990 - accuracy: 0.7197\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 65/200 [========\u003e.....................] - ETA: 55s - loss: 1.1010 - accuracy: 0.7195\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 66/200 [========\u003e.....................] - ETA: 55s - loss: 1.1036 - accuracy: 0.7192\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 67/200 [=========\u003e....................] - ETA: 54s - loss: 1.1013 - accuracy: 0.7199\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 68/200 [=========\u003e....................] - ETA: 54s - loss: 1.0993 - accuracy: 0.7206\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 69/200 [=========\u003e....................] - ETA: 54s - loss: 1.0976 - accuracy: 0.7212\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 70/200 [=========\u003e....................] - ETA: 53s - loss: 1.0982 - accuracy: 0.7214\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 71/200 [=========\u003e....................] - ETA: 53s - loss: 1.1004 - accuracy: 0.7205\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 72/200 [=========\u003e....................] - ETA: 52s - loss: 1.0995 - accuracy: 0.7211\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 73/200 [=========\u003e....................] - ETA: 52s - loss: 1.0960 - accuracy: 0.7222\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 74/200 [==========\u003e...................] - ETA: 52s - loss: 1.0982 - accuracy: 0.7219\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 75/200 [==========\u003e...................] - ETA: 51s - loss: 1.0966 - accuracy: 0.7217\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 76/200 [==========\u003e...................] - ETA: 51s - loss: 1.0924 - accuracy: 0.7233\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 77/200 [==========\u003e...................] - ETA: 50s - loss: 1.0915 - accuracy: 0.7230\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 78/200 [==========\u003e...................] - ETA: 50s - loss: 1.0861 - accuracy: 0.7246\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 79/200 [==========\u003e...................] - ETA: 49s - loss: 1.0872 - accuracy: 0.7239\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 80/200 [===========\u003e..................] - ETA: 49s - loss: 1.0871 - accuracy: 0.7242\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 81/200 [===========\u003e..................] - ETA: 49s - loss: 1.0903 - accuracy: 0.7230\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 82/200 [===========\u003e..................] - ETA: 48s - loss: 1.0924 - accuracy: 0.7218\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 83/200 [===========\u003e..................] - ETA: 48s - loss: 1.0966 - accuracy: 0.7212\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 84/200 [===========\u003e..................] - ETA: 48s - loss: 1.0984 - accuracy: 0.7206\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 85/200 [===========\u003e..................] - ETA: 47s - loss: 1.1008 - accuracy: 0.7195\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 86/200 [===========\u003e..................] - ETA: 47s - loss: 1.1012 - accuracy: 0.7197\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 87/200 [============\u003e.................] - ETA: 46s - loss: 1.1040 - accuracy: 0.7193\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 88/200 [============\u003e.................] - ETA: 46s - loss: 1.1033 - accuracy: 0.7191\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 89/200 [============\u003e.................] - ETA: 46s - loss: 1.1027 - accuracy: 0.7191\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 90/200 [============\u003e.................] - ETA: 45s - loss: 1.1007 - accuracy: 0.7194\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 91/200 [============\u003e.................] - ETA: 45s - loss: 1.1021 - accuracy: 0.7189\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 92/200 [============\u003e.................] - ETA: 44s - loss: 1.1030 - accuracy: 0.7189\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 93/200 [============\u003e.................] - ETA: 44s - loss: 1.1025 - accuracy: 0.7191\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 94/200 [=============\u003e................] - ETA: 43s - loss: 1.1049 - accuracy: 0.7184\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 95/200 [=============\u003e................] - ETA: 43s - loss: 1.1086 - accuracy: 0.7179\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 96/200 [=============\u003e................] - ETA: 43s - loss: 1.1100 - accuracy: 0.7174\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 97/200 [=============\u003e................] - ETA: 42s - loss: 1.1128 - accuracy: 0.7171\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 98/200 [=============\u003e................] - ETA: 42s - loss: 1.1152 - accuracy: 0.7165\n","Epoch 00008: accuracy did not improve from 0.79688\n"," 99/200 [=============\u003e................] - ETA: 41s - loss: 1.1149 - accuracy: 0.7172\n","Epoch 00008: accuracy did not improve from 0.79688\n","100/200 [==============\u003e...............] - ETA: 41s - loss: 1.1158 - accuracy: 0.7177\n","Epoch 00008: accuracy did not improve from 0.79688\n","101/200 [==============\u003e...............] - ETA: 41s - loss: 1.1177 - accuracy: 0.7170\n","Epoch 00008: accuracy did not improve from 0.79688\n","102/200 [==============\u003e...............] - ETA: 40s - loss: 1.1165 - accuracy: 0.7174\n","Epoch 00008: accuracy did not improve from 0.79688\n","103/200 [==============\u003e...............] - ETA: 40s - loss: 1.1168 - accuracy: 0.7174\n","Epoch 00008: accuracy did not improve from 0.79688\n","104/200 [==============\u003e...............] - ETA: 39s - loss: 1.1164 - accuracy: 0.7174\n","Epoch 00008: accuracy did not improve from 0.79688\n","105/200 [==============\u003e...............] - ETA: 39s - loss: 1.1170 - accuracy: 0.7173\n","Epoch 00008: accuracy did not improve from 0.79688\n","106/200 [==============\u003e...............] - ETA: 39s - loss: 1.1164 - accuracy: 0.7171\n","Epoch 00008: accuracy did not improve from 0.79688\n","107/200 [===============\u003e..............] - ETA: 38s - loss: 1.1170 - accuracy: 0.7164\n","Epoch 00008: accuracy did not improve from 0.79688\n","108/200 [===============\u003e..............] - ETA: 38s - loss: 1.1179 - accuracy: 0.7159\n","Epoch 00008: accuracy did not improve from 0.79688\n","109/200 [===============\u003e..............] - ETA: 37s - loss: 1.1181 - accuracy: 0.7155\n","Epoch 00008: accuracy did not improve from 0.79688\n","110/200 [===============\u003e..............] - ETA: 37s - loss: 1.1172 - accuracy: 0.7158\n","Epoch 00008: accuracy did not improve from 0.79688\n","111/200 [===============\u003e..............] - ETA: 37s - loss: 1.1182 - accuracy: 0.7154\n","Epoch 00008: accuracy did not improve from 0.79688\n","112/200 [===============\u003e..............] - ETA: 36s - loss: 1.1184 - accuracy: 0.7153\n","Epoch 00008: accuracy did not improve from 0.79688\n","113/200 [===============\u003e..............] - ETA: 36s - loss: 1.1170 - accuracy: 0.7157\n","Epoch 00008: accuracy did not improve from 0.79688\n","114/200 [================\u003e.............] - ETA: 35s - loss: 1.1178 - accuracy: 0.7155\n","Epoch 00008: accuracy did not improve from 0.79688\n","115/200 [================\u003e.............] - ETA: 35s - loss: 1.1165 - accuracy: 0.7154\n","Epoch 00008: accuracy did not improve from 0.79688\n","116/200 [================\u003e.............] - ETA: 34s - loss: 1.1169 - accuracy: 0.7161\n","Epoch 00008: accuracy did not improve from 0.79688\n","117/200 [================\u003e.............] - ETA: 34s - loss: 1.1181 - accuracy: 0.7159\n","Epoch 00008: accuracy did not improve from 0.79688\n","118/200 [================\u003e.............] - ETA: 34s - loss: 1.1205 - accuracy: 0.7152\n","Epoch 00008: accuracy did not improve from 0.79688\n","119/200 [================\u003e.............] - ETA: 33s - loss: 1.1194 - accuracy: 0.7151\n","Epoch 00008: accuracy did not improve from 0.79688\n","120/200 [=================\u003e............] - ETA: 33s - loss: 1.1215 - accuracy: 0.7145\n","Epoch 00008: accuracy did not improve from 0.79688\n","121/200 [=================\u003e............] - ETA: 32s - loss: 1.1201 - accuracy: 0.7145\n","Epoch 00008: accuracy did not improve from 0.79688\n","122/200 [=================\u003e............] - ETA: 32s - loss: 1.1213 - accuracy: 0.7143\n","Epoch 00008: accuracy did not improve from 0.79688\n","123/200 [=================\u003e............] - ETA: 32s - loss: 1.1223 - accuracy: 0.7139\n","Epoch 00008: accuracy did not improve from 0.79688\n","124/200 [=================\u003e............] - ETA: 31s - loss: 1.1230 - accuracy: 0.7138\n","Epoch 00008: accuracy did not improve from 0.79688\n","125/200 [=================\u003e............] - ETA: 31s - loss: 1.1257 - accuracy: 0.7131\n","Epoch 00008: accuracy did not improve from 0.79688\n","126/200 [=================\u003e............] - ETA: 30s - loss: 1.1262 - accuracy: 0.7125\n","Epoch 00008: accuracy did not improve from 0.79688\n","127/200 [==================\u003e...........] - ETA: 30s - loss: 1.1246 - accuracy: 0.7132\n","Epoch 00008: accuracy did not improve from 0.79688\n","128/200 [==================\u003e...........] - ETA: 30s - loss: 1.1227 - accuracy: 0.7133\n","Epoch 00008: accuracy did not improve from 0.79688\n","129/200 [==================\u003e...........] - ETA: 29s - loss: 1.1255 - accuracy: 0.7126\n","Epoch 00008: accuracy did not improve from 0.79688\n","130/200 [==================\u003e...........] - ETA: 29s - loss: 1.1260 - accuracy: 0.7125\n","Epoch 00008: accuracy did not improve from 0.79688\n","131/200 [==================\u003e...........] - ETA: 28s - loss: 1.1259 - accuracy: 0.7127\n","Epoch 00008: accuracy did not improve from 0.79688\n","132/200 [==================\u003e...........] - ETA: 28s - loss: 1.1250 - accuracy: 0.7128\n","Epoch 00008: accuracy did not improve from 0.79688\n","133/200 [==================\u003e...........] - ETA: 27s - loss: 1.1262 - accuracy: 0.7124\n","Epoch 00008: accuracy did not improve from 0.79688\n","134/200 [===================\u003e..........] - ETA: 27s - loss: 1.1257 - accuracy: 0.7125\n","Epoch 00008: accuracy did not improve from 0.79688\n","135/200 [===================\u003e..........] - ETA: 27s - loss: 1.1275 - accuracy: 0.7124\n","Epoch 00008: accuracy did not improve from 0.79688\n","136/200 [===================\u003e..........] - ETA: 26s - loss: 1.1277 - accuracy: 0.7122\n","Epoch 00008: accuracy did not improve from 0.79688\n","137/200 [===================\u003e..........] - ETA: 26s - loss: 1.1280 - accuracy: 0.7121\n","Epoch 00008: accuracy did not improve from 0.79688\n","138/200 [===================\u003e..........] - ETA: 25s - loss: 1.1262 - accuracy: 0.7125\n","Epoch 00008: accuracy did not improve from 0.79688\n","139/200 [===================\u003e..........] - ETA: 25s - loss: 1.1265 - accuracy: 0.7121\n","Epoch 00008: accuracy did not improve from 0.79688\n","140/200 [====================\u003e.........] - ETA: 25s - loss: 1.1267 - accuracy: 0.7125\n","Epoch 00008: accuracy did not improve from 0.79688\n","141/200 [====================\u003e.........] - ETA: 24s - loss: 1.1258 - accuracy: 0.7125\n","Epoch 00008: accuracy did not improve from 0.79688\n","142/200 [====================\u003e.........] - ETA: 24s - loss: 1.1274 - accuracy: 0.7120\n","Epoch 00008: accuracy did not improve from 0.79688\n","143/200 [====================\u003e.........] - ETA: 23s - loss: 1.1280 - accuracy: 0.7119\n","Epoch 00008: accuracy did not improve from 0.79688\n","144/200 [====================\u003e.........] - ETA: 23s - loss: 1.1278 - accuracy: 0.7117\n","Epoch 00008: accuracy did not improve from 0.79688\n","145/200 [====================\u003e.........] - ETA: 22s - loss: 1.1295 - accuracy: 0.7116\n","Epoch 00008: accuracy did not improve from 0.79688\n","146/200 [====================\u003e.........] - ETA: 22s - loss: 1.1305 - accuracy: 0.7116\n","Epoch 00008: accuracy did not improve from 0.79688\n","147/200 [=====================\u003e........] - ETA: 22s - loss: 1.1305 - accuracy: 0.7115\n","Epoch 00008: accuracy did not improve from 0.79688\n","148/200 [=====================\u003e........] - ETA: 21s - loss: 1.1290 - accuracy: 0.7114\n","Epoch 00008: accuracy did not improve from 0.79688\n","149/200 [=====================\u003e........] - ETA: 21s - loss: 1.1287 - accuracy: 0.7111\n","Epoch 00008: accuracy did not improve from 0.79688\n","150/200 [=====================\u003e........] - ETA: 20s - loss: 1.1277 - accuracy: 0.7115\n","Epoch 00008: accuracy did not improve from 0.79688\n","151/200 [=====================\u003e........] - ETA: 20s - loss: 1.1272 - accuracy: 0.7118\n","Epoch 00008: accuracy did not improve from 0.79688\n","152/200 [=====================\u003e........] - ETA: 20s - loss: 1.1267 - accuracy: 0.7124\n","Epoch 00008: accuracy did not improve from 0.79688\n","153/200 [=====================\u003e........] - ETA: 19s - loss: 1.1273 - accuracy: 0.7119\n","Epoch 00008: accuracy did not improve from 0.79688\n","154/200 [======================\u003e.......] - ETA: 19s - loss: 1.1268 - accuracy: 0.7119\n","Epoch 00008: accuracy did not improve from 0.79688\n","155/200 [======================\u003e.......] - ETA: 18s - loss: 1.1289 - accuracy: 0.7110\n","Epoch 00008: accuracy did not improve from 0.79688\n","156/200 [======================\u003e.......] - ETA: 18s - loss: 1.1319 - accuracy: 0.7104\n","Epoch 00008: accuracy did not improve from 0.79688\n","157/200 [======================\u003e.......] - ETA: 17s - loss: 1.1325 - accuracy: 0.7102\n","Epoch 00008: accuracy did not improve from 0.79688\n","158/200 [======================\u003e.......] - ETA: 17s - loss: 1.1319 - accuracy: 0.7101\n","Epoch 00008: accuracy did not improve from 0.79688\n","159/200 [======================\u003e.......] - ETA: 17s - loss: 1.1321 - accuracy: 0.7103\n","Epoch 00008: accuracy did not improve from 0.79688\n","160/200 [=======================\u003e......] - ETA: 16s - loss: 1.1335 - accuracy: 0.7099\n","Epoch 00008: accuracy did not improve from 0.79688\n","161/200 [=======================\u003e......] - ETA: 16s - loss: 1.1336 - accuracy: 0.7099\n","Epoch 00008: accuracy did not improve from 0.79688\n","162/200 [=======================\u003e......] - ETA: 15s - loss: 1.1333 - accuracy: 0.7100\n","Epoch 00008: accuracy did not improve from 0.79688\n","163/200 [=======================\u003e......] - ETA: 15s - loss: 1.1342 - accuracy: 0.7098\n","Epoch 00008: accuracy did not improve from 0.79688\n","164/200 [=======================\u003e......] - ETA: 15s - loss: 1.1339 - accuracy: 0.7100\n","Epoch 00008: accuracy did not improve from 0.79688\n","165/200 [=======================\u003e......] - ETA: 14s - loss: 1.1330 - accuracy: 0.7102\n","Epoch 00008: accuracy did not improve from 0.79688\n","166/200 [=======================\u003e......] - ETA: 14s - loss: 1.1325 - accuracy: 0.7105\n","Epoch 00008: accuracy did not improve from 0.79688\n","167/200 [========================\u003e.....] - ETA: 13s - loss: 1.1315 - accuracy: 0.7107\n","Epoch 00008: accuracy did not improve from 0.79688\n","168/200 [========================\u003e.....] - ETA: 13s - loss: 1.1319 - accuracy: 0.7106\n","Epoch 00008: accuracy did not improve from 0.79688\n","169/200 [========================\u003e.....] - ETA: 12s - loss: 1.1329 - accuracy: 0.7102\n","Epoch 00008: accuracy did not improve from 0.79688\n","170/200 [========================\u003e.....] - ETA: 12s - loss: 1.1339 - accuracy: 0.7099\n","Epoch 00008: accuracy did not improve from 0.79688\n","171/200 [========================\u003e.....] - ETA: 12s - loss: 1.1328 - accuracy: 0.7103\n","Epoch 00008: accuracy did not improve from 0.79688\n","172/200 [========================\u003e.....] - ETA: 11s - loss: 1.1326 - accuracy: 0.7102\n","Epoch 00008: accuracy did not improve from 0.79688\n","173/200 [========================\u003e.....] - ETA: 11s - loss: 1.1330 - accuracy: 0.7101\n","Epoch 00008: accuracy did not improve from 0.79688\n","174/200 [=========================\u003e....] - ETA: 10s - loss: 1.1324 - accuracy: 0.7106\n","Epoch 00008: accuracy did not improve from 0.79688\n","175/200 [=========================\u003e....] - ETA: 10s - loss: 1.1330 - accuracy: 0.7101\n","Epoch 00008: accuracy did not improve from 0.79688\n","176/200 [=========================\u003e....] - ETA: 10s - loss: 1.1332 - accuracy: 0.7100\n","Epoch 00008: accuracy did not improve from 0.79688\n","177/200 [=========================\u003e....] - ETA: 9s - loss: 1.1349 - accuracy: 0.7097 \n","Epoch 00008: accuracy did not improve from 0.79688\n","178/200 [=========================\u003e....] - ETA: 9s - loss: 1.1360 - accuracy: 0.7094\n","Epoch 00008: accuracy did not improve from 0.79688\n","179/200 [=========================\u003e....] - ETA: 8s - loss: 1.1368 - accuracy: 0.7095\n","Epoch 00008: accuracy did not improve from 0.79688\n","180/200 [==========================\u003e...] - ETA: 8s - loss: 1.1361 - accuracy: 0.7100\n","Epoch 00008: accuracy did not improve from 0.79688\n","181/200 [==========================\u003e...] - ETA: 7s - loss: 1.1346 - accuracy: 0.7105\n","Epoch 00008: accuracy did not improve from 0.79688\n","182/200 [==========================\u003e...] - ETA: 7s - loss: 1.1346 - accuracy: 0.7105\n","Epoch 00008: accuracy did not improve from 0.79688\n","183/200 [==========================\u003e...] - ETA: 7s - loss: 1.1343 - accuracy: 0.7106\n","Epoch 00008: accuracy did not improve from 0.79688\n","184/200 [==========================\u003e...] - ETA: 6s - loss: 1.1337 - accuracy: 0.7109\n","Epoch 00008: accuracy did not improve from 0.79688\n","185/200 [==========================\u003e...] - ETA: 6s - loss: 1.1347 - accuracy: 0.7105\n","Epoch 00008: accuracy did not improve from 0.79688\n","186/200 [==========================\u003e...] - ETA: 5s - loss: 1.1349 - accuracy: 0.7106\n","Epoch 00008: accuracy did not improve from 0.79688\n","187/200 [===========================\u003e..] - ETA: 5s - loss: 1.1332 - accuracy: 0.7111\n","Epoch 00008: accuracy did not improve from 0.79688\n","188/200 [===========================\u003e..] - ETA: 5s - loss: 1.1340 - accuracy: 0.7112\n","Epoch 00008: accuracy did not improve from 0.79688\n","189/200 [===========================\u003e..] - ETA: 4s - loss: 1.1338 - accuracy: 0.7116\n","Epoch 00008: accuracy did not improve from 0.79688\n","190/200 [===========================\u003e..] - ETA: 4s - loss: 1.1359 - accuracy: 0.7110\n","Epoch 00008: accuracy did not improve from 0.79688\n","191/200 [===========================\u003e..] - ETA: 3s - loss: 1.1371 - accuracy: 0.7109\n","Epoch 00008: accuracy did not improve from 0.79688\n","192/200 [===========================\u003e..] - ETA: 3s - loss: 1.1382 - accuracy: 0.7108\n","Epoch 00008: accuracy did not improve from 0.79688\n","193/200 [===========================\u003e..] - ETA: 2s - loss: 1.1392 - accuracy: 0.7106\n","Epoch 00008: accuracy did not improve from 0.79688\n","194/200 [============================\u003e.] - ETA: 2s - loss: 1.1399 - accuracy: 0.7103\n","Epoch 00008: accuracy did not improve from 0.79688\n","195/200 [============================\u003e.] - ETA: 2s - loss: 1.1398 - accuracy: 0.7104\n","Epoch 00008: accuracy did not improve from 0.79688\n","196/200 [============================\u003e.] - ETA: 1s - loss: 1.1404 - accuracy: 0.7102\n","Epoch 00008: accuracy did not improve from 0.79688\n","197/200 [============================\u003e.] - ETA: 1s - loss: 1.1406 - accuracy: 0.7097\n","Epoch 00008: accuracy did not improve from 0.79688\n","198/200 [============================\u003e.] - ETA: 0s - loss: 1.1399 - accuracy: 0.7098\n","Epoch 00008: accuracy did not improve from 0.79688\n","199/200 [============================\u003e.] - ETA: 0s - loss: 1.1407 - accuracy: 0.7096\n","Epoch 00008: accuracy did not improve from 0.79688\n","200/200 [==============================] - ETA: 0s - loss: 1.1410 - accuracy: 0.7092WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 84s 417ms/step - loss: 1.1410 - accuracy: 0.7092 - lr: 0.0010\n","Epoch 9/10\n","\n","Epoch 00009: accuracy did not improve from 0.79688\n","  1/200 [..............................] - ETA: 2:09 - loss: 1.5222 - accuracy: 0.6719\n","Epoch 00009: accuracy did not improve from 0.79688\n","  2/200 [..............................] - ETA: 1:25 - loss: 1.4111 - accuracy: 0.6484\n","Epoch 00009: accuracy did not improve from 0.79688\n","  3/200 [..............................] - ETA: 1:25 - loss: 1.2903 - accuracy: 0.6875\n","Epoch 00009: accuracy did not improve from 0.79688\n","  4/200 [..............................] - ETA: 1:21 - loss: 1.2966 - accuracy: 0.6914\n","Epoch 00009: accuracy did not improve from 0.79688\n","  5/200 [..............................] - ETA: 1:20 - loss: 1.2638 - accuracy: 0.6906\n","Epoch 00009: accuracy did not improve from 0.79688\n","  6/200 [..............................] - ETA: 1:21 - loss: 1.2667 - accuracy: 0.6849\n","Epoch 00009: accuracy did not improve from 0.79688\n","  7/200 [\u003e.............................] - ETA: 1:22 - loss: 1.2702 - accuracy: 0.6763\n","Epoch 00009: accuracy did not improve from 0.79688\n","  8/200 [\u003e.............................] - ETA: 1:22 - loss: 1.2196 - accuracy: 0.6895\n","Epoch 00009: accuracy did not improve from 0.79688\n","  9/200 [\u003e.............................] - ETA: 1:21 - loss: 1.2721 - accuracy: 0.6771\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 10/200 [\u003e.............................] - ETA: 1:20 - loss: 1.2689 - accuracy: 0.6797\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 11/200 [\u003e.............................] - ETA: 1:19 - loss: 1.2216 - accuracy: 0.6932\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 12/200 [\u003e.............................] - ETA: 1:19 - loss: 1.2096 - accuracy: 0.6992\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 13/200 [\u003e.............................] - ETA: 1:19 - loss: 1.2408 - accuracy: 0.6947\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 14/200 [=\u003e............................] - ETA: 1:18 - loss: 1.2429 - accuracy: 0.6920\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 15/200 [=\u003e............................] - ETA: 1:19 - loss: 1.2615 - accuracy: 0.6875\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 16/200 [=\u003e............................] - ETA: 1:18 - loss: 1.2650 - accuracy: 0.6836\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 17/200 [=\u003e............................] - ETA: 1:17 - loss: 1.2639 - accuracy: 0.6857\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 18/200 [=\u003e............................] - ETA: 1:16 - loss: 1.2708 - accuracy: 0.6823\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 19/200 [=\u003e............................] - ETA: 1:16 - loss: 1.2716 - accuracy: 0.6809\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 20/200 [==\u003e...........................] - ETA: 1:15 - loss: 1.2777 - accuracy: 0.6789\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 21/200 [==\u003e...........................] - ETA: 1:14 - loss: 1.2669 - accuracy: 0.6830\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 22/200 [==\u003e...........................] - ETA: 1:14 - loss: 1.2563 - accuracy: 0.6832\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 23/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.2723 - accuracy: 0.6800\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 24/200 [==\u003e...........................] - ETA: 1:13 - loss: 1.2761 - accuracy: 0.6758\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 25/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.2733 - accuracy: 0.6756\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 26/200 [==\u003e...........................] - ETA: 1:12 - loss: 1.2729 - accuracy: 0.6773\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 27/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.2580 - accuracy: 0.6794\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 28/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.2550 - accuracy: 0.6791\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 29/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.2500 - accuracy: 0.6810\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 30/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.2435 - accuracy: 0.6839\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 31/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.2379 - accuracy: 0.6860\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 32/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.2289 - accuracy: 0.6899\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 33/200 [===\u003e..........................] - ETA: 1:09 - loss: 1.2283 - accuracy: 0.6894\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 34/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.2162 - accuracy: 0.6926\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 35/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.2206 - accuracy: 0.6933\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 36/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.2131 - accuracy: 0.6962\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 37/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.2066 - accuracy: 0.6968\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 38/200 [====\u003e.........................] - ETA: 1:07 - loss: 1.2021 - accuracy: 0.6970\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 39/200 [====\u003e.........................] - ETA: 1:06 - loss: 1.1945 - accuracy: 0.6979\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 40/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1957 - accuracy: 0.6988\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 41/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1973 - accuracy: 0.6963\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 42/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1930 - accuracy: 0.6975\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 43/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1866 - accuracy: 0.6991\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 44/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1933 - accuracy: 0.6964\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 45/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1914 - accuracy: 0.6969\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 46/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1892 - accuracy: 0.6963\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 47/200 [======\u003e.......................] - ETA: 1:03 - loss: 1.1945 - accuracy: 0.6948\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 48/200 [======\u003e.......................] - ETA: 1:03 - loss: 1.1925 - accuracy: 0.6960\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 49/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1905 - accuracy: 0.6971\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 50/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1915 - accuracy: 0.6972\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 51/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1922 - accuracy: 0.6979\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 52/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1932 - accuracy: 0.6968\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 53/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1958 - accuracy: 0.6960\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 54/200 [=======\u003e......................] - ETA: 1:01 - loss: 1.1975 - accuracy: 0.6959\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 55/200 [=======\u003e......................] - ETA: 1:00 - loss: 1.2044 - accuracy: 0.6946\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 56/200 [=======\u003e......................] - ETA: 1:00 - loss: 1.2005 - accuracy: 0.6959\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 57/200 [=======\u003e......................] - ETA: 59s - loss: 1.1988 - accuracy: 0.6957 \n","Epoch 00009: accuracy did not improve from 0.79688\n"," 58/200 [=======\u003e......................] - ETA: 59s - loss: 1.1967 - accuracy: 0.6967\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 59/200 [=======\u003e......................] - ETA: 59s - loss: 1.2032 - accuracy: 0.6957\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 60/200 [========\u003e.....................] - ETA: 58s - loss: 1.2028 - accuracy: 0.6953\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 61/200 [========\u003e.....................] - ETA: 58s - loss: 1.2010 - accuracy: 0.6949\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 62/200 [========\u003e.....................] - ETA: 58s - loss: 1.1976 - accuracy: 0.6961\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 63/200 [========\u003e.....................] - ETA: 57s - loss: 1.1922 - accuracy: 0.6969\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 64/200 [========\u003e.....................] - ETA: 57s - loss: 1.1943 - accuracy: 0.6956\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 65/200 [========\u003e.....................] - ETA: 56s - loss: 1.1959 - accuracy: 0.6957\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 66/200 [========\u003e.....................] - ETA: 56s - loss: 1.1956 - accuracy: 0.6953\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 67/200 [=========\u003e....................] - ETA: 56s - loss: 1.1948 - accuracy: 0.6961\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 68/200 [=========\u003e....................] - ETA: 55s - loss: 1.1987 - accuracy: 0.6955\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 69/200 [=========\u003e....................] - ETA: 55s - loss: 1.1963 - accuracy: 0.6961\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 70/200 [=========\u003e....................] - ETA: 54s - loss: 1.1970 - accuracy: 0.6964\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 71/200 [=========\u003e....................] - ETA: 54s - loss: 1.1983 - accuracy: 0.6954\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 72/200 [=========\u003e....................] - ETA: 53s - loss: 1.1980 - accuracy: 0.6957\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 73/200 [=========\u003e....................] - ETA: 53s - loss: 1.1991 - accuracy: 0.6952\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 74/200 [==========\u003e...................] - ETA: 52s - loss: 1.1983 - accuracy: 0.6949\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 75/200 [==========\u003e...................] - ETA: 52s - loss: 1.1972 - accuracy: 0.6946\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 76/200 [==========\u003e...................] - ETA: 52s - loss: 1.1986 - accuracy: 0.6941\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 77/200 [==========\u003e...................] - ETA: 51s - loss: 1.1980 - accuracy: 0.6942\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 78/200 [==========\u003e...................] - ETA: 51s - loss: 1.1960 - accuracy: 0.6943\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 79/200 [==========\u003e...................] - ETA: 50s - loss: 1.1984 - accuracy: 0.6942\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 80/200 [===========\u003e..................] - ETA: 50s - loss: 1.2002 - accuracy: 0.6926\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 81/200 [===========\u003e..................] - ETA: 50s - loss: 1.1965 - accuracy: 0.6939\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 82/200 [===========\u003e..................] - ETA: 49s - loss: 1.1982 - accuracy: 0.6930\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 83/200 [===========\u003e..................] - ETA: 49s - loss: 1.1980 - accuracy: 0.6931\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 84/200 [===========\u003e..................] - ETA: 48s - loss: 1.1976 - accuracy: 0.6929\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 85/200 [===========\u003e..................] - ETA: 48s - loss: 1.1969 - accuracy: 0.6934\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 86/200 [===========\u003e..................] - ETA: 47s - loss: 1.1938 - accuracy: 0.6937\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 87/200 [============\u003e.................] - ETA: 47s - loss: 1.1892 - accuracy: 0.6945\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 88/200 [============\u003e.................] - ETA: 47s - loss: 1.1911 - accuracy: 0.6946\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 89/200 [============\u003e.................] - ETA: 46s - loss: 1.1881 - accuracy: 0.6956\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 90/200 [============\u003e.................] - ETA: 46s - loss: 1.1830 - accuracy: 0.6965\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 91/200 [============\u003e.................] - ETA: 45s - loss: 1.1876 - accuracy: 0.6957\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 92/200 [============\u003e.................] - ETA: 45s - loss: 1.1887 - accuracy: 0.6953\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 93/200 [============\u003e.................] - ETA: 44s - loss: 1.1893 - accuracy: 0.6952\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 94/200 [=============\u003e................] - ETA: 44s - loss: 1.1858 - accuracy: 0.6958\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 95/200 [=============\u003e................] - ETA: 44s - loss: 1.1835 - accuracy: 0.6964\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 96/200 [=============\u003e................] - ETA: 43s - loss: 1.1815 - accuracy: 0.6971\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 97/200 [=============\u003e................] - ETA: 43s - loss: 1.1814 - accuracy: 0.6968\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 98/200 [=============\u003e................] - ETA: 42s - loss: 1.1801 - accuracy: 0.6972\n","Epoch 00009: accuracy did not improve from 0.79688\n"," 99/200 [=============\u003e................] - ETA: 42s - loss: 1.1783 - accuracy: 0.6978\n","Epoch 00009: accuracy did not improve from 0.79688\n","100/200 [==============\u003e...............] - ETA: 41s - loss: 1.1803 - accuracy: 0.6977\n","Epoch 00009: accuracy did not improve from 0.79688\n","101/200 [==============\u003e...............] - ETA: 41s - loss: 1.1757 - accuracy: 0.6988\n","Epoch 00009: accuracy did not improve from 0.79688\n","102/200 [==============\u003e...............] - ETA: 41s - loss: 1.1764 - accuracy: 0.6990\n","Epoch 00009: accuracy did not improve from 0.79688\n","103/200 [==============\u003e...............] - ETA: 40s - loss: 1.1764 - accuracy: 0.6992\n","Epoch 00009: accuracy did not improve from 0.79688\n","104/200 [==============\u003e...............] - ETA: 40s - loss: 1.1765 - accuracy: 0.6992\n","Epoch 00009: accuracy did not improve from 0.79688\n","105/200 [==============\u003e...............] - ETA: 39s - loss: 1.1771 - accuracy: 0.6987\n","Epoch 00009: accuracy did not improve from 0.79688\n","106/200 [==============\u003e...............] - ETA: 39s - loss: 1.1790 - accuracy: 0.6981\n","Epoch 00009: accuracy did not improve from 0.79688\n","107/200 [===============\u003e..............] - ETA: 38s - loss: 1.1798 - accuracy: 0.6977\n","Epoch 00009: accuracy did not improve from 0.79688\n","108/200 [===============\u003e..............] - ETA: 38s - loss: 1.1774 - accuracy: 0.6986\n","Epoch 00009: accuracy did not improve from 0.79688\n","109/200 [===============\u003e..............] - ETA: 38s - loss: 1.1765 - accuracy: 0.6990\n","Epoch 00009: accuracy did not improve from 0.79688\n","110/200 [===============\u003e..............] - ETA: 37s - loss: 1.1738 - accuracy: 0.6999\n","Epoch 00009: accuracy did not improve from 0.79688\n","111/200 [===============\u003e..............] - ETA: 37s - loss: 1.1737 - accuracy: 0.7000\n","Epoch 00009: accuracy did not improve from 0.79688\n","112/200 [===============\u003e..............] - ETA: 36s - loss: 1.1734 - accuracy: 0.7001\n","Epoch 00009: accuracy did not improve from 0.79688\n","113/200 [===============\u003e..............] - ETA: 36s - loss: 1.1714 - accuracy: 0.7008\n","Epoch 00009: accuracy did not improve from 0.79688\n","114/200 [================\u003e.............] - ETA: 36s - loss: 1.1726 - accuracy: 0.7005\n","Epoch 00009: accuracy did not improve from 0.79688\n","115/200 [================\u003e.............] - ETA: 35s - loss: 1.1729 - accuracy: 0.7011\n","Epoch 00009: accuracy did not improve from 0.79688\n","116/200 [================\u003e.............] - ETA: 35s - loss: 1.1731 - accuracy: 0.7015\n","Epoch 00009: accuracy did not improve from 0.79688\n","117/200 [================\u003e.............] - ETA: 34s - loss: 1.1736 - accuracy: 0.7021\n","Epoch 00009: accuracy did not improve from 0.79688\n","118/200 [================\u003e.............] - ETA: 34s - loss: 1.1737 - accuracy: 0.7021\n","Epoch 00009: accuracy did not improve from 0.79688\n","119/200 [================\u003e.............] - ETA: 33s - loss: 1.1775 - accuracy: 0.7018\n","Epoch 00009: accuracy did not improve from 0.79688\n","120/200 [=================\u003e............] - ETA: 33s - loss: 1.1776 - accuracy: 0.7018\n","Epoch 00009: accuracy did not improve from 0.79688\n","121/200 [=================\u003e............] - ETA: 33s - loss: 1.1781 - accuracy: 0.7013\n","Epoch 00009: accuracy did not improve from 0.79688\n","122/200 [=================\u003e............] - ETA: 32s - loss: 1.1794 - accuracy: 0.7007\n","Epoch 00009: accuracy did not improve from 0.79688\n","123/200 [=================\u003e............] - ETA: 32s - loss: 1.1802 - accuracy: 0.7006\n","Epoch 00009: accuracy did not improve from 0.79688\n","124/200 [=================\u003e............] - ETA: 31s - loss: 1.1808 - accuracy: 0.7000\n","Epoch 00009: accuracy did not improve from 0.79688\n","125/200 [=================\u003e............] - ETA: 31s - loss: 1.1831 - accuracy: 0.6995\n","Epoch 00009: accuracy did not improve from 0.79688\n","126/200 [=================\u003e............] - ETA: 31s - loss: 1.1859 - accuracy: 0.6987\n","Epoch 00009: accuracy did not improve from 0.79688\n","127/200 [==================\u003e...........] - ETA: 30s - loss: 1.1861 - accuracy: 0.6983\n","Epoch 00009: accuracy did not improve from 0.79688\n","128/200 [==================\u003e...........] - ETA: 30s - loss: 1.1851 - accuracy: 0.6987\n","Epoch 00009: accuracy did not improve from 0.79688\n","129/200 [==================\u003e...........] - ETA: 29s - loss: 1.1847 - accuracy: 0.6986\n","Epoch 00009: accuracy did not improve from 0.79688\n","130/200 [==================\u003e...........] - ETA: 29s - loss: 1.1821 - accuracy: 0.6993\n","Epoch 00009: accuracy did not improve from 0.79688\n","131/200 [==================\u003e...........] - ETA: 28s - loss: 1.1820 - accuracy: 0.6994\n","Epoch 00009: accuracy did not improve from 0.79688\n","132/200 [==================\u003e...........] - ETA: 28s - loss: 1.1820 - accuracy: 0.6998\n","Epoch 00009: accuracy did not improve from 0.79688\n","133/200 [==================\u003e...........] - ETA: 28s - loss: 1.1825 - accuracy: 0.6997\n","Epoch 00009: accuracy did not improve from 0.79688\n","134/200 [===================\u003e..........] - ETA: 27s - loss: 1.1815 - accuracy: 0.6994\n","Epoch 00009: accuracy did not improve from 0.79688\n","135/200 [===================\u003e..........] - ETA: 27s - loss: 1.1814 - accuracy: 0.6997\n","Epoch 00009: accuracy did not improve from 0.79688\n","136/200 [===================\u003e..........] - ETA: 26s - loss: 1.1836 - accuracy: 0.6988\n","Epoch 00009: accuracy did not improve from 0.79688\n","137/200 [===================\u003e..........] - ETA: 26s - loss: 1.1830 - accuracy: 0.6988\n","Epoch 00009: accuracy did not improve from 0.79688\n","138/200 [===================\u003e..........] - ETA: 26s - loss: 1.1808 - accuracy: 0.6990\n","Epoch 00009: accuracy did not improve from 0.79688\n","139/200 [===================\u003e..........] - ETA: 25s - loss: 1.1790 - accuracy: 0.6994\n","Epoch 00009: accuracy did not improve from 0.79688\n","140/200 [====================\u003e.........] - ETA: 25s - loss: 1.1801 - accuracy: 0.6998\n","Epoch 00009: accuracy did not improve from 0.79688\n","141/200 [====================\u003e.........] - ETA: 24s - loss: 1.1796 - accuracy: 0.7005\n","Epoch 00009: accuracy did not improve from 0.79688\n","142/200 [====================\u003e.........] - ETA: 24s - loss: 1.1803 - accuracy: 0.7005\n","Epoch 00009: accuracy did not improve from 0.79688\n","143/200 [====================\u003e.........] - ETA: 23s - loss: 1.1801 - accuracy: 0.7005\n","Epoch 00009: accuracy did not improve from 0.79688\n","144/200 [====================\u003e.........] - ETA: 23s - loss: 1.1799 - accuracy: 0.7003\n","Epoch 00009: accuracy did not improve from 0.79688\n","145/200 [====================\u003e.........] - ETA: 23s - loss: 1.1798 - accuracy: 0.7003\n","Epoch 00009: accuracy did not improve from 0.79688\n","146/200 [====================\u003e.........] - ETA: 22s - loss: 1.1812 - accuracy: 0.7003\n","Epoch 00009: accuracy did not improve from 0.79688\n","147/200 [=====================\u003e........] - ETA: 22s - loss: 1.1788 - accuracy: 0.7008\n","Epoch 00009: accuracy did not improve from 0.79688\n","148/200 [=====================\u003e........] - ETA: 21s - loss: 1.1767 - accuracy: 0.7016\n","Epoch 00009: accuracy did not improve from 0.79688\n","149/200 [=====================\u003e........] - ETA: 21s - loss: 1.1769 - accuracy: 0.7014\n","Epoch 00009: accuracy did not improve from 0.79688\n","150/200 [=====================\u003e........] - ETA: 21s - loss: 1.1767 - accuracy: 0.7013\n","Epoch 00009: accuracy did not improve from 0.79688\n","151/200 [=====================\u003e........] - ETA: 20s - loss: 1.1803 - accuracy: 0.7004\n","Epoch 00009: accuracy did not improve from 0.79688\n","152/200 [=====================\u003e........] - ETA: 20s - loss: 1.1792 - accuracy: 0.7006\n","Epoch 00009: accuracy did not improve from 0.79688\n","153/200 [=====================\u003e........] - ETA: 19s - loss: 1.1786 - accuracy: 0.7006\n","Epoch 00009: accuracy did not improve from 0.79688\n","154/200 [======================\u003e.......] - ETA: 19s - loss: 1.1780 - accuracy: 0.7003\n","Epoch 00009: accuracy did not improve from 0.79688\n","155/200 [======================\u003e.......] - ETA: 18s - loss: 1.1772 - accuracy: 0.7003\n","Epoch 00009: accuracy did not improve from 0.79688\n","156/200 [======================\u003e.......] - ETA: 18s - loss: 1.1769 - accuracy: 0.7003\n","Epoch 00009: accuracy did not improve from 0.79688\n","157/200 [======================\u003e.......] - ETA: 18s - loss: 1.1774 - accuracy: 0.7003\n","Epoch 00009: accuracy did not improve from 0.79688\n","158/200 [======================\u003e.......] - ETA: 17s - loss: 1.1788 - accuracy: 0.6998\n","Epoch 00009: accuracy did not improve from 0.79688\n","159/200 [======================\u003e.......] - ETA: 17s - loss: 1.1793 - accuracy: 0.6999\n","Epoch 00009: accuracy did not improve from 0.79688\n","160/200 [=======================\u003e......] - ETA: 16s - loss: 1.1793 - accuracy: 0.6997\n","Epoch 00009: accuracy did not improve from 0.79688\n","161/200 [=======================\u003e......] - ETA: 16s - loss: 1.1807 - accuracy: 0.6994\n","Epoch 00009: accuracy did not improve from 0.79688\n","162/200 [=======================\u003e......] - ETA: 15s - loss: 1.1803 - accuracy: 0.6996\n","Epoch 00009: accuracy did not improve from 0.79688\n","163/200 [=======================\u003e......] - ETA: 15s - loss: 1.1810 - accuracy: 0.6993\n","Epoch 00009: accuracy did not improve from 0.79688\n","164/200 [=======================\u003e......] - ETA: 15s - loss: 1.1816 - accuracy: 0.6988\n","Epoch 00009: accuracy did not improve from 0.79688\n","165/200 [=======================\u003e......] - ETA: 14s - loss: 1.1802 - accuracy: 0.6994\n","Epoch 00009: accuracy did not improve from 0.79688\n","166/200 [=======================\u003e......] - ETA: 14s - loss: 1.1808 - accuracy: 0.6993\n","Epoch 00009: accuracy did not improve from 0.79688\n","167/200 [========================\u003e.....] - ETA: 13s - loss: 1.1824 - accuracy: 0.6988\n","Epoch 00009: accuracy did not improve from 0.79688\n","168/200 [========================\u003e.....] - ETA: 13s - loss: 1.1827 - accuracy: 0.6990\n","Epoch 00009: accuracy did not improve from 0.79688\n","169/200 [========================\u003e.....] - ETA: 13s - loss: 1.1822 - accuracy: 0.6991\n","Epoch 00009: accuracy did not improve from 0.79688\n","170/200 [========================\u003e.....] - ETA: 12s - loss: 1.1813 - accuracy: 0.6994\n","Epoch 00009: accuracy did not improve from 0.79688\n","171/200 [========================\u003e.....] - ETA: 12s - loss: 1.1814 - accuracy: 0.6996\n","Epoch 00009: accuracy did not improve from 0.79688\n","172/200 [========================\u003e.....] - ETA: 11s - loss: 1.1830 - accuracy: 0.6989\n","Epoch 00009: accuracy did not improve from 0.79688\n","173/200 [========================\u003e.....] - ETA: 11s - loss: 1.1833 - accuracy: 0.6984\n","Epoch 00009: accuracy did not improve from 0.79688\n","174/200 [=========================\u003e....] - ETA: 10s - loss: 1.1845 - accuracy: 0.6985\n","Epoch 00009: accuracy did not improve from 0.79688\n","175/200 [=========================\u003e....] - ETA: 10s - loss: 1.1839 - accuracy: 0.6988\n","Epoch 00009: accuracy did not improve from 0.79688\n","176/200 [=========================\u003e....] - ETA: 10s - loss: 1.1842 - accuracy: 0.6985\n","Epoch 00009: accuracy did not improve from 0.79688\n","177/200 [=========================\u003e....] - ETA: 9s - loss: 1.1834 - accuracy: 0.6990 \n","Epoch 00009: accuracy did not improve from 0.79688\n","178/200 [=========================\u003e....] - ETA: 9s - loss: 1.1828 - accuracy: 0.6989\n","Epoch 00009: accuracy did not improve from 0.79688\n","179/200 [=========================\u003e....] - ETA: 8s - loss: 1.1808 - accuracy: 0.6993\n","Epoch 00009: accuracy did not improve from 0.79688\n","180/200 [==========================\u003e...] - ETA: 8s - loss: 1.1813 - accuracy: 0.6990\n","Epoch 00009: accuracy did not improve from 0.79688\n","181/200 [==========================\u003e...] - ETA: 7s - loss: 1.1808 - accuracy: 0.6992\n","Epoch 00009: accuracy did not improve from 0.79688\n","182/200 [==========================\u003e...] - ETA: 7s - loss: 1.1811 - accuracy: 0.6992\n","Epoch 00009: accuracy did not improve from 0.79688\n","183/200 [==========================\u003e...] - ETA: 7s - loss: 1.1812 - accuracy: 0.6989\n","Epoch 00009: accuracy did not improve from 0.79688\n","184/200 [==========================\u003e...] - ETA: 6s - loss: 1.1800 - accuracy: 0.6996\n","Epoch 00009: accuracy did not improve from 0.79688\n","185/200 [==========================\u003e...] - ETA: 6s - loss: 1.1793 - accuracy: 0.6997\n","Epoch 00009: accuracy did not improve from 0.79688\n","186/200 [==========================\u003e...] - ETA: 5s - loss: 1.1789 - accuracy: 0.6999\n","Epoch 00009: accuracy did not improve from 0.79688\n","187/200 [===========================\u003e..] - ETA: 5s - loss: 1.1787 - accuracy: 0.6999\n","Epoch 00009: accuracy did not improve from 0.79688\n","188/200 [===========================\u003e..] - ETA: 5s - loss: 1.1775 - accuracy: 0.7001\n","Epoch 00009: accuracy did not improve from 0.79688\n","189/200 [===========================\u003e..] - ETA: 4s - loss: 1.1769 - accuracy: 0.7002\n","Epoch 00009: accuracy did not improve from 0.79688\n","190/200 [===========================\u003e..] - ETA: 4s - loss: 1.1756 - accuracy: 0.7005\n","Epoch 00009: accuracy did not improve from 0.79688\n","191/200 [===========================\u003e..] - ETA: 3s - loss: 1.1765 - accuracy: 0.7000\n","Epoch 00009: accuracy did not improve from 0.79688\n","192/200 [===========================\u003e..] - ETA: 3s - loss: 1.1765 - accuracy: 0.6997\n","Epoch 00009: accuracy did not improve from 0.79688\n","193/200 [===========================\u003e..] - ETA: 2s - loss: 1.1762 - accuracy: 0.6997\n","Epoch 00009: accuracy did not improve from 0.79688\n","194/200 [============================\u003e.] - ETA: 2s - loss: 1.1749 - accuracy: 0.6999\n","Epoch 00009: accuracy did not improve from 0.79688\n","195/200 [============================\u003e.] - ETA: 2s - loss: 1.1736 - accuracy: 0.7001\n","Epoch 00009: accuracy did not improve from 0.79688\n","196/200 [============================\u003e.] - ETA: 1s - loss: 1.1740 - accuracy: 0.6999\n","Epoch 00009: accuracy did not improve from 0.79688\n","197/200 [============================\u003e.] - ETA: 1s - loss: 1.1742 - accuracy: 0.7000\n","Epoch 00009: accuracy did not improve from 0.79688\n","198/200 [============================\u003e.] - ETA: 0s - loss: 1.1748 - accuracy: 0.6997\n","Epoch 00009: accuracy did not improve from 0.79688\n","199/200 [============================\u003e.] - ETA: 0s - loss: 1.1747 - accuracy: 0.6995\n","Epoch 00009: accuracy did not improve from 0.79688\n","200/200 [==============================] - ETA: 0s - loss: 1.1747 - accuracy: 0.6997WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 84s 419ms/step - loss: 1.1747 - accuracy: 0.6997 - lr: 0.0010\n","Epoch 10/10\n","\n","Epoch 00010: accuracy did not improve from 0.79688\n","  1/200 [..............................] - ETA: 2:05 - loss: 1.2030 - accuracy: 0.6719\n","Epoch 00010: accuracy did not improve from 0.79688\n","  2/200 [..............................] - ETA: 1:14 - loss: 1.1309 - accuracy: 0.6953\n","Epoch 00010: accuracy did not improve from 0.79688\n","  3/200 [..............................] - ETA: 1:17 - loss: 1.0472 - accuracy: 0.7188\n","Epoch 00010: accuracy did not improve from 0.79688\n","  4/200 [..............................] - ETA: 1:19 - loss: 1.0748 - accuracy: 0.7266\n","Epoch 00010: accuracy did not improve from 0.79688\n","  5/200 [..............................] - ETA: 1:19 - loss: 1.0510 - accuracy: 0.7312\n","Epoch 00010: accuracy did not improve from 0.79688\n","  6/200 [..............................] - ETA: 1:19 - loss: 1.0609 - accuracy: 0.7266\n","Epoch 00010: accuracy did not improve from 0.79688\n","  7/200 [\u003e.............................] - ETA: 1:19 - loss: 1.1053 - accuracy: 0.7121\n","Epoch 00010: accuracy did not improve from 0.79688\n","  8/200 [\u003e.............................] - ETA: 1:19 - loss: 1.0956 - accuracy: 0.7168\n","Epoch 00010: accuracy did not improve from 0.79688\n","  9/200 [\u003e.............................] - ETA: 1:18 - loss: 1.1159 - accuracy: 0.7049\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 10/200 [\u003e.............................] - ETA: 1:18 - loss: 1.1412 - accuracy: 0.7047\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 11/200 [\u003e.............................] - ETA: 1:18 - loss: 1.1525 - accuracy: 0.7017\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 12/200 [\u003e.............................] - ETA: 1:18 - loss: 1.1928 - accuracy: 0.6888\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 13/200 [\u003e.............................] - ETA: 1:19 - loss: 1.2187 - accuracy: 0.6899\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 14/200 [=\u003e............................] - ETA: 1:18 - loss: 1.1902 - accuracy: 0.6964\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 15/200 [=\u003e............................] - ETA: 1:18 - loss: 1.2029 - accuracy: 0.6938\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 16/200 [=\u003e............................] - ETA: 1:18 - loss: 1.2074 - accuracy: 0.6934\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 17/200 [=\u003e............................] - ETA: 1:17 - loss: 1.1984 - accuracy: 0.6985\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 18/200 [=\u003e............................] - ETA: 1:17 - loss: 1.1821 - accuracy: 0.7031\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 19/200 [=\u003e............................] - ETA: 1:16 - loss: 1.1664 - accuracy: 0.7081\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 20/200 [==\u003e...........................] - ETA: 1:16 - loss: 1.1690 - accuracy: 0.7070\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 21/200 [==\u003e...........................] - ETA: 1:15 - loss: 1.1814 - accuracy: 0.7016\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 22/200 [==\u003e...........................] - ETA: 1:15 - loss: 1.1735 - accuracy: 0.7045\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 23/200 [==\u003e...........................] - ETA: 1:15 - loss: 1.1827 - accuracy: 0.7024\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 24/200 [==\u003e...........................] - ETA: 1:14 - loss: 1.1917 - accuracy: 0.6992\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 25/200 [==\u003e...........................] - ETA: 1:14 - loss: 1.1986 - accuracy: 0.6981\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 26/200 [==\u003e...........................] - ETA: 1:14 - loss: 1.2052 - accuracy: 0.6929\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 27/200 [===\u003e..........................] - ETA: 1:13 - loss: 1.2026 - accuracy: 0.6939\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 28/200 [===\u003e..........................] - ETA: 1:12 - loss: 1.2073 - accuracy: 0.6948\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 29/200 [===\u003e..........................] - ETA: 1:12 - loss: 1.2147 - accuracy: 0.6929\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 30/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.2111 - accuracy: 0.6948\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 31/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.2137 - accuracy: 0.6930\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 32/200 [===\u003e..........................] - ETA: 1:11 - loss: 1.2149 - accuracy: 0.6929\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 33/200 [===\u003e..........................] - ETA: 1:10 - loss: 1.2125 - accuracy: 0.6927\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 34/200 [====\u003e.........................] - ETA: 1:10 - loss: 1.2106 - accuracy: 0.6926\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 35/200 [====\u003e.........................] - ETA: 1:09 - loss: 1.2092 - accuracy: 0.6933\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 36/200 [====\u003e.........................] - ETA: 1:09 - loss: 1.2066 - accuracy: 0.6936\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 37/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.2084 - accuracy: 0.6934\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 38/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.2005 - accuracy: 0.6941\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 39/200 [====\u003e.........................] - ETA: 1:08 - loss: 1.2010 - accuracy: 0.6943\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 40/200 [=====\u003e........................] - ETA: 1:07 - loss: 1.1961 - accuracy: 0.6961\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 41/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1906 - accuracy: 0.6963\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 42/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1946 - accuracy: 0.6957\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 43/200 [=====\u003e........................] - ETA: 1:06 - loss: 1.1970 - accuracy: 0.6966\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 44/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1968 - accuracy: 0.6971\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 45/200 [=====\u003e........................] - ETA: 1:05 - loss: 1.1900 - accuracy: 0.6979\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 46/200 [=====\u003e........................] - ETA: 1:04 - loss: 1.1896 - accuracy: 0.6984\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 47/200 [======\u003e.......................] - ETA: 1:04 - loss: 1.1924 - accuracy: 0.6978\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 48/200 [======\u003e.......................] - ETA: 1:04 - loss: 1.1918 - accuracy: 0.6969\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 49/200 [======\u003e.......................] - ETA: 1:03 - loss: 1.1878 - accuracy: 0.6967\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 50/200 [======\u003e.......................] - ETA: 1:03 - loss: 1.1829 - accuracy: 0.6984\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 51/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1827 - accuracy: 0.6982\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 52/200 [======\u003e.......................] - ETA: 1:02 - loss: 1.1811 - accuracy: 0.6980\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 53/200 [======\u003e.......................] - ETA: 1:01 - loss: 1.1794 - accuracy: 0.6972\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 54/200 [=======\u003e......................] - ETA: 1:01 - loss: 1.1864 - accuracy: 0.6947\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 55/200 [=======\u003e......................] - ETA: 1:01 - loss: 1.1774 - accuracy: 0.6977\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 56/200 [=======\u003e......................] - ETA: 1:00 - loss: 1.1718 - accuracy: 0.7003\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 57/200 [=======\u003e......................] - ETA: 1:00 - loss: 1.1739 - accuracy: 0.6993\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 58/200 [=======\u003e......................] - ETA: 59s - loss: 1.1725 - accuracy: 0.6999 \n","Epoch 00010: accuracy did not improve from 0.79688\n"," 59/200 [=======\u003e......................] - ETA: 59s - loss: 1.1726 - accuracy: 0.7007\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 60/200 [========\u003e.....................] - ETA: 58s - loss: 1.1761 - accuracy: 0.7005\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 61/200 [========\u003e.....................] - ETA: 58s - loss: 1.1768 - accuracy: 0.6998\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 62/200 [========\u003e.....................] - ETA: 57s - loss: 1.1768 - accuracy: 0.7006\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 63/200 [========\u003e.....................] - ETA: 57s - loss: 1.1745 - accuracy: 0.7009\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 64/200 [========\u003e.....................] - ETA: 57s - loss: 1.1733 - accuracy: 0.7014\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 65/200 [========\u003e.....................] - ETA: 56s - loss: 1.1762 - accuracy: 0.7014\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 66/200 [========\u003e.....................] - ETA: 56s - loss: 1.1769 - accuracy: 0.7008\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 67/200 [=========\u003e....................] - ETA: 55s - loss: 1.1721 - accuracy: 0.7022\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 68/200 [=========\u003e....................] - ETA: 55s - loss: 1.1725 - accuracy: 0.7020\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 69/200 [=========\u003e....................] - ETA: 55s - loss: 1.1773 - accuracy: 0.7009\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 70/200 [=========\u003e....................] - ETA: 54s - loss: 1.1808 - accuracy: 0.6996\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 71/200 [=========\u003e....................] - ETA: 54s - loss: 1.1830 - accuracy: 0.6983\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 72/200 [=========\u003e....................] - ETA: 53s - loss: 1.1846 - accuracy: 0.6979\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 73/200 [=========\u003e....................] - ETA: 53s - loss: 1.1862 - accuracy: 0.6980\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 74/200 [==========\u003e...................] - ETA: 53s - loss: 1.1807 - accuracy: 0.7002\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 75/200 [==========\u003e...................] - ETA: 52s - loss: 1.1805 - accuracy: 0.7002\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 76/200 [==========\u003e...................] - ETA: 52s - loss: 1.1823 - accuracy: 0.6994\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 77/200 [==========\u003e...................] - ETA: 51s - loss: 1.1812 - accuracy: 0.7011\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 78/200 [==========\u003e...................] - ETA: 51s - loss: 1.1827 - accuracy: 0.7019\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 79/200 [==========\u003e...................] - ETA: 50s - loss: 1.1848 - accuracy: 0.7013\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 80/200 [===========\u003e..................] - ETA: 50s - loss: 1.1857 - accuracy: 0.7014\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 81/200 [===========\u003e..................] - ETA: 50s - loss: 1.1847 - accuracy: 0.7014\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 82/200 [===========\u003e..................] - ETA: 49s - loss: 1.1876 - accuracy: 0.7005\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 83/200 [===========\u003e..................] - ETA: 49s - loss: 1.1868 - accuracy: 0.7007\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 84/200 [===========\u003e..................] - ETA: 48s - loss: 1.1858 - accuracy: 0.7013\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 85/200 [===========\u003e..................] - ETA: 48s - loss: 1.1886 - accuracy: 0.7007\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 86/200 [===========\u003e..................] - ETA: 48s - loss: 1.1887 - accuracy: 0.7004\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 87/200 [============\u003e.................] - ETA: 47s - loss: 1.1880 - accuracy: 0.7006\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 88/200 [============\u003e.................] - ETA: 47s - loss: 1.1883 - accuracy: 0.7006\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 89/200 [============\u003e.................] - ETA: 46s - loss: 1.1842 - accuracy: 0.7015\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 90/200 [============\u003e.................] - ETA: 46s - loss: 1.1858 - accuracy: 0.7010\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 91/200 [============\u003e.................] - ETA: 45s - loss: 1.1836 - accuracy: 0.7016\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 92/200 [============\u003e.................] - ETA: 45s - loss: 1.1835 - accuracy: 0.7021\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 93/200 [============\u003e.................] - ETA: 45s - loss: 1.1831 - accuracy: 0.7018\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 94/200 [=============\u003e................] - ETA: 44s - loss: 1.1826 - accuracy: 0.7021\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 95/200 [=============\u003e................] - ETA: 44s - loss: 1.1852 - accuracy: 0.7015\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 96/200 [=============\u003e................] - ETA: 43s - loss: 1.1854 - accuracy: 0.7013\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 97/200 [=============\u003e................] - ETA: 43s - loss: 1.1866 - accuracy: 0.7012\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 98/200 [=============\u003e................] - ETA: 42s - loss: 1.1878 - accuracy: 0.7011\n","Epoch 00010: accuracy did not improve from 0.79688\n"," 99/200 [=============\u003e................] - ETA: 42s - loss: 1.1872 - accuracy: 0.7017\n","Epoch 00010: accuracy did not improve from 0.79688\n","100/200 [==============\u003e...............] - ETA: 42s - loss: 1.1878 - accuracy: 0.7017\n","Epoch 00010: accuracy did not improve from 0.79688\n","101/200 [==============\u003e...............] - ETA: 41s - loss: 1.1871 - accuracy: 0.7016\n","Epoch 00010: accuracy did not improve from 0.79688\n","102/200 [==============\u003e...............] - ETA: 41s - loss: 1.1823 - accuracy: 0.7027\n","Epoch 00010: accuracy did not improve from 0.79688\n","103/200 [==============\u003e...............] - ETA: 40s - loss: 1.1825 - accuracy: 0.7024\n","Epoch 00010: accuracy did not improve from 0.79688\n","104/200 [==============\u003e...............] - ETA: 40s - loss: 1.1805 - accuracy: 0.7034\n","Epoch 00010: accuracy did not improve from 0.79688\n","105/200 [==============\u003e...............] - ETA: 39s - loss: 1.1780 - accuracy: 0.7040\n","Epoch 00010: accuracy did not improve from 0.79688\n","106/200 [==============\u003e...............] - ETA: 39s - loss: 1.1823 - accuracy: 0.7037\n","Epoch 00010: accuracy did not improve from 0.79688\n","107/200 [===============\u003e..............] - ETA: 39s - loss: 1.1830 - accuracy: 0.7031\n","Epoch 00010: accuracy did not improve from 0.79688\n","108/200 [===============\u003e..............] - ETA: 38s - loss: 1.1820 - accuracy: 0.7038\n","Epoch 00010: accuracy did not improve from 0.79688\n","109/200 [===============\u003e..............] - ETA: 38s - loss: 1.1777 - accuracy: 0.7051\n","Epoch 00010: accuracy did not improve from 0.79688\n","110/200 [===============\u003e..............] - ETA: 37s - loss: 1.1777 - accuracy: 0.7050\n","Epoch 00010: accuracy did not improve from 0.79688\n","111/200 [===============\u003e..............] - ETA: 37s - loss: 1.1771 - accuracy: 0.7054\n","Epoch 00010: accuracy did not improve from 0.79688\n","112/200 [===============\u003e..............] - ETA: 36s - loss: 1.1759 - accuracy: 0.7056\n","Epoch 00010: accuracy did not improve from 0.79688\n","113/200 [===============\u003e..............] - ETA: 36s - loss: 1.1752 - accuracy: 0.7060\n","Epoch 00010: accuracy did not improve from 0.79688\n","114/200 [================\u003e.............] - ETA: 36s - loss: 1.1757 - accuracy: 0.7059\n","Epoch 00010: accuracy did not improve from 0.79688\n","115/200 [================\u003e.............] - ETA: 35s - loss: 1.1748 - accuracy: 0.7065\n","Epoch 00010: accuracy did not improve from 0.79688\n","116/200 [================\u003e.............] - ETA: 35s - loss: 1.1743 - accuracy: 0.7069\n","Epoch 00010: accuracy did not improve from 0.79688\n","117/200 [================\u003e.............] - ETA: 34s - loss: 1.1748 - accuracy: 0.7070\n","Epoch 00010: accuracy did not improve from 0.79688\n","118/200 [================\u003e.............] - ETA: 34s - loss: 1.1752 - accuracy: 0.7072\n","Epoch 00010: accuracy did not improve from 0.79688\n","119/200 [================\u003e.............] - ETA: 33s - loss: 1.1741 - accuracy: 0.7077\n","Epoch 00010: accuracy did not improve from 0.79688\n","120/200 [=================\u003e............] - ETA: 33s - loss: 1.1741 - accuracy: 0.7078\n","Epoch 00010: accuracy did not improve from 0.79688\n","121/200 [=================\u003e............] - ETA: 33s - loss: 1.1730 - accuracy: 0.7078\n","Epoch 00010: accuracy did not improve from 0.79688\n","122/200 [=================\u003e............] - ETA: 32s - loss: 1.1716 - accuracy: 0.7081\n","Epoch 00010: accuracy did not improve from 0.79688\n","123/200 [=================\u003e............] - ETA: 32s - loss: 1.1723 - accuracy: 0.7080\n","Epoch 00010: accuracy did not improve from 0.79688\n","124/200 [=================\u003e............] - ETA: 31s - loss: 1.1729 - accuracy: 0.7078\n","Epoch 00010: accuracy did not improve from 0.79688\n","125/200 [=================\u003e............] - ETA: 31s - loss: 1.1707 - accuracy: 0.7082\n","Epoch 00010: accuracy did not improve from 0.79688\n","126/200 [=================\u003e............] - ETA: 30s - loss: 1.1706 - accuracy: 0.7081\n","Epoch 00010: accuracy did not improve from 0.79688\n","127/200 [==================\u003e...........] - ETA: 30s - loss: 1.1707 - accuracy: 0.7076\n","Epoch 00010: accuracy did not improve from 0.79688\n","128/200 [==================\u003e...........] - ETA: 30s - loss: 1.1708 - accuracy: 0.7076\n","Epoch 00010: accuracy did not improve from 0.79688\n","129/200 [==================\u003e...........] - ETA: 29s - loss: 1.1681 - accuracy: 0.7085\n","Epoch 00010: accuracy did not improve from 0.79688\n","130/200 [==================\u003e...........] - ETA: 29s - loss: 1.1686 - accuracy: 0.7081\n","Epoch 00010: accuracy did not improve from 0.79688\n","131/200 [==================\u003e...........] - ETA: 28s - loss: 1.1694 - accuracy: 0.7079\n","Epoch 00010: accuracy did not improve from 0.79688\n","132/200 [==================\u003e...........] - ETA: 28s - loss: 1.1723 - accuracy: 0.7077\n","Epoch 00010: accuracy did not improve from 0.79688\n","133/200 [==================\u003e...........] - ETA: 28s - loss: 1.1726 - accuracy: 0.7075\n","Epoch 00010: accuracy did not improve from 0.79688\n","134/200 [===================\u003e..........] - ETA: 27s - loss: 1.1722 - accuracy: 0.7076\n","Epoch 00010: accuracy did not improve from 0.79688\n","135/200 [===================\u003e..........] - ETA: 27s - loss: 1.1736 - accuracy: 0.7069\n","Epoch 00010: accuracy did not improve from 0.79688\n","136/200 [===================\u003e..........] - ETA: 26s - loss: 1.1730 - accuracy: 0.7070\n","Epoch 00010: accuracy did not improve from 0.79688\n","137/200 [===================\u003e..........] - ETA: 26s - loss: 1.1748 - accuracy: 0.7065\n","Epoch 00010: accuracy did not improve from 0.79688\n","138/200 [===================\u003e..........] - ETA: 25s - loss: 1.1734 - accuracy: 0.7071\n","Epoch 00010: accuracy did not improve from 0.79688\n","139/200 [===================\u003e..........] - ETA: 25s - loss: 1.1728 - accuracy: 0.7071\n","Epoch 00010: accuracy did not improve from 0.79688\n","140/200 [====================\u003e.........] - ETA: 25s - loss: 1.1740 - accuracy: 0.7066\n","Epoch 00010: accuracy did not improve from 0.79688\n","141/200 [====================\u003e.........] - ETA: 24s - loss: 1.1748 - accuracy: 0.7064\n","Epoch 00010: accuracy did not improve from 0.79688\n","142/200 [====================\u003e.........] - ETA: 24s - loss: 1.1772 - accuracy: 0.7059\n","Epoch 00010: accuracy did not improve from 0.79688\n","143/200 [====================\u003e.........] - ETA: 23s - loss: 1.1780 - accuracy: 0.7059\n","Epoch 00010: accuracy did not improve from 0.79688\n","144/200 [====================\u003e.........] - ETA: 23s - loss: 1.1756 - accuracy: 0.7064\n","Epoch 00010: accuracy did not improve from 0.79688\n","145/200 [====================\u003e.........] - ETA: 22s - loss: 1.1750 - accuracy: 0.7065\n","Epoch 00010: accuracy did not improve from 0.79688\n","146/200 [====================\u003e.........] - ETA: 22s - loss: 1.1754 - accuracy: 0.7063\n","Epoch 00010: accuracy did not improve from 0.79688\n","147/200 [=====================\u003e........] - ETA: 22s - loss: 1.1748 - accuracy: 0.7063\n","Epoch 00010: accuracy did not improve from 0.79688\n","148/200 [=====================\u003e........] - ETA: 21s - loss: 1.1745 - accuracy: 0.7062\n","Epoch 00010: accuracy did not improve from 0.79688\n","149/200 [=====================\u003e........] - ETA: 21s - loss: 1.1735 - accuracy: 0.7065\n","Epoch 00010: accuracy did not improve from 0.79688\n","150/200 [=====================\u003e........] - ETA: 20s - loss: 1.1734 - accuracy: 0.7069\n","Epoch 00010: accuracy did not improve from 0.79688\n","151/200 [=====================\u003e........] - ETA: 20s - loss: 1.1739 - accuracy: 0.7067\n","Epoch 00010: accuracy did not improve from 0.79688\n","152/200 [=====================\u003e........] - ETA: 20s - loss: 1.1763 - accuracy: 0.7063\n","Epoch 00010: accuracy did not improve from 0.79688\n","153/200 [=====================\u003e........] - ETA: 19s - loss: 1.1764 - accuracy: 0.7061\n","Epoch 00010: accuracy did not improve from 0.79688\n","154/200 [======================\u003e.......] - ETA: 19s - loss: 1.1764 - accuracy: 0.7062\n","Epoch 00010: accuracy did not improve from 0.79688\n","155/200 [======================\u003e.......] - ETA: 18s - loss: 1.1767 - accuracy: 0.7060\n","Epoch 00010: accuracy did not improve from 0.79688\n","156/200 [======================\u003e.......] - ETA: 18s - loss: 1.1766 - accuracy: 0.7059\n","Epoch 00010: accuracy did not improve from 0.79688\n","157/200 [======================\u003e.......] - ETA: 17s - loss: 1.1775 - accuracy: 0.7058\n","Epoch 00010: accuracy did not improve from 0.79688\n","158/200 [======================\u003e.......] - ETA: 17s - loss: 1.1785 - accuracy: 0.7054\n","Epoch 00010: accuracy did not improve from 0.79688\n","159/200 [======================\u003e.......] - ETA: 17s - loss: 1.1768 - accuracy: 0.7057\n","Epoch 00010: accuracy did not improve from 0.79688\n","160/200 [=======================\u003e......] - ETA: 16s - loss: 1.1764 - accuracy: 0.7058\n","Epoch 00010: accuracy did not improve from 0.79688\n","161/200 [=======================\u003e......] - ETA: 16s - loss: 1.1770 - accuracy: 0.7056\n","Epoch 00010: accuracy did not improve from 0.79688\n","162/200 [=======================\u003e......] - ETA: 15s - loss: 1.1760 - accuracy: 0.7059\n","Epoch 00010: accuracy did not improve from 0.79688\n","163/200 [=======================\u003e......] - ETA: 15s - loss: 1.1757 - accuracy: 0.7060\n","Epoch 00010: accuracy did not improve from 0.79688\n","164/200 [=======================\u003e......] - ETA: 15s - loss: 1.1781 - accuracy: 0.7051\n","Epoch 00010: accuracy did not improve from 0.79688\n","165/200 [=======================\u003e......] - ETA: 14s - loss: 1.1784 - accuracy: 0.7048\n","Epoch 00010: accuracy did not improve from 0.79688\n","166/200 [=======================\u003e......] - ETA: 14s - loss: 1.1777 - accuracy: 0.7050\n","Epoch 00010: accuracy did not improve from 0.79688\n","167/200 [========================\u003e.....] - ETA: 13s - loss: 1.1785 - accuracy: 0.7050\n","Epoch 00010: accuracy did not improve from 0.79688\n","168/200 [========================\u003e.....] - ETA: 13s - loss: 1.1773 - accuracy: 0.7052\n","Epoch 00010: accuracy did not improve from 0.79688\n","169/200 [========================\u003e.....] - ETA: 12s - loss: 1.1760 - accuracy: 0.7053\n","Epoch 00010: accuracy did not improve from 0.79688\n","170/200 [========================\u003e.....] - ETA: 12s - loss: 1.1749 - accuracy: 0.7055\n","Epoch 00010: accuracy did not improve from 0.79688\n","171/200 [========================\u003e.....] - ETA: 12s - loss: 1.1753 - accuracy: 0.7053\n","Epoch 00010: accuracy did not improve from 0.79688\n","172/200 [========================\u003e.....] - ETA: 11s - loss: 1.1756 - accuracy: 0.7054\n","Epoch 00010: accuracy did not improve from 0.79688\n","173/200 [========================\u003e.....] - ETA: 11s - loss: 1.1761 - accuracy: 0.7049\n","Epoch 00010: accuracy did not improve from 0.79688\n","174/200 [=========================\u003e....] - ETA: 10s - loss: 1.1759 - accuracy: 0.7050\n","Epoch 00010: accuracy did not improve from 0.79688\n","175/200 [=========================\u003e....] - ETA: 10s - loss: 1.1757 - accuracy: 0.7051\n","Epoch 00010: accuracy did not improve from 0.79688\n","176/200 [=========================\u003e....] - ETA: 10s - loss: 1.1738 - accuracy: 0.7054\n","Epoch 00010: accuracy did not improve from 0.79688\n","177/200 [=========================\u003e....] - ETA: 9s - loss: 1.1747 - accuracy: 0.7050 \n","Epoch 00010: accuracy did not improve from 0.79688\n","178/200 [=========================\u003e....] - ETA: 9s - loss: 1.1741 - accuracy: 0.7052\n","Epoch 00010: accuracy did not improve from 0.79688\n","179/200 [=========================\u003e....] - ETA: 8s - loss: 1.1749 - accuracy: 0.7050\n","Epoch 00010: accuracy did not improve from 0.79688\n","180/200 [==========================\u003e...] - ETA: 8s - loss: 1.1737 - accuracy: 0.7055\n","Epoch 00010: accuracy did not improve from 0.79688\n","181/200 [==========================\u003e...] - ETA: 7s - loss: 1.1741 - accuracy: 0.7055\n","Epoch 00010: accuracy did not improve from 0.79688\n","182/200 [==========================\u003e...] - ETA: 7s - loss: 1.1743 - accuracy: 0.7052\n","Epoch 00010: accuracy did not improve from 0.79688\n","183/200 [==========================\u003e...] - ETA: 7s - loss: 1.1737 - accuracy: 0.7053\n","Epoch 00010: accuracy did not improve from 0.79688\n","184/200 [==========================\u003e...] - ETA: 6s - loss: 1.1717 - accuracy: 0.7058\n","Epoch 00010: accuracy did not improve from 0.79688\n","185/200 [==========================\u003e...] - ETA: 6s - loss: 1.1722 - accuracy: 0.7059\n","Epoch 00010: accuracy did not improve from 0.79688\n","186/200 [==========================\u003e...] - ETA: 5s - loss: 1.1711 - accuracy: 0.7063\n","Epoch 00010: accuracy did not improve from 0.79688\n","187/200 [===========================\u003e..] - ETA: 5s - loss: 1.1689 - accuracy: 0.7069\n","Epoch 00010: accuracy did not improve from 0.79688\n","188/200 [===========================\u003e..] - ETA: 5s - loss: 1.1709 - accuracy: 0.7063\n","Epoch 00010: accuracy did not improve from 0.79688\n","189/200 [===========================\u003e..] - ETA: 4s - loss: 1.1703 - accuracy: 0.7066\n","Epoch 00010: accuracy did not improve from 0.79688\n","190/200 [===========================\u003e..] - ETA: 4s - loss: 1.1693 - accuracy: 0.7068\n","Epoch 00010: accuracy did not improve from 0.79688\n","191/200 [===========================\u003e..] - ETA: 3s - loss: 1.1708 - accuracy: 0.7066\n","Epoch 00010: accuracy did not improve from 0.79688\n","192/200 [===========================\u003e..] - ETA: 3s - loss: 1.1690 - accuracy: 0.7074\n","Epoch 00010: accuracy did not improve from 0.79688\n","193/200 [===========================\u003e..] - ETA: 2s - loss: 1.1703 - accuracy: 0.7073\n","Epoch 00010: accuracy did not improve from 0.79688\n","194/200 [============================\u003e.] - ETA: 2s - loss: 1.1698 - accuracy: 0.7073\n","Epoch 00010: accuracy did not improve from 0.79688\n","195/200 [============================\u003e.] - ETA: 2s - loss: 1.1697 - accuracy: 0.7071\n","Epoch 00010: accuracy did not improve from 0.79688\n","196/200 [============================\u003e.] - ETA: 1s - loss: 1.1691 - accuracy: 0.7071\n","Epoch 00010: accuracy did not improve from 0.79688\n","197/200 [============================\u003e.] - ETA: 1s - loss: 1.1685 - accuracy: 0.7071\n","Epoch 00010: accuracy did not improve from 0.79688\n","198/200 [============================\u003e.] - ETA: 0s - loss: 1.1687 - accuracy: 0.7074\n","Epoch 00010: accuracy did not improve from 0.79688\n","199/200 [============================\u003e.] - ETA: 0s - loss: 1.1684 - accuracy: 0.7074\n","Epoch 00010: accuracy did not improve from 0.79688\n","200/200 [==============================] - ETA: 0s - loss: 1.1690 - accuracy: 0.7073WARNING:tensorflow:Learning rate reduction is conditioned on metric `val_loss` which is not available. Available metrics are: loss,accuracy,lr\n","200/200 [==============================] - 84s 419ms/step - loss: 1.1690 - accuracy: 0.7073 - lr: 0.0010\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_16.h5')\n","\n","hist = model.fit(train_generator, epochs=10, steps_per_epoch=200, validation_steps=200, validation_data=validation_generator, verbose=1, callbacks=[lr_reducer, checkpoint])\n","\n","model.save('/content/drive/My Drive/Colab Notebooks/EIP Models/Exp_25_17.h5')"]},{"cell_type":"markdown","metadata":{"id":"kgq7cgymat1Y"},"source":["#Model Evaluation"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":221,"status":"ok","timestamp":1639453408145,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"oe98jZ7kaAdJ","outputId":"318982f9-2eba-489b-9115-feba11d27f12"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 10000 validated image filenames belonging to 200 classes.\n"]}],"source":["valid_datagen = ImageDataGenerator(rescale=1./255)\n","validation_generator = valid_datagen.flow_from_dataframe(val_data, directory='./tiny-imagenet-200/val/images/', x_col='File', y_col='Class', target_size=(64, 64),\n","                                                    color_mode='rgb', class_mode='categorical', batch_size=64, shuffle=True, seed=42)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24868,"status":"ok","timestamp":1639458181762,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"rN0oEHEpY70E","outputId":"e6ced6de-c053-4f21-d913-50d5006e4cb1"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: UserWarning: `Model.evaluate_generator` is deprecated and will be removed in a future version. Please use `Model.evaluate`, which supports generators.\n","  \"\"\"\n"]},{"name":"stdout","output_type":"stream","text":["157/157 [==============================] - 17s 108ms/step - loss: 2.1505 - accuracy: 0.5291\n","Test loss: 2.1505320072174072\n","Test accuracy: 0.5291000008583069\n"]}],"source":["model = load_model('/content/drive/My Drive/Colab Notebooks/EIP Models/best.h5')\n","\n","validation_steps_per_epoch = np.math.ceil(validation_generator.samples / validation_generator.batch_size)\n","\n","score = model.evaluate_generator(validation_generator, verbose=1, steps=validation_steps_per_epoch)\n","print('Test loss:', score[0])\n","print('Test accuracy:', score[1])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":149,"status":"ok","timestamp":1639458438780,"user":{"displayName":"David Ho","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01836182574271675803"},"user_tz":300},"id":"Ywv86yKaVkYx","outputId":"3cd302d8-1af0-4b65-b764-64e5dd7ea70e"},"outputs":[{"data":{"text/plain":["{'accuracy': [0.6973437666893005,\n","  0.6951754093170166,\n","  0.6940006017684937,\n","  0.7017968893051147,\n","  0.701676070690155,\n","  0.7007812261581421,\n","  0.7048437595367432,\n","  0.7057031393051147,\n","  0.7107031345367432,\n","  0.70703125],\n"," 'loss': [1.1947276592254639,\n","  1.2139618396759033,\n","  1.2024028301239014,\n","  1.173510193824768,\n","  1.1724004745483398,\n","  1.179470181465149,\n","  1.1575645208358765,\n","  1.169630765914917,\n","  1.1415594816207886,\n","  1.1508889198303223],\n"," 'lr': [0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001],\n"," 'val_accuracy': [0.5092999935150146],\n"," 'val_loss': [2.256498336791992]}"]},"execution_count":77,"metadata":{},"output_type":"execute_result"}],"source":["hist.history"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["UxCBlIY7EBcX"],"name":"Copy of Network 1","provenance":[{"file_id":"https://github.com/ZohebAbai/Tiny-ImageNet-Challenge/blob/master/TinyImageNet_Network_1.ipynb","timestamp":1639413676805}],"version":""},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}